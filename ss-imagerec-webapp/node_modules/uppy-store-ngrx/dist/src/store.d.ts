import { Store } from '@ngrx/store';
import { Observable } from 'rxjs/Observable';
import { UppyFiles } from './interfaces';
export interface NgrxStoreOptions<T, U> {
    store: Store<T>;
    id?: any;
    selector?: any;
}
export interface INgrxStore<T, U> {
    getStore(): Store<T>;
    getFiles(): Observable<UppyFiles<U>>;
}
/**
 * T - interface of root state;
 * U - interface of custom file;
 */
export declare class NgrxStore<T, U> implements INgrxStore<T, U> {
    _store: Store<T>;
    _id: any;
    _selector: any;
    constructor(opts: NgrxStoreOptions<T, U>);
    setState(patch: any): void;
    getState(): any;
    subscribe(cb: any): Function;
    getStore(): Store<any>;
    getFiles(): Observable<UppyFiles<U>>;
}
export declare function createNgrxStore<T, U>(opts: NgrxStoreOptions<T, U>): NgrxStore<T, U>;
