{"version":3,"sources":["../../src/react/DashboardModal.js"],"names":["React","require","PropTypes","UppyCore","Uppy","DashboardPlugin","h","createElement","DashboardModal","componentDidMount","uppy","props","options","target","container","onRequestCloseModal","onRequestClose","use","plugin","getPlugin","open","openModal","componentWillUnmount","removePlugin","componentWillReceiveProps","nextProps","closeModal","render","ref","Component","propTypes","instanceOf","isRequired","bool","func","plugins","arrayOf","string","maxWidth","number","maxHeight","showProgressDetails","hideUploadButton","note","locale","object","defaultProps","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,YAAYD,QAAQ,YAAR,CAAlB;AACA,IAAME,WAAWF,QAAQ,cAAR,EAAwBG,IAAzC;AACA,IAAMC,kBAAkBJ,QAAQ,sBAAR,CAAxB;;AAEA,IAAMK,IAAIN,MAAMO,aAAhB;;AAEA;;;;;IAKMC,c;;;;;;;;;2BACJC,iB,gCAAqB;AACnB,QAAMC,OAAO,KAAKC,KAAL,CAAWD,IAAxB;AACA,QAAME,UAAU,SACd,EADc,EAEd,KAAKD,KAFS,EAGd;AACEE,cAAQ,KAAKC,SADf;AAEEC,2BAAqB,KAAKJ,KAAL,CAAWK;AAFlC,KAHc,CAAhB;AAQA,WAAOJ,QAAQF,IAAf;AACAA,SAAKO,GAAL,CAASZ,eAAT,EAA0BO,OAA1B;;AAEA,SAAKM,MAAL,GAAcR,KAAKS,SAAL,CAAe,WAAf,CAAd;AACA,QAAI,KAAKR,KAAL,CAAWS,IAAf,EAAqB;AACnB,WAAKF,MAAL,CAAYG,SAAZ;AACD;AACF,G;;2BAEDC,oB,mCAAwB;AACtB,QAAMZ,OAAO,KAAKC,KAAL,CAAWD,IAAxB;;AAEAA,SAAKa,YAAL,CAAkB,KAAKL,MAAvB;AACD,G;;2BAEDM,yB,sCAA2BC,S,EAAW;AACpC,QAAI,KAAKd,KAAL,CAAWS,IAAX,IAAmB,CAACK,UAAUL,IAAlC,EAAwC;AACtC,WAAKF,MAAL,CAAYQ,UAAZ;AACD,KAFD,MAEO,IAAI,CAAC,KAAKf,KAAL,CAAWS,IAAZ,IAAoBK,UAAUL,IAAlC,EAAwC;AAC7C,WAAKF,MAAL,CAAYG,SAAZ;AACD;AACF,G;;2BAEDM,M,qBAAU;AAAA;;AACR,WAAOrB,EAAE,KAAF,EAAS;AACdsB,WAAK,aAACd,SAAD,EAAe;AAClB,eAAKA,SAAL,GAAiBA,SAAjB;AACD;AAHa,KAAT,CAAP;AAKD,G;;;EAxC0Bd,MAAM6B,S;;AA2CnCrB,eAAesB,SAAf,GAA2B;AACzBpB,QAAMR,UAAU6B,UAAV,CAAqB5B,QAArB,EAA+B6B,UADZ;AAEzBZ,QAAMlB,UAAU+B,IAFS;AAGzBjB,kBAAgBd,UAAUgC,IAHD;AAIzBC,WAASjC,UAAUkC,OAAV,CAAkBlC,UAAUmC,MAA5B,CAJgB;AAKzBC,YAAUpC,UAAUqC,MALK;AAMzBC,aAAWtC,UAAUqC,MANI;AAOzBE,uBAAqBvC,UAAU+B,IAPN;AAQzBS,oBAAkBxC,UAAU+B,IARH;AASzBU,QAAMzC,UAAUmC,MATS;AAUzBO,UAAQ1C,UAAU2C;AAVO,CAA3B;;AAaArC,eAAesC,YAAf,GAA8B,EAA9B;;AAGAC,OAAOC,OAAP,GAAiBxC,cAAjB","file":"DashboardModal.js","sourcesContent":["const React = require('react')\nconst PropTypes = require('prop-types')\nconst UppyCore = require('../core/Core').Uppy\nconst DashboardPlugin = require('../plugins/Dashboard')\n\nconst h = React.createElement\n\n/**\n * React Component that renders a Dashboard for an Uppy instance in a Modal\n * dialog. Visibility of the Modal is toggled using the `open` prop.\n */\n\nclass DashboardModal extends React.Component {\n  componentDidMount () {\n    const uppy = this.props.uppy\n    const options = Object.assign(\n      {},\n      this.props,\n      {\n        target: this.container,\n        onRequestCloseModal: this.props.onRequestClose\n      }\n    )\n    delete options.uppy\n    uppy.use(DashboardPlugin, options)\n\n    this.plugin = uppy.getPlugin('Dashboard')\n    if (this.props.open) {\n      this.plugin.openModal()\n    }\n  }\n\n  componentWillUnmount () {\n    const uppy = this.props.uppy\n\n    uppy.removePlugin(this.plugin)\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (this.props.open && !nextProps.open) {\n      this.plugin.closeModal()\n    } else if (!this.props.open && nextProps.open) {\n      this.plugin.openModal()\n    }\n  }\n\n  render () {\n    return h('div', {\n      ref: (container) => {\n        this.container = container\n      }\n    })\n  }\n}\n\nDashboardModal.propTypes = {\n  uppy: PropTypes.instanceOf(UppyCore).isRequired,\n  open: PropTypes.bool,\n  onRequestClose: PropTypes.func,\n  plugins: PropTypes.arrayOf(PropTypes.string),\n  maxWidth: PropTypes.number,\n  maxHeight: PropTypes.number,\n  showProgressDetails: PropTypes.bool,\n  hideUploadButton: PropTypes.bool,\n  note: PropTypes.string,\n  locale: PropTypes.object\n}\n\nDashboardModal.defaultProps = {\n}\n\nmodule.exports = DashboardModal\n"]}