{"version":3,"sources":["../../src/react/ProgressBar.js"],"names":["React","require","PropTypes","UppyCore","Uppy","ProgressBarPlugin","h","createElement","ProgressBar","componentDidMount","uppy","props","options","target","container","use","plugin","getPlugin","componentWillUnmount","removePlugin","render","ref","Component","propTypes","instanceOf","isRequired","fixed","bool","defaultProps","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,YAAYD,QAAQ,YAAR,CAAlB;AACA,IAAME,WAAWF,QAAQ,SAAR,EAAmBG,IAApC;AACA,IAAMC,oBAAoBJ,QAAQ,wBAAR,CAA1B;;AAEA,IAAMK,IAAIN,MAAMO,aAAhB;;AAEA;;;;IAIMC,W;;;;;;;;;wBACJC,iB,gCAAqB;AACnB,QAAMC,OAAO,KAAKC,KAAL,CAAWD,IAAxB;AACA,QAAME,UAAU,SACd,EADc,EAEd,KAAKD,KAFS,EAGd,EAAEE,QAAQ,KAAKC,SAAf,EAHc,CAAhB;AAKA,WAAOF,QAAQF,IAAf;;AAEAA,SAAKK,GAAL,CAASV,iBAAT,EAA4BO,OAA5B;;AAEA,SAAKI,MAAL,GAAcN,KAAKO,SAAL,CAAe,aAAf,CAAd;AACD,G;;wBAEDC,oB,mCAAwB;AACtB,QAAMR,OAAO,KAAKC,KAAL,CAAWD,IAAxB;;AAEAA,SAAKS,YAAL,CAAkB,KAAKH,MAAvB;AACD,G;;wBAEDI,M,qBAAU;AAAA;;AACR,WAAOd,EAAE,KAAF,EAAS;AACde,WAAK,aAACP,SAAD,EAAe;AAClB,eAAKA,SAAL,GAAiBA,SAAjB;AACD;AAHa,KAAT,CAAP;AAKD,G;;;EA3BuBd,MAAMsB,S;;AA8BhCd,YAAYe,SAAZ,GAAwB;AACtBb,QAAMR,UAAUsB,UAAV,CAAqBrB,QAArB,EAA+BsB,UADf;AAEtBC,SAAOxB,UAAUyB;AAFK,CAAxB;AAIAnB,YAAYoB,YAAZ,GAA2B,EAA3B;;AAGAC,OAAOC,OAAP,GAAiBtB,WAAjB","file":"ProgressBar.js","sourcesContent":["const React = require('react')\nconst PropTypes = require('prop-types')\nconst UppyCore = require('../core').Uppy\nconst ProgressBarPlugin = require('../plugins/ProgressBar')\n\nconst h = React.createElement\n\n/**\n * React component that renders a progress bar at the top of the page.\n */\n\nclass ProgressBar extends React.Component {\n  componentDidMount () {\n    const uppy = this.props.uppy\n    const options = Object.assign(\n      {},\n      this.props,\n      { target: this.container }\n    )\n    delete options.uppy\n\n    uppy.use(ProgressBarPlugin, options)\n\n    this.plugin = uppy.getPlugin('ProgressBar')\n  }\n\n  componentWillUnmount () {\n    const uppy = this.props.uppy\n\n    uppy.removePlugin(this.plugin)\n  }\n\n  render () {\n    return h('div', {\n      ref: (container) => {\n        this.container = container\n      }\n    })\n  }\n}\n\nProgressBar.propTypes = {\n  uppy: PropTypes.instanceOf(UppyCore).isRequired,\n  fixed: PropTypes.bool\n}\nProgressBar.defaultProps = {\n}\n\nmodule.exports = ProgressBar\n"]}