{"version":3,"sources":["../../src/core/UppySocket.js"],"names":["ee","require","module","exports","opts","queued","isOpen","socket","WebSocket","target","emitter","onopen","e","length","first","send","action","payload","slice","onclose","_handleMessage","bind","onmessage","close","emit","on","once","push","JSON","stringify","handler","console","log","message","parse","data","err"],"mappings":"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","file":"UppySocket.js","sourcesContent":["const ee = require('namespace-emitter')\n\nmodule.exports = class UppySocket {\n  constructor (opts) {\n    this.queued = []\n    this.isOpen = false\n    this.socket = new WebSocket(opts.target)\n    this.emitter = ee()\n\n    this.socket.onopen = (e) => {\n      this.isOpen = true\n\n      while (this.queued.length > 0 && this.isOpen) {\n        const first = this.queued[0]\n        this.send(first.action, first.payload)\n        this.queued = this.queued.slice(1)\n      }\n    }\n\n    this.socket.onclose = (e) => {\n      this.isOpen = false\n    }\n\n    this._handleMessage = this._handleMessage.bind(this)\n\n    this.socket.onmessage = this._handleMessage\n\n    this.close = this.close.bind(this)\n    this.emit = this.emit.bind(this)\n    this.on = this.on.bind(this)\n    this.once = this.once.bind(this)\n    this.send = this.send.bind(this)\n  }\n\n  close () {\n    return this.socket.close()\n  }\n\n  send (action, payload) {\n    // attach uuid\n\n    if (!this.isOpen) {\n      this.queued.push({action, payload})\n      return\n    }\n\n    this.socket.send(JSON.stringify({\n      action,\n      payload\n    }))\n  }\n\n  on (action, handler) {\n    console.log(action)\n    this.emitter.on(action, handler)\n  }\n\n  emit (action, payload) {\n    console.log(action)\n    this.emitter.emit(action, payload)\n  }\n\n  once (action, handler) {\n    this.emitter.once(action, handler)\n  }\n\n  _handleMessage (e) {\n    try {\n      const message = JSON.parse(e.data)\n      console.log(message)\n      this.emit(message.action, message.payload)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n}\n"]}