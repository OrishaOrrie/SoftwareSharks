{"version":3,"sources":["../../../src/plugins/Dashboard/FileItem.js"],"names":["require","getETA","getSpeed","prettyETA","getFileNameAndExtension","truncateString","copyToClipboard","prettyBytes","FileItemProgress","getFileTypeIcon","iconEdit","iconCopy","iconRetry","classNames","h","module","exports","fileItem","props","file","acquirers","isProcessing","progress","preprocess","postprocess","isUploaded","uploadComplete","error","uploadInProgressOrComplete","uploadStarted","uploadInProgress","isPaused","fileName","meta","name","truncatedFileName","isWide","onPauseResumeCancelRetry","ev","retryUpload","id","resumableUploads","pauseUpload","cancelUpload","dashboardItemClass","backgroundColor","type","color","preview","icon","percentage","fileID","showProgressDetails","i18n","uploadURL","extension","data","size","source","map","acquirer","e","showFileCard","then","log","info","catch","removeFile"],"mappings":"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","file":"FileItem.js","sourcesContent":["const { getETA,\n         getSpeed,\n         prettyETA,\n         getFileNameAndExtension,\n         truncateString,\n         copyToClipboard } = require('../../core/Utils')\nconst prettyBytes = require('prettier-bytes')\nconst FileItemProgress = require('./FileItemProgress')\nconst getFileTypeIcon = require('./getFileTypeIcon')\nconst { iconEdit, iconCopy, iconRetry } = require('./icons')\nconst classNames = require('classnames')\nconst { h } = require('preact')\n\nmodule.exports = function fileItem (props) {\n  const file = props.file\n  const acquirers = props.acquirers\n\n  const isProcessing = file.progress.preprocess || file.progress.postprocess\n  const isUploaded = file.progress.uploadComplete && !isProcessing && !file.error\n  const uploadInProgressOrComplete = file.progress.uploadStarted || isProcessing\n  const uploadInProgress = (file.progress.uploadStarted && !file.progress.uploadComplete) || isProcessing\n  const isPaused = file.isPaused || false\n  const error = file.error || false\n\n  const fileName = getFileNameAndExtension(file.meta.name).name\n  const truncatedFileName = props.isWide ? truncateString(fileName, 14) : fileName\n\n  const onPauseResumeCancelRetry = (ev) => {\n    if (isUploaded) return\n    if (error) {\n      props.retryUpload(file.id)\n      return\n    }\n    if (props.resumableUploads) {\n      props.pauseUpload(file.id)\n    } else {\n      props.cancelUpload(file.id)\n    }\n  }\n\n  const dashboardItemClass = classNames(\n    'uppy-DashboardItem',\n    { 'is-inprogress': uploadInProgress },\n    { 'is-processing': isProcessing },\n    { 'is-complete': isUploaded },\n    { 'is-paused': isPaused },\n    { 'is-error': error },\n    { 'is-resumable': props.resumableUploads }\n  )\n\n  return <li class={dashboardItemClass} id={`uppy_${file.id}`} title={file.meta.name}>\n    <div class=\"uppy-DashboardItem-preview\">\n      <div class=\"uppy-DashboardItem-previewInnerWrap\" style={{ backgroundColor: getFileTypeIcon(file.type).color }}>\n        {file.preview\n          ? <img alt={file.name} src={file.preview} />\n          : <div class=\"uppy-DashboardItem-previewIconWrap\">\n            <span class=\"uppy-DashboardItem-previewIcon\" style={{ color: getFileTypeIcon(file.type).color }}>{getFileTypeIcon(file.type).icon}</span>\n            <svg class=\"uppy-DashboardItem-previewIconBg\" width=\"72\" height=\"93\" viewBox=\"0 0 72 93\"><g><path d=\"M24.08 5h38.922A2.997 2.997 0 0 1 66 8.003v74.994A2.997 2.997 0 0 1 63.004 86H8.996A2.998 2.998 0 0 1 6 83.01V22.234L24.08 5z\" fill=\"#FFF\" /><path d=\"M24 5L6 22.248h15.007A2.995 2.995 0 0 0 24 19.244V5z\" fill=\"#E4E4E4\" /></g></svg>\n          </div>\n        }\n      </div>\n      <div class=\"uppy-DashboardItem-progress\">\n        {isUploaded\n          ? <div class=\"uppy-DashboardItem-progressIndicator\">\n            {FileItemProgress({\n              progress: file.progress.percentage,\n              fileID: file.id\n            })}\n          </div>\n          : <button class=\"uppy-DashboardItem-progressIndicator\"\n            type=\"button\"\n            title={isUploaded\n                    ? 'upload complete'\n                    : props.resumableUploads\n                      ? file.isPaused\n                        ? 'resume upload'\n                        : 'pause upload'\n                      : error\n                        ? 'retry upload'\n                        : 'cancel upload'\n                  }\n            onclick={onPauseResumeCancelRetry}>\n            {error\n              ? iconRetry()\n              : FileItemProgress({\n                progress: file.progress.percentage,\n                fileID: file.id\n              })\n            }\n          </button>\n        }\n        {props.showProgressDetails &&\n          <div class=\"uppy-DashboardItem-progressInfo\"\n            title={props.i18n('fileProgress')}\n            aria-label={props.i18n('fileProgress')}>\n            {(!file.isPaused && !isUploaded) &&\n              <span>{prettyETA(getETA(file.progress))} ・ ↑ {prettyBytes(getSpeed(file.progress))}/s</span>\n            }\n          </div>\n        }\n      </div>\n    </div>\n    <div class=\"uppy-DashboardItem-info\">\n      <h4 class=\"uppy-DashboardItem-name\" title={fileName}>\n        {file.uploadURL\n          ? <a href={file.uploadURL} target=\"_blank\">\n            {file.extension ? truncatedFileName + '.' + file.extension : truncatedFileName}\n          </a>\n          : file.extension ? truncatedFileName + '.' + file.extension : truncatedFileName\n        }\n      </h4>\n      <div class=\"uppy-DashboardItem-status\">\n        {file.data.size && <div class=\"uppy-DashboardItem-statusSize\">{prettyBytes(file.data.size)}</div>}\n        {file.source && <div class=\"uppy-DashboardItem-sourceIcon\">\n            {acquirers.map(acquirer => {\n              if (acquirer.id === file.source) return <span title={`${props.i18n('fileSource')}: ${acquirer.name}`}>{acquirer.icon()}</span>\n            })}\n          </div>\n        }\n      </div>\n      {!uploadInProgressOrComplete &&\n        <button class=\"uppy-DashboardItem-edit\"\n          type=\"button\"\n          aria-label={props.i18n('editFile')}\n          title={props.i18n('editFile')}\n          onclick={(e) => props.showFileCard(file.id)}>\n          {iconEdit()}\n        </button>\n      }\n      {file.uploadURL &&\n        <button class=\"uppy-DashboardItem-copyLink\"\n          type=\"button\"\n          aria-label={props.i18n('copyLink')}\n          title={props.i18n('copyLink')}\n          onclick={() => {\n            copyToClipboard(file.uploadURL, props.i18n('copyLinkToClipboardFallback'))\n              .then(() => {\n                props.log('Link copied to clipboard.')\n                props.info(props.i18n('copyLinkToClipboardSuccess'), 'info', 3000)\n              })\n              .catch(props.log)\n          }}>{iconCopy()}</button>\n      }\n    </div>\n    <div class=\"uppy-DashboardItem-action\">\n      {!isUploaded &&\n        <button class=\"uppy-DashboardItem-remove\"\n          type=\"button\"\n          aria-label={props.i18n('removeFile')}\n          title={props.i18n('removeFile')}\n          onclick={() => props.removeFile(file.id)}>\n          <svg aria-hidden=\"true\" class=\"UppyIcon\" width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke=\"#FFF\" stroke-width=\"1\" fill-rule=\"nonzero\" vector-effect=\"non-scaling-stroke\" d=\"M30 1C14 1 1 14 1 30s13 29 29 29 29-13 29-29S46 1 30 1z\" />\n            <path fill=\"#FFF\" vector-effect=\"non-scaling-stroke\" d=\"M42 39.667L39.667 42 30 32.333 20.333 42 18 39.667 27.667 30 18 20.333 20.333 18 30 27.667 39.667 18 42 20.333 32.333 30z\" />\n          </svg>\n        </button>\n      }\n    </div>\n  </li>\n}\n"]}