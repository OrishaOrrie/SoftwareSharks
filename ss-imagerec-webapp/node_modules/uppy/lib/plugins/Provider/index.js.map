{"version":3,"sources":["../../../src/plugins/Provider/index.js"],"names":["require","_getName","id","split","map","s","charAt","toUpperCase","slice","join","module","exports","uppy","opts","provider","authProvider","name","onReceiveResponse","bind","response","uppyServer","state","host","headers","has","get","setState","checkAuth","fetch","hostname","method","credentials","then","res","json","payload","authenticated","authUrl","fileUrl","list","directory","logout","redirect","location","href"],"mappings":"AAAA;;;;;;;;AAEAA,QAAQ,cAAR;;AAEA,IAAMC,WAAW,SAAXA,QAAW,CAACC,EAAD,EAAQ;AACvB,SAAOA,GAAGC,KAAH,CAAS,GAAT,EAAcC,GAAd,CAAkB,UAACC,CAAD;AAAA,WAAOA,EAAEC,MAAF,CAAS,CAAT,EAAYC,WAAZ,KAA4BF,EAAEG,KAAF,CAAQ,CAAR,CAAnC;AAAA,GAAlB,EAAiEC,IAAjE,CAAsE,GAAtE,CAAP;AACD,CAFD;;AAIAC,OAAOC,OAAP;AACE,oBAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AAAA;;AACvB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBD,KAAKC,QAArB;AACA,SAAKZ,EAAL,GAAU,KAAKY,QAAf;AACA,SAAKC,YAAL,GAAoBF,KAAKE,YAAL,IAAqB,KAAKD,QAA9C;AACA,SAAKE,IAAL,GAAY,KAAKH,IAAL,CAAUG,IAAV,IAAkBf,SAAS,KAAKC,EAAd,CAA9B;;AAEA,SAAKe,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAVH,qBAkBED,iBAlBF,8BAkBqBE,QAlBrB,EAkB+B;AAC3B,QAAMC,aAAa,KAAKR,IAAL,CAAUS,KAAV,CAAgBD,UAAhB,IAA8B,EAAjD;AACA,QAAME,OAAO,KAAKT,IAAL,CAAUS,IAAvB;AACA,QAAMC,UAAUJ,SAASI,OAAzB;AACA;AACA,QAAIA,QAAQC,GAAR,CAAY,MAAZ,KAAuBD,QAAQE,GAAR,CAAY,MAAZ,MAAwBL,WAAWE,IAAX,CAAnD,EAAqE;AAAA;;AACnE,WAAKV,IAAL,CAAUc,QAAV,CAAmB;AACjBN,oBAAY,SAAc,EAAd,EAAkBA,UAAlB,6BACTE,IADS,IACFC,QAAQE,GAAR,CAAY,MAAZ,CADE;AADK,OAAnB;AAKD;AACD,WAAON,QAAP;AACD,GA/BH;;AAAA,qBAiCEQ,SAjCF,wBAiCe;AACX,WAAOC,MAAS,KAAKC,QAAd,SAA0B,KAAK3B,EAA/B,kBAAgD;AACrD4B,cAAQ,KAD6C;AAErDC,mBAAa,SAFwC;AAGrDR,eAAS;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT;AAH4C,KAAhD,EAQNS,IARM,CAQD,KAAKf,iBARJ,EASNe,IATM,CASD,UAACC,GAAD,EAAS;AACb,aAAOA,IAAIC,IAAJ,GACNF,IADM,CACD,UAACG,OAAD,EAAa;AACjB,eAAOA,QAAQC,aAAf;AACD,OAHM,CAAP;AAID,KAdM,CAAP;AAeD,GAjDH;;AAAA,qBAmDEC,OAnDF,sBAmDa;AACT,WAAU,KAAKR,QAAf,SAA2B,KAAK3B,EAAhC;AACD,GArDH;;AAAA,qBAuDEoC,OAvDF,oBAuDWpC,EAvDX,EAuDe;AACX,WAAU,KAAK2B,QAAf,SAA2B,KAAK3B,EAAhC,aAA0CA,EAA1C;AACD,GAzDH;;AAAA,qBA2DEqC,IA3DF,iBA2DQC,SA3DR,EA2DmB;AACf,WAAOZ,MAAS,KAAKC,QAAd,SAA0B,KAAK3B,EAA/B,eAA0CsC,aAAa,EAAvD,GAA6D;AAClEV,cAAQ,KAD0D;AAElEC,mBAAa,SAFqD;AAGlER,eAAS;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT;AAHyD,KAA7D,EAQNS,IARM,CAQD,KAAKf,iBARJ,EASNe,IATM,CASD,UAACC,GAAD;AAAA,aAASA,IAAIC,IAAJ,EAAT;AAAA,KATC,CAAP;AAUD,GAtEH;;AAAA,qBAwEEO,MAxEF,qBAwEoC;AAAA,QAA1BC,QAA0B,uEAAfC,SAASC,IAAM;;AAChC,WAAOhB,MAAS,KAAKC,QAAd,SAA0B,KAAK3B,EAA/B,yBAAqDwC,QAArD,EAAiE;AACtEZ,cAAQ,KAD8D;AAEtEC,mBAAa,SAFyD;AAGtER,eAAS;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT;AAH6D,KAAjE,CAAP;AAQD,GAjFH;;AAAA;AAAA;AAAA,wBAYkB;AACd,UAAMH,aAAa,KAAKR,IAAL,CAAUS,KAAV,CAAgBD,UAAhB,IAA8B,EAAjD;AACA,UAAME,OAAO,KAAKT,IAAL,CAAUS,IAAvB;AACA,aAAOF,WAAWE,IAAX,KAAoBA,IAA3B;AACD;AAhBH;;AAAA;AAAA","file":"index.js","sourcesContent":["'use strict'\n\nrequire('whatwg-fetch')\n\nconst _getName = (id) => {\n  return id.split('-').map((s) => s.charAt(0).toUpperCase() + s.slice(1)).join(' ')\n}\n\nmodule.exports = class Provider {\n  constructor (uppy, opts) {\n    this.uppy = uppy\n    this.opts = opts\n    this.provider = opts.provider\n    this.id = this.provider\n    this.authProvider = opts.authProvider || this.provider\n    this.name = this.opts.name || _getName(this.id)\n\n    this.onReceiveResponse = this.onReceiveResponse.bind(this)\n  }\n\n  get hostname () {\n    const uppyServer = this.uppy.state.uppyServer || {}\n    const host = this.opts.host\n    return uppyServer[host] || host\n  }\n\n  onReceiveResponse (response) {\n    const uppyServer = this.uppy.state.uppyServer || {}\n    const host = this.opts.host\n    const headers = response.headers\n    // Store the self-identified domain name for the uppy-server we just hit.\n    if (headers.has('i-am') && headers.get('i-am') !== uppyServer[host]) {\n      this.uppy.setState({\n        uppyServer: Object.assign({}, uppyServer, {\n          [host]: headers.get('i-am')\n        })\n      })\n    }\n    return response\n  }\n\n  checkAuth () {\n    return fetch(`${this.hostname}/${this.id}/authorized`, {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this.onReceiveResponse)\n    .then((res) => {\n      return res.json()\n      .then((payload) => {\n        return payload.authenticated\n      })\n    })\n  }\n\n  authUrl () {\n    return `${this.hostname}/${this.id}/connect`\n  }\n\n  fileUrl (id) {\n    return `${this.hostname}/${this.id}/get/${id}`\n  }\n\n  list (directory) {\n    return fetch(`${this.hostname}/${this.id}/list/${directory || ''}`, {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(this.onReceiveResponse)\n    .then((res) => res.json())\n  }\n\n  logout (redirect = location.href) {\n    return fetch(`${this.hostname}/${this.id}/logout?redirect=${redirect}`, {\n      method: 'get',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n  }\n}\n"]}