{"version":3,"sources":["../../../src/plugins/GoldenRetriever/ServiceWorkerStore.js"],"names":["isSupported","navigator","waitForServiceWorker","resolve","reject","Error","serviceWorker","controller","addEventListener","ServiceWorkerStore","opts","ready","name","storeName","list","defer","promise","console","log","onMessage","event","data","store","type","files","removeEventListener","then","postMessage","put","file","delete","fileID","module","exports"],"mappings":";;;;AAAA,IAAMA,cAAc,OAAOC,SAAP,KAAqB,WAArB,IAAoC,mBAAmBA,SAA3E;;AAEA,SAASC,oBAAT,GAAiC;AAC/B,SAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAI,CAACJ,WAAL,EAAkB;AAChBI,aAAO,IAAIC,KAAJ,CAAU,aAAV,CAAP;AACD,KAFD,MAEO,IAAIJ,UAAUK,aAAV,CAAwBC,UAA5B,EAAwC;AAC7C;AACAJ;AACD,KAHM,MAGA;AACLF,gBAAUK,aAAV,CAAwBE,gBAAxB,CAAyC,kBAAzC,EAA6D,YAAM;AACjEL;AACD,OAFD;AAGD;AACF,GAXM,CAAP;AAYD;;IAEKM,kB;AACJ,8BAAaC,IAAb,EAAmB;AAAA;;AACjB,SAAKC,KAAL,GAAaT,sBAAb;AACA,SAAKU,IAAL,GAAYF,KAAKG,SAAjB;AACD;;+BAEDC,I,mBAAQ;AAAA;;AACN,QAAMC,QAAQ,EAAd;AACA,QAAMC,UAAU,aAAY,UAACb,OAAD,EAAUC,MAAV,EAAqB;AAC/CW,YAAMZ,OAAN,GAAgBA,OAAhB;AACAY,YAAMX,MAAN,GAAeA,MAAf;AACD,KAHe,CAAhB;;AAKAa,YAAQC,GAAR,CAAY,0CAAZ;AACA,QAAMC,YAAY,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3B,UAAIA,MAAMC,IAAN,CAAWC,KAAX,KAAqB,MAAKV,IAA9B,EAAoC;AAClC;AACD;AACD,cAAQQ,MAAMC,IAAN,CAAWE,IAAnB;AACE,aAAK,gBAAL;AACER,gBAAMZ,OAAN,CAAciB,MAAMC,IAAN,CAAWG,KAAzB;AACAvB,oBAAUK,aAAV,CAAwBmB,mBAAxB,CAA4C,SAA5C,EAAuDN,SAAvD;AACA;AAJJ;AAMD,KAVD;;AAYA,SAAKR,KAAL,CAAWe,IAAX,CAAgB,YAAM;AACpBzB,gBAAUK,aAAV,CAAwBE,gBAAxB,CAAyC,SAAzC,EAAoDW,SAApD;;AAEAlB,gBAAUK,aAAV,CAAwBC,UAAxB,CAAmCoB,WAAnC,CAA+C;AAC7CJ,cAAM,gBADuC;AAE7CD,eAAO,MAAKV;AAFiC,OAA/C;AAID,KAPD;;AASA,WAAOI,OAAP;AACD,G;;+BAEDY,G,gBAAKC,I,EAAM;AAAA;;AACT,WAAO,KAAKlB,KAAL,CAAWe,IAAX,CAAgB,YAAM;AAC3BzB,gBAAUK,aAAV,CAAwBC,UAAxB,CAAmCoB,WAAnC,CAA+C;AAC7CJ,cAAM,eADuC;AAE7CD,eAAO,OAAKV,IAFiC;AAG7CiB,cAAMA;AAHuC,OAA/C;AAKD,KANM,CAAP;AAOD,G;;+BAEDC,M,oBAAQC,M,EAAQ;AAAA;;AACd,WAAO,KAAKpB,KAAL,CAAWe,IAAX,CAAgB,YAAM;AAC3BzB,gBAAUK,aAAV,CAAwBC,UAAxB,CAAmCoB,WAAnC,CAA+C;AAC7CJ,cAAM,kBADuC;AAE7CD,eAAO,OAAKV,IAFiC;AAG7CmB,gBAAQA;AAHqC,OAA/C;AAKD,KANM,CAAP;AAOD,G;;;;;AAGHtB,mBAAmBT,WAAnB,GAAiCA,WAAjC;;AAEAgC,OAAOC,OAAP,GAAiBxB,kBAAjB","file":"ServiceWorkerStore.js","sourcesContent":["const isSupported = typeof navigator !== 'undefined' && 'serviceWorker' in navigator\n\nfunction waitForServiceWorker () {\n  return new Promise((resolve, reject) => {\n    if (!isSupported) {\n      reject(new Error('Unsupported'))\n    } else if (navigator.serviceWorker.controller) {\n      // A serviceWorker is already registered and active.\n      resolve()\n    } else {\n      navigator.serviceWorker.addEventListener('controllerchange', () => {\n        resolve()\n      })\n    }\n  })\n}\n\nclass ServiceWorkerStore {\n  constructor (opts) {\n    this.ready = waitForServiceWorker()\n    this.name = opts.storeName\n  }\n\n  list () {\n    const defer = {}\n    const promise = new Promise((resolve, reject) => {\n      defer.resolve = resolve\n      defer.reject = reject\n    })\n\n    console.log('Loading stored blobs from Service Worker')\n    const onMessage = (event) => {\n      if (event.data.store !== this.name) {\n        return\n      }\n      switch (event.data.type) {\n        case 'uppy/ALL_FILES':\n          defer.resolve(event.data.files)\n          navigator.serviceWorker.removeEventListener('message', onMessage)\n          break\n      }\n    }\n\n    this.ready.then(() => {\n      navigator.serviceWorker.addEventListener('message', onMessage)\n\n      navigator.serviceWorker.controller.postMessage({\n        type: 'uppy/GET_FILES',\n        store: this.name\n      })\n    })\n\n    return promise\n  }\n\n  put (file) {\n    return this.ready.then(() => {\n      navigator.serviceWorker.controller.postMessage({\n        type: 'uppy/ADD_FILE',\n        store: this.name,\n        file: file\n      })\n    })\n  }\n\n  delete (fileID) {\n    return this.ready.then(() => {\n      navigator.serviceWorker.controller.postMessage({\n        type: 'uppy/REMOVE_FILE',\n        store: this.name,\n        fileID: fileID\n      })\n    })\n  }\n}\n\nServiceWorkerStore.isSupported = isSupported\n\nmodule.exports = ServiceWorkerStore\n"]}