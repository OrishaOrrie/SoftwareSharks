{"version":3,"sources":["../../src/plugins/FileInput.js"],"names":["Plugin","require","toArray","Translator","h","module","exports","uppy","opts","id","title","type","defaultLocale","strings","chooseFiles","defaultOptions","target","allowMultipleFiles","pretty","inputName","locale","translator","i18n","translate","bind","render","handleInputChange","handleClick","ev","log","files","forEach","file","addFile","source","name","data","catch","input","click","state","hiddenInputStyle","width","height","opacity","overflow","position","zIndex","install","mount","uninstall","unmount"],"mappings":"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","file":"FileInput.js","sourcesContent":["const Plugin = require('../core/Plugin')\nconst { toArray } = require('../core/Utils')\nconst Translator = require('../core/Translator')\nconst { h } = require('preact')\n\nmodule.exports = class FileInput extends Plugin {\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'FileInput'\n    this.title = 'File Input'\n    this.type = 'acquirer'\n\n    const defaultLocale = {\n      strings: {\n        chooseFiles: 'Choose files'\n      }\n    }\n\n    // Default options\n    const defaultOptions = {\n      target: null,\n      allowMultipleFiles: true,\n      pretty: true,\n      inputName: 'files[]',\n      locale: defaultLocale\n    }\n\n    // Merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    this.locale = Object.assign({}, defaultLocale, this.opts.locale)\n    this.locale.strings = Object.assign({}, defaultLocale.strings, this.opts.locale.strings)\n\n    // i18n\n    this.translator = new Translator({locale: this.locale})\n    this.i18n = this.translator.translate.bind(this.translator)\n\n    this.render = this.render.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleInputChange (ev) {\n    this.uppy.log('[FileInput] Something selected through input...')\n\n    const files = toArray(ev.target.files)\n\n    files.forEach((file) => {\n      this.uppy.addFile({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      }).catch(() => {\n        // Ignore\n      })\n    })\n  }\n\n  handleClick (ev) {\n    this.input.click()\n  }\n\n  render (state) {\n    const hiddenInputStyle = {\n      width: '0.1px',\n      height: '0.1px',\n      opacity: 0,\n      overflow: 'hidden',\n      position: 'absolute',\n      zIndex: -1\n    }\n\n    return <div class=\"uppy uppy-FileInput-container\">\n      <input class=\"uppy-FileInput-input\"\n        style={this.opts.pretty && hiddenInputStyle}\n        type=\"file\"\n        name={this.opts.inputName}\n        onchange={this.handleInputChange}\n        multiple={this.opts.allowMultipleFiles}\n        ref={(input) => { this.input = input }} />\n      {this.opts.pretty &&\n        <button class=\"uppy-FileInput-btn\" type=\"button\" onclick={this.handleClick}>\n          {this.i18n('chooseFiles')}\n        </button>\n      }\n    </div>\n  }\n\n  install () {\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n  }\n\n  uninstall () {\n    this.unmount()\n  }\n}\n"]}