var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.176,1,0.185]],["body/components/AboutPage.html",[0,0.304,1,0.304,2,0.48,3,0.551,4,0.55,5,0.55,6,0.55,7,0.282,8,1.734,9,0.829,10,0.891,11,3.096,12,0.932,13,0.764,14,0.932,15,1.157,16,1.821,17,1.675,18,1.157,19,1.316,20,0.932,21,1.157,22,1.157,23,1.157,24,0.932,25,0.932,26,0.932,27,0.932,28,0.932,29,0.932,30,1.349,31,0.764,32,1.632,33,0.614,34,1.619,35,3.096,36,3.096,37,3.252,38,0.595,39,3.096,40,3.533,41,1.157,42,0.55,43,1.108,44,0.764,45,3.096,46,0.345,47,0.764,48,1.367,49,1.868,50,1.258,51,2.709,52,0.614,53,2.429,54,3.843,55,3.843,56,3.843,57,0.671,58,0.971,59,1.258,60,2.641,61,1.821,62,0.891,63,2.229,64,0.671,65,0.073,66,0.762,67,0.671,68,1.612,69,1.292,70,1.55,71,2.111,72,1.86,73,1.071,74,2.229,75,1.396,76,1.619,77,0.932,78,0.829,79,0.614,80,2.229,81,1.316,82,3.843,83,3.843,84,2.009,85,1.619,86,2.229,87,2.229,88,3.557,89,0.595,90,0.282,91,2.229,92,0.257,93,0.357,94,0.41,95,0.671,96,0.48,97,0.345,98,0.81,99,1.409,100,0.81,101,0.81,102,1.409,103,0.257,104,1.071,105,0.81,106,1.409,107,2.229,108,2.409,109,2.409,110,0.932,111,2.229,112,2.229,113,2.229,114,2.409,115,3.096,116,3.096,117,2.409,118,3.843,119,3.096,120,3.096,121,1.957,122,2.409,123,1.124,124,1.157,125,2.409,126,0.764,127,1.349,128,2.99,129,3.843,130,3.096,131,3.096,132,3.096,133,3.096,134,3.096,135,1.957,136,1.957,137,2.409,138,3.096,139,3.096,140,3.096,141,3.096,142,3.096,143,3.096,144,3.096,145,3.096,146,3.096,147,2.409,148,3.096,149,3.096,150,2.229,151,2.409,152,3.096,153,3.096,154,3.096,155,2.409,156,3.843,157,3.096,158,2.409,159,2.409,160,3.096,161,3.096,162,3.096,163,1.957,164,3.096,165,3.096,166,0.345,167,0.764,168,0.614,169,0.764,170,0.762,171,0.55,172,2.229,173,0.55,174,0.176,175,0.55,176,0.55,177,0.176,178,0.55,179,0.176,180,0.55,181,0.176,182,0.176,183,0.55,184,0.176,185,0.55,186,0.55,187,0.046,188,0.046]],["title/modules/AppModule.html",[189,0.848,190,1.221]],["body/modules/AppModule.html",[1,0.362,2,0.421,3,0.421,7,0.215,38,0.645,65,0.074,84,1.421,89,0.763,90,0.362,92,0.314,93,0.511,94,0.314,96,0.421,97,0.686,103,0.408,110,0.818,166,0.421,174,0.362,177,0.362,179,0.362,181,0.362,182,0.362,184,0.362,187,0.052,188,0.052,189,1.285,190,2.56,191,1.184,192,2.486,193,3.061,194,2.115,195,2.115,196,2.115,197,2.115,198,2.89,199,3.509,200,2.753,201,2.115,202,1.718,203,2.718,204,3.538,205,1.421,206,0.987,207,1.421,208,3.538,209,3.538,210,3.538,211,2.115,212,2.718,213,3.538,214,2.718,215,2.115,216,2.115,217,2.718,218,2.115,219,2.115,220,2.115,221,2.115,222,2.718,223,2.236,224,1.718,225,1.718,226,2.236,227,1.718,228,1.718,229,1.85,230,1.421,231,2.753,232,2.115,233,2.236,234,1.718,235,3.538,236,2.115,237,3.538,238,1.718,239,3.538,240,1.718,241,2.718,242,2.115,243,3.538,244,2.718,245,2.718,246,3.538,247,2.718,248,3.538,249,3.538,250,2.115,251,3.538,252,2.718,253,3.933,254,2.718,255,2.718,256,2.718,257,3.538,258,2.718,259,2.718,260,2.718,261,2.718,262,2.718]],["title/components/ContactPage.html",[0,0.176,174,0.185]],["body/components/ContactPage.html",[0,0.304,1,0.188,2,0.367,3,0.239,4,0.381,5,0.381,6,0.381,7,0.228,9,0.782,10,0.914,12,0.713,13,0.906,14,0.713,15,0.972,16,1.406,17,1.032,18,0.713,19,0.972,20,0.713,21,0.713,22,0.713,23,0.972,24,0.713,25,1.105,26,0.713,27,0.713,28,0.713,29,0.713,30,1.032,31,0.584,32,1.432,33,0.47,38,0.611,41,1.05,42,0.381,43,1.018,44,0.584,46,0.239,47,0.584,48,1.187,49,1.665,50,1.105,52,0.47,57,0.465,58,0.673,59,1.105,61,1.6,62,0.886,64,0.867,65,0.074,66,0.728,67,0.867,68,1.333,69,1.046,70,1.6,72,1.505,73,1.217,75,1.333,76,0.808,77,0.465,78,0.855,79,0.69,81,0.713,85,0.808,89,0.592,90,0.122,92,0.178,93,0.441,94,0.332,95,0.465,96,0.367,97,0.239,98,0.561,99,0.977,100,0.561,101,0.561,102,0.977,103,0.178,104,1.282,105,0.561,110,0.713,126,0.584,137,1.202,163,2.492,166,0.239,167,0.584,168,0.47,169,0.584,170,0.728,171,0.381,173,0.381,174,0.256,175,0.381,176,0.381,177,0.188,178,0.381,179,0.122,180,0.381,181,0.122,182,0.122,183,0.381,184,0.122,185,0.381,186,0.381,187,0.035,188,0.035,189,1.333,233,2.934,234,0.977,238,0.977,240,0.977,263,1.202,264,2.368,265,1.843,266,2.708,267,3.672,268,2.04,269,1.843,270,3.635,271,2.368,272,1.878,273,2.511,274,3.228,275,3.228,276,3.228,277,2.321,278,3.228,279,3.228,280,2.511,281,1.688,282,1.843,283,2.511,284,3.228,285,2.492,286,2.511,287,2.511,288,2.511,289,1.545,290,2.857,291,1.843,292,2.874,293,2.416,294,1.497,295,2.24,296,1.932,297,2.04,298,0.972,299,1.333,300,1.92,301,1.82,302,1.843,303,1.497,304,1.497,305,1.843,306,1.545,307,3.068,308,3.672,309,2.368,310,2.368,311,3.48,312,1.545,313,1.843,314,3.228,315,2.511,316,2.04,317,4.398,318,2.879,319,3.228,320,1.393,321,1.497,322,0.86,323,2.368,324,2.368,325,1.545,326,3.228,327,2.368,328,1.6,329,2.368,330,2.511,331,2.857,332,1.545,333,1.843,334,1.959,335,1.545,336,2.368,337,1.688,338,1.545,339,1.545,340,2.04,341,2.062,342,3.48,343,2.368,344,1.843,345,1.545,346,1.105,347,2.608,348,3.266,349,2.879,350,2.368,351,1.545,352,2.511,353,2.368,354,2.708,355,1.545,356,2.04,357,1.545,358,1.545,359,1.545,360,1.843,361,2.368,362,2.199,363,3.228,364,1.545,365,2.879,366,1.497,367,0.808,368,1.505,369,1.202,370,1.202,371,1.843,372,1.843,373,1.545,374,1.545,375,3.48,376,3.228,377,2.879,378,1.545,379,1.545,380,1.545,381,2.368,382,0.808,383,0.808,384,0.808,385,0.808,386,1.688,387,1.545,388,1.202,389,2.879,390,1.545,391,2.879,392,1.202,393,1.202,394,1.202,395,1.545,396,2.879,397,1.545,398,2.368,399,1.545,400,1.545,401,1.545,402,1.545,403,2.368,404,1.545,405,1.545,406,1.545,407,1.202,408,0.673,409,0.808,410,1.545,411,1.202,412,1.545,413,1.545,414,1.202,415,1.202,416,1.202,417,1.843,418,1.545,419,1.202,420,1.202,421,1.202,422,1.202,423,1.202,424,0.977,425,1.202,426,1.202,427,1.202,428,1.202,429,1.545,430,1.545,431,1.545,432,1.545,433,1.545,434,1.202,435,1.545,436,0.977,437,2.368,438,1.545,439,1.545,440,1.545,441,1.545,442,1.843,443,1.545,444,2.368,445,2.368,446,2.368,447,1.843,448,1.545]],["title/components/FeedbackPage.html",[0,0.176,90,0.185]],["body/components/FeedbackPage.html",[0,0.307,1,0.149,2,0.291,3,0.291,4,0.464,5,0.464,6,0.464,7,0.256,9,0.809,10,0.933,12,0.826,13,0.677,14,0.826,15,1.071,18,0.826,19,1.071,20,0.826,21,0.826,22,0.826,23,1.071,24,0.826,25,1.189,26,0.826,27,0.826,28,0.826,29,0.826,31,0.677,33,0.544,37,2.135,38,0.551,40,3.682,41,1.052,42,0.464,43,1.069,44,0.677,46,0.291,47,0.677,48,1.36,50,1.189,51,2.578,52,0.544,53,2.249,57,0.566,58,0.82,59,1.189,60,2.497,62,0.889,64,1.139,65,0.074,66,0.903,67,1.189,68,1.548,69,1.435,70,1.411,71,1.693,72,1.434,73,0.826,75,1.293,76,1.861,77,1.139,78,0.784,79,0.706,89,0.551,90,0.3,92,0.217,93,0.217,94,0.217,95,1.071,96,0.291,103,0.217,104,1.283,105,0.683,106,1.189,110,0.826,124,1.071,126,0.677,128,2.135,135,2.249,136,1.734,155,2.135,158,1.464,163,2.738,166,0.291,167,0.677,168,0.784,169,0.677,170,0.706,171,0.464,173,0.464,174,0.149,175,0.464,176,0.464,177,0.149,178,0.464,179,0.149,180,0.464,181,0.149,182,0.149,183,0.464,184,0.149,185,0.464,186,0.464,187,0.04,188,0.04,238,1.189,240,1.189,266,2.945,270,2.77,272,1.953,273,2.77,277,2.249,280,2.77,282,2.135,283,2.77,285,2.497,286,2.77,287,2.77,288,2.77,290,2.135,291,2.135,292,2.497,293,2.047,294,1.734,297,2.249,298,0.826,299,1.293,300,2.066,301,2.047,302,2.135,320,1.071,322,0.996,328,1.195,330,2.77,331,2.77,333,2.135,334,1.983,340,1.734,341,1.861,346,1.189,347,2.578,348,2.945,354,2.945,362,2.249,368,1.434,369,1.464,370,1.464,371,2.135,372,2.135,386,1.693,388,1.464,392,1.464,393,1.464,394,1.464,407,1.464,408,0.82,409,0.983,414,1.464,415,1.464,416,1.464,417,2.135,419,1.464,420,1.464,421,1.464,422,1.464,423,1.464,424,1.189,425,1.464,426,1.464,427,1.464,428,1.464,447,2.135,449,1.464,450,2.743,451,2.743,452,2.743,453,3.559,454,4.39,455,2.344,456,1.881,457,2.047,458,2.047,459,1.881,460,2.249,461,1.881,462,1.881,463,2.743,464,1.734,465,3.559,466,3.951,467,1.881,468,1.881,469,1.979,470,1.881,471,2.066,472,1.434,473,2.743,474,1.881,475,1.881,476,2.743,477,3.238,478,1.881,479,2.743,480,2.135,481,1.881,482,1.881,483,1.881,484,0.566,485,0.983,486,0.983,487,3.238,488,1.881,489,1.881,490,1.881,491,2.743,492,1.881,493,2.743,494,1.881,495,1.881,496,1.881,497,2.743,498,2.743,499,2.743,500,1.881,501,2.743,502,2.743,503,1.734,504,2.743,505,2.743,506,1.881]],["title/components/HomePage.html",[0,0.176,177,0.185]],["body/components/HomePage.html",[0,0.342,1,0.285,2,0.433,3,0.433,4,0.69,5,0.69,6,0.69,7,0.316,9,0.865,10,0.922,12,1.085,13,0.889,14,1.085,15,1.268,16,1.835,17,1.57,18,1.085,19,1.268,20,1.085,21,1.085,22,1.085,23,1.268,24,1.085,25,1.085,26,1.085,27,1.085,28,1.085,29,1.085,30,1.57,31,0.889,32,1.309,33,0.715,41,1.164,42,0.69,43,1.156,44,0.889,46,0.433,49,1.219,50,0.842,52,0.715,59,0.842,61,1.57,62,0.555,65,0.073,77,1.085,78,0.555,79,0.555,81,1.085,89,0.691,90,0.221,92,0.323,93,0.416,94,0.416,96,0.433,103,0.323,105,1.016,117,2.805,123,1.739,124,1.268,126,0.889,127,1.57,166,0.433,167,0.889,168,0.715,169,0.889,170,0.885,171,0.69,173,0.69,174,0.316,175,0.69,176,0.69,177,0.345,178,0.69,179,0.221,180,0.69,181,0.221,182,0.221,183,0.69,184,0.221,185,0.69,186,0.69,187,0.053,188,0.053,277,2.662,281,2.202,296,1.219,334,1.219,366,2.278,367,1.463,382,1.463,383,1.463,384,1.463,385,1.463,471,1.885,484,0.842,507,2.177,508,3.604,509,3.604,510,3.604,511,3.604,512,4.212,513,3.604,514,2.797,515,2.805,516,2.797,517,2.278,518,3.604,519,2.805,520,2.805,521,2.797,522,2.278,523,3.604,524,1.835,525,2.797]],["title/components/ImagerecPage.html",[0,0.176,179,0.185]],["body/components/ImagerecPage.html",[0,0.285,1,0.183,2,0.438,3,0.233,4,0.37,5,0.37,6,0.37,7,0.119,9,0.46,10,0.631,32,1.536,33,0.72,34,2.24,38,0.586,41,1.133,42,0.37,43,1.01,44,0.571,46,0.233,47,0.571,48,1.437,49,1.648,50,1.093,52,0.46,57,0.697,58,0.654,59,1.093,61,1.582,62,0.898,64,0.957,65,0.074,66,0.827,67,1.034,68,1.573,69,1.419,70,1.009,71,1.211,72,1.796,73,1.139,75,0.841,77,1.254,78,0.681,79,0.681,81,1.139,89,0.605,90,0.119,92,0.173,93,0.463,94,0.267,95,0.697,96,0.438,97,0.562,98,0.841,101,0.841,103,0.173,104,1.139,110,1.328,121,2.009,122,1.803,123,1.739,124,0.697,126,0.571,127,2.029,166,0.233,167,0.571,168,0.85,169,0.571,170,0.72,171,0.37,173,0.37,174,0.119,175,0.37,176,0.37,177,0.183,178,0.37,179,0.3,180,0.37,181,0.119,182,0.183,183,0.37,184,0.119,185,0.37,186,0.37,187,0.065,188,0.034,202,0.949,205,0.785,206,0.545,207,1.898,229,2.391,230,0.785,269,1.803,272,1.385,281,1.662,294,1.464,295,1.803,296,0.654,298,1.207,299,1.027,300,1.211,301,1.464,305,2.944,307,1.803,313,1.803,316,1.464,320,1.207,322,0.841,328,1.009,334,0.654,340,1.464,341,2.38,346,1.207,362,1.464,366,1.464,367,0.785,368,1.211,382,0.785,383,0.785,384,0.785,385,0.785,386,1.211,408,1.009,409,1.211,424,1.464,434,1.169,436,2.294,455,2.24,457,2.534,458,2.171,469,1.662,471,2.211,480,1.169,484,0.697,485,0.785,486,0.785,503,1.464,517,2.009,520,1.803,522,2.469,524,1.232,526,1.169,527,1.464,528,2.317,529,2.317,530,3.435,531,3.179,532,3.63,533,3.179,534,2.469,535,4.284,536,2.707,537,3.63,538,3.179,539,3.63,540,2.469,541,2.474,542,3.179,543,3.179,544,3.179,545,2.474,546,1.502,547,3.907,548,1.502,549,1.502,550,2.317,551,1.502,552,1.502,553,4.009,554,1.502,555,1.803,556,2.828,557,1.169,558,1.803,559,1.502,560,2.201,561,1.502,562,2.294,563,2.317,564,3.179,565,1.502,566,2.317,567,1.502,568,2.317,569,2.317,570,2.317,571,2.317,572,2.317,573,2.317,574,2.317,575,1.502,576,2.317,577,2.317,578,2.828,579,2.317,580,2.317,581,1.502,582,1.502,583,2.317,584,2.317,585,1.803,586,1.502,587,2.317,588,2.317,589,2.317,590,1.502,591,2.201,592,1.502,593,1.502,594,1.502,595,1.502,596,1.502,597,1.502,598,1.502,599,1.502,600,1.502,601,1.502,602,1.169,603,1.464,604,2.828,605,1.502,606,1.502,607,1.502,608,1.502,609,1.502,610,1.502,611,1.502,612,1.464,613,1.502,614,1.502,615,2.317,616,2.317,617,1.502,618,2.317,619,2.317,620,2.317,621,2.317,622,1.502,623,1.502,624,2.317,625,2.317,626,2.317,627,3.179,628,2.317,629,2.317,630,2.317,631,2.317,632,2.317,633,2.317,634,2.828,635,2.828,636,3.179,637,2.474,638,3.179,639,1.803,640,1.803,641,1.803,642,1.803,643,2.201,644,1.169,645,1.502,646,1.502,647,1.502,648,1.502,649,1.502,650,1.502,651,1.502,652,1.502,653,1.803,654,3.179,655,0.949,656,2.317,657,1.502,658,1.169,659,1.169,660,1.502,661,2.317,662,2.317,663,1.502,664,1.502,665,1.502,666,1.502,667,1.502,668,1.502]],["title/injectables/ModelLoaderProvider.html",[97,0.362,100,0.848]],["body/injectables/ModelLoaderProvider.html",[2,0.373,3,0.244,7,0.305,9,0.807,10,0.905,12,0.724,13,0.913,14,0.724,15,0.982,18,0.724,19,0.982,20,0.724,21,0.724,22,0.724,23,0.982,24,0.982,25,0.724,26,0.724,27,0.724,28,0.724,29,0.724,30,1.048,31,0.594,33,0.849,38,0.544,46,0.373,47,0.594,48,1.224,52,0.477,57,0.475,62,0.868,64,0.982,65,0.074,66,0.697,67,0.982,68,0.874,73,1.249,75,1.398,77,0.475,78,0.931,79,0.477,85,0.825,89,0.452,92,0.182,93,0.182,94,0.278,95,0.475,96,0.738,97,0.452,98,0.573,99,0.997,100,1.185,101,1.059,102,0.997,103,0.182,104,1.057,110,1.224,123,1.616,124,1.114,126,1.181,127,2.028,135,2.062,136,1.521,168,0.647,170,0.313,187,0.055,188,0.035,192,0.997,206,1.603,268,2.34,272,1.422,285,1.521,296,1.613,297,0.997,298,0.982,299,1.059,300,1.258,315,1.872,316,1.521,320,0.982,321,2.508,322,1.185,328,1.729,337,1.258,341,2.013,344,2.539,346,0.982,356,1.521,360,2.539,368,2.288,386,2.327,408,0.687,409,0.825,436,1.521,442,1.872,464,2.622,471,1.706,472,1.258,484,0.475,522,1.521,524,1.048,534,2.765,540,2.34,541,3.088,545,2.269,555,1.872,560,1.872,562,1.521,585,2.539,602,1.228,603,1.521,612,1.521,637,1.872,639,1.228,640,1.228,641,1.228,642,1.228,643,2.733,655,1.521,658,2.539,659,2.269,669,3.436,670,2.269,671,3.263,672,2.406,673,3.263,674,3.702,675,2.406,676,3.263,677,3.702,678,2.539,679,2.916,680,3.263,681,3.513,682,3.702,683,2.916,684,1.578,685,2.406,686,2.406,687,1.578,688,3.85,689,3.702,690,2.406,691,3.969,692,2.916,693,2.406,694,2.916,695,2.406,696,1.578,697,2.406,698,1.578,699,3.088,700,2.406,701,2.406,702,2.406,703,2.916,704,2.406,705,1.578,706,2.881,707,3.702,708,2.916,709,2.406,710,3.369,711,3.263,712,3.263,713,2.406,714,2.406,715,2.406,716,2.881,717,2.406,718,1.578,719,2.539,720,2.881,721,3.088,722,1.578,723,2.406,724,1.578,725,2.406,726,2.406,727,2.406,728,2.406,729,1.578,730,3.263,731,2.406,732,2.406,733,1.578,734,1.578,735,2.916,736,2.916,737,1.578,738,1.872,739,3.263,740,2.406,741,3.702,742,2.406,743,3.85,744,1.872,745,3.702,746,2.406,747,2.406,748,2.406,749,2.406,750,2.406,751,2.406,752,2.406,753,2.406,754,1.578,755,2.406,756,3.702,757,2.406,758,1.872,759,2.406,760,2.406,761,1.578,762,1.578,763,1.228,764,1.578,765,1.578,766,1.578,767,2.406,768,2.406,769,1.578,770,1.578,771,3.263,772,1.578,773,1.578,774,1.578,775,1.578,776,1.578,777,1.578,778,1.578,779,1.578,780,1.578,781,1.578,782,1.578,783,1.578,784,1.578,785,1.578,786,1.578,787,1.578,788,1.578,789,1.578,790,1.578,791,2.406,792,1.578,793,1.578,794,2.406,795,2.406,796,1.578,797,1.578,798,2.406,799,2.406,800,1.578,801,1.578,802,1.578,803,1.578,804,1.578,805,1.578,806,1.578,807,1.578,808,1.578,809,1.578,810,1.578,811,1.578,812,2.406,813,1.578,814,1.578,815,1.578,816,1.578]],["title/components/MyApp.html",[0,0.176,181,0.185]],["body/components/MyApp.html",[0,0.346,1,0.299,2,0.386,3,0.386,4,0.615,5,0.615,6,0.615,7,0.197,9,0.663,10,0.833,13,0.615,31,0.824,33,0.495,38,0.584,41,1.2,42,0.615,43,1.107,44,0.824,46,0.518,47,0.824,52,0.663,57,0.751,62,0.833,64,1.006,65,0.074,66,0.799,67,1.006,75,0.906,78,0.495,79,0.495,81,1.212,89,0.723,90,0.197,92,0.288,93,0.499,94,0.288,96,0.386,97,0.624,103,0.386,104,1.264,123,1.369,124,1.006,125,1.941,126,0.993,151,1.941,159,1.941,166,0.386,167,0.824,168,0.663,169,0.824,170,0.799,171,0.615,173,0.615,174,0.299,175,0.615,176,0.615,177,0.265,178,0.615,179,0.299,180,0.615,181,0.319,182,0.197,183,0.615,184,0.265,185,0.615,186,0.615,187,0.049,188,0.049,191,1.456,198,2.383,205,1.304,206,0.906,207,1.304,215,1.941,216,1.941,218,1.941,219,1.941,220,1.941,221,1.941,223,2.902,224,1.576,225,2.383,226,2.836,227,1.576,228,2.383,229,1.304,230,1.304,265,1.941,292,2.113,298,1.212,299,1.214,303,2.545,304,2.545,320,0.751,322,1.525,337,1.748,346,1.135,408,1.955,411,2.601,460,2.113,469,1.971,484,0.751,524,1.456,534,2.545,536,2.545,557,1.941,558,2.601,591,1.941,603,2.113,653,1.941,678,1.941,817,1.941,818,3.342,819,4.487,820,4.027,821,3.342,822,3.342,823,4.487,824,3.342,825,3.342,826,3.342,827,3.342,828,3.342,829,2.494,830,4.027,831,2.494,832,2.494,833,3.342,834,2.494,835,2.494,836,2.494,837,2.494,838,2.494,839,2.494,840,2.494,841,2.494,842,2.494,843,2.494,844,2.494]],["title/components/ResultsPage.html",[0,0.176,182,0.185]],["body/components/ResultsPage.html",[0,0.317,1,0.182,2,0.56,3,0.356,4,0.567,5,0.567,6,0.567,7,0.308,9,0.81,10,0.897,12,0.691,13,0.567,14,0.691,15,0.952,16,1.377,17,1.001,18,0.691,19,0.952,20,0.691,21,0.691,22,0.691,23,0.952,24,0.691,25,0.691,26,0.691,27,0.691,28,0.691,29,0.691,31,0.567,32,1.148,33,0.456,34,1.89,38,0.632,41,1.157,42,0.567,43,1.115,44,0.78,46,0.356,47,0.78,48,1.424,50,1.27,51,2.731,52,0.627,53,2.46,57,0.691,58,1.001,59,1.27,60,2.666,62,0.873,64,1.229,65,0.074,66,0.837,67,0.952,68,1.622,69,1.599,70,1.575,71,1.89,73,0.952,76,1.653,77,0.952,78,0.772,79,0.456,81,0.952,85,1.201,89,0.603,90,0.182,92,0.265,93,0.449,94,0.365,95,0.952,96,0.669,97,0.653,98,1.148,101,1.148,103,0.265,104,1.229,105,0.834,106,1.452,108,1.787,109,1.787,110,0.952,114,3.029,123,1.312,124,1.27,126,0.891,127,1.001,166,0.356,167,0.78,168,0.627,169,0.78,170,0.772,171,0.567,173,0.567,174,0.182,175,0.567,176,0.567,177,0.182,178,0.567,179,0.182,180,0.567,181,0.182,182,0.342,183,0.567,184,0.182,185,0.567,186,0.567,187,0.067,188,0.047,205,1.201,206,0.834,207,1.89,268,2.46,298,1.088,299,1.312,320,0.691,321,1.998,322,1.414,328,1.377,346,0.691,455,2.424,457,2.58,458,2.284,460,2.46,464,2.58,484,0.691,485,1.201,486,1.201,517,1.998,524,1.575,527,1.998,536,2.857,540,2.666,562,2.46,612,1.452,699,1.787,706,3.029,710,2.46,716,2.46,719,2.46,720,2.46,721,3.029,845,1.787,846,3.161,847,3.161,848,3.161,849,3.161,850,2.297,851,3.161,852,2.297,853,3.282,854,3.893,855,3.161,856,3.161,857,2.297,858,2.297,859,2.297,860,2.297,861,3.161,862,3.161,863,3.161,864,3.161]],["title/components/UtilitiesPage.html",[0,0.176,184,0.185]],["body/components/UtilitiesPage.html",[0,0.324,1,0.247,2,0.484,3,0.35,4,0.557,5,0.557,6,0.557,7,0.284,9,0.805,10,0.883,12,0.94,13,1.111,14,0.94,15,1.163,16,1.684,17,1.361,18,0.94,19,1.163,20,0.94,21,0.94,22,0.94,23,1.163,24,0.94,25,1.163,26,0.94,27,0.94,28,0.94,29,0.94,30,1.361,31,0.771,32,1.404,33,0.767,34,1.873,38,0.484,41,1.148,42,0.557,43,1.111,44,0.771,46,0.35,47,0.771,48,1.078,49,0.984,50,0.68,52,0.62,59,0.94,61,1.361,62,0.832,65,0.074,66,0.767,69,0.82,73,1.163,78,0.911,79,0.448,81,0.94,89,0.628,90,0.179,92,0.261,93,0.413,94,0.36,95,0.68,96,0.599,98,0.82,101,1.473,103,0.261,105,0.82,166,0.35,167,0.771,168,0.62,169,0.771,170,0.832,171,0.557,173,0.557,174,0.247,175,0.557,176,0.557,177,0.247,178,0.557,179,0.179,180,0.557,181,0.179,182,0.179,183,0.557,184,0.332,185,0.883,186,0.557,187,0.06,188,0.046,272,1.561,281,2.021,293,1.974,296,0.984,298,0.94,320,1.382,334,1.561,337,1.633,346,1.221,352,3.007,356,2.443,367,1.181,382,2.249,383,1.181,384,1.181,385,1.181,455,1.873,469,1.181,472,1.633,484,0.94,485,1.181,486,1.181,503,1.974,515,1.757,519,2.431,527,1.427,738,2.431,758,3.506,853,3.412,865,1.757,866,3.124,867,3.124,868,3.124,869,4.59,870,3.124,871,3.865,872,3.865,873,4.551,874,3.865,875,2.258,876,3.124,877,2.258,878,3.124,879,2.258,880,4.384,881,3.865,882,3.865,883,4.196,884,3.865,885,3.865,886,4.196,887,3.124,888,2.258,889,3.124,890,3.124,891,2.258,892,3.124,893,3.124,894,3.124,895,2.258,896,2.258,897,3.124,898,3.124,899,3.124,900,3.124,901,3.124,902,3.124,903,3.124]],["title/coverage.html",[904,2.488]],["body/coverage.html",[0,0.362,1,0.283,7,0.283,8,2.783,65,0.072,66,0.709,90,0.283,97,0.554,100,1.299,147,2.783,174,0.283,177,0.283,179,0.283,181,0.283,182,0.283,184,0.283,187,0.062,188,0.062,206,1.299,263,2.783,347,2.26,449,2.783,507,2.783,526,2.783,644,3.57,669,2.783,670,2.783,744,2.783,817,2.783,845,2.783,865,2.783,904,2.783,905,3.576,906,3.576,907,3.576,908,3.576,909,3.576,910,3.576,911,3.576,912,3.576,913,3.576,914,3.576,915,3.576,916,3.576,917,3.576,918,3.576,919,3.576,920,3.576,921,3.576]],["title/dependencies.html",[191,1.225,922,1.946]],["body/dependencies.html",[7,0.306,65,0.074,84,2.193,92,0.36,93,0.55,94,0.36,121,1.972,187,0.057,188,0.057,191,1.359,211,3.005,223,1.972,224,1.972,225,1.972,226,1.972,227,1.972,228,1.972,229,1.631,230,1.631,231,3.263,232,2.428,233,1.972,234,1.972,236,2.428,242,2.428,250,2.428,303,3.065,304,3.043,472,1.631,763,2.428,923,3.12,924,4.382,925,3.12,926,4.194,927,3.12,928,3.862,929,3.12,930,4.382,931,3.12,932,4.589,933,3.12,934,3.12,935,3.12,936,3.12,937,3.12,938,3.12,939,3.12,940,3.12,941,3.12,942,3.12,943,3.862,944,3.12,945,3.12,946,3.12,947,3.12,948,3.12,949,3.12,950,3.12,951,3.12,952,3.12,953,3.12,954,3.12,955,3.862,956,3.12,957,3.12,958,3.12,959,3.12,960,3.12,961,3.12,962,3.12,963,3.12,964,3.12,965,3.12,966,3.12,967,3.12,968,3.12,969,3.12,970,3.12,971,3.12,972,3.12,973,3.862,974,3.12,975,3.12,976,3.12,977,3.12,978,3.12,979,3.12,980,3.12,981,3.12,982,3.12]],["title/index.html",[46,0.362,983,1.817]],["body/index.html",[0,0.262,1,0.348,38,0.538,65,0.072,90,0.348,97,0.681,100,1.262,103,0.401,166,0.538,174,0.348,177,0.348,179,0.348,181,0.348,182,0.348,184,0.348,187,0.061,188,0.061,189,1.497,190,2.597,191,1.514,192,2.196,193,2.704,194,2.704,195,2.704,196,2.704,197,2.704,198,2.778,199,3.537,200,3.208,201,2.704,202,2.196,655,2.605,983,2.704,984,3.475]],["title/modules.html",[189,1.161]],["body/modules.html",[65,0.064,84,2.007,187,0.064,188,0.064,189,1.394,190,2.007,985,3.838,986,3.838,987,3.838]]],"invertedIndex":[["",{"_index":65,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["0",{"_index":356,"title":{},"body":{"components/ContactPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/UtilitiesPage.html":{}}}],["0.001",{"_index":712,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["0.12.5",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["0.8.26",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["01/07/2018",{"_index":451,"title":{},"body":{"components/FeedbackPage.html":{}}}],["1",{"_index":655,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"index.html":{}}}],["1.0",{"_index":894,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["1.0.20",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["1.7.1",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["1.9.4",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["1/08/2018",{"_index":858,"title":{},"body":{"components/ResultsPage.html":{}}}],["10.0",{"_index":878,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["100",{"_index":644,"title":{},"body":{"components/ImagerecPage.html":{},"coverage.html":{}}}],["1000",{"_index":753,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["14/14",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["18/18",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["19/21",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":658,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["2.0",{"_index":876,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["2.0.1",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["2.1.2",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["2.1.4",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["2.4.20",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["21/07/2018",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/UtilitiesPage.html":{}}}],["224",{"_index":771,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["224,224",{"_index":783,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["3",{"_index":659,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["3.0.0",{"_index":966,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["3.9.2",{"_index":964,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":627,"title":{},"body":{"components/ImagerecPage.html":{}}}],["4",{"_index":660,"title":{},"body":{"components/ImagerecPage.html":{}}}],["4.0.1",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["4.0.3",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["4.15.0",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":968,"title":{},"body":{"dependencies.html":{}}}],["4.2.1",{"_index":962,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["5.0.4",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["5.2.11",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["5.2.4",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["5.3.1",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":608,"title":{},"body":{"components/ImagerecPage.html":{}}}],["500m",{"_index":599,"title":{},"body":{"components/ImagerecPage.html":{}}}],["53",{"_index":748,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["57",{"_index":744,"title":{},"body":{"injectables/ModelLoaderProvider.html":{},"coverage.html":{}}}],["6.0.1",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["6.0.9",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["7.1.1",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":984,"title":{},"body":{"index.html":{}}}],["8/9",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":377,"title":{},"body":{"components/ContactPage.html":{}}}],["9/9",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":617,"title":{},"body":{"components/ImagerecPage.html":{}}}],["9]+)*(\\\\.[a",{"_index":379,"title":{},"body":{"components/ContactPage.html":{}}}],["_a",{"_index":378,"title":{},"body":{"components/ContactPage.html":{}}}],["_system",{"_index":108,"title":{},"body":{"components/AboutPage.html":{},"components/ResultsPage.html":{}}}],["a.likeli",{"_index":809,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["abil",{"_index":867,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["about'},{'nam",{"_index":173,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["about.html",{"_index":45,"title":{},"body":{"components/AboutPage.html":{}}}],["about.t",{"_index":11,"title":{},"body":{"components/AboutPage.html":{}}}],["about/about",{"_index":367,"title":{},"body":{"components/ContactPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/UtilitiesPage.html":{}}}],["aboutpag",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"coverage.html":{},"index.html":{}}}],["accept",{"_index":556,"title":{},"body":{"components/ImagerecPage.html":{}}}],["access",{"_index":39,"title":{},"body":{"components/AboutPage.html":{}}}],["accord",{"_index":588,"title":{},"body":{"components/ImagerecPage.html":{}}}],["action",{"_index":569,"title":{},"body":{"components/ImagerecPage.html":{}}}],["actual_compon",{"_index":186,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["addit",{"_index":35,"title":{},"body":{"components/AboutPage.html":{}}}],["address",{"_index":317,"title":{},"body":{"components/ContactPage.html":{}}}],["africa",{"_index":143,"title":{},"body":{"components/AboutPage.html":{}}}],["ai",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["alert",{"_index":300,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["alert.pres",{"_index":414,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["alertcontrol",{"_index":272,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/UtilitiesPage.html":{}}}],["alertctrl",{"_index":545,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["allow",{"_index":266,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["allowedit",{"_index":625,"title":{},"body":{"components/ImagerecPage.html":{}}}],["alreadi",{"_index":703,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["analysi",{"_index":519,"title":{},"body":{"components/HomePage.html":{},"components/UtilitiesPage.html":{}}}],["android",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["angular",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"dependencies.html":{}}}],["angular/anim",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/t",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["angular/compil",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":92,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"dependencies.html":{}}}],["angular/form",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["angular/http",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/materi",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfire2/databas",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfire2/firestor",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfire2/storag",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfireauthmodul",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiredatabas",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiredatabasemodul",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(environment.firebas",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestorag",{"_index":592,"title":{},"body":{"components/ImagerecPage.html":{}}}],["angularfirestoragemodul",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfirestoremodul",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["anyth",{"_index":499,"title":{},"body":{"components/FeedbackPage.html":{}}}],["api",{"_index":314,"title":{},"body":{"components/ContactPage.html":{}}}],["app",{"_index":37,"title":{},"body":{"components/AboutPage.html":{},"components/FeedbackPage.html":{}}}],["app.compon",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["app.html",{"_index":818,"title":{},"body":{"components/MyApp.html":{}}}],["appear",{"_index":301,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{}}}],["applic",{"_index":511,"title":{},"body":{"components/HomePage.html":{}}}],["appmodul",{"_index":190,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appreci",{"_index":158,"title":{},"body":{"components/AboutPage.html":{},"components/FeedbackPage.html":{}}}],["appropri",{"_index":890,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["array",{"_index":322,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{}}}],["assets/imgs/camera",{"_index":579,"title":{},"body":{"components/ImagerecPage.html":{}}}],["associ",{"_index":717,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["async",{"_index":677,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["author",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["await",{"_index":768,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["b.likeli",{"_index":808,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["back",{"_index":76,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ResultsPage.html":{}}}],["bar",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["batchedimag",{"_index":786,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["batchedimage.tofloat().div(tf.scalar(127)).sub(tf.scalar(1",{"_index":788,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["becom",{"_index":584,"title":{},"body":{"components/ImagerecPage.html":{}}}],["beginheight",{"_index":797,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["beginwidth",{"_index":799,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["below",{"_index":598,"title":{},"body":{"components/ImagerecPage.html":{}}}],["bester",{"_index":136,"title":{},"body":{"components/AboutPage.html":{},"components/FeedbackPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["beta",{"_index":153,"title":{},"body":{"components/AboutPage.html":{}}}],["better",{"_index":160,"title":{},"body":{"components/AboutPage.html":{}}}],["blank",{"_index":702,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["boolean",{"_index":85,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["bootstrap",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["brahope'",{"_index":443,"title":{},"body":{"components/ContactPage.html":{}}}],["brahope\\'",{"_index":448,"title":{},"body":{"components/ContactPage.html":{}}}],["bramhop",{"_index":268,"title":{},"body":{"components/ContactPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["bramhope_classes.json",{"_index":747,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["bring",{"_index":115,"title":{},"body":{"components/AboutPage.html":{}}}],["brows",{"_index":987,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":84,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":758,"title":{},"body":{"injectables/ModelLoaderProvider.html":{},"components/UtilitiesPage.html":{}}}],["bug",{"_index":155,"title":{},"body":{"components/AboutPage.html":{},"components/FeedbackPage.html":{}}}],["build",{"_index":302,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["button",{"_index":77,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["button.4",{"_index":667,"title":{},"body":{"components/ImagerecPage.html":{}}}],["calcul",{"_index":897,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["call",{"_index":75,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{}}}],["camera",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["cameraopt",{"_index":591,"title":{},"body":{"components/ImagerecPage.html":{},"components/MyApp.html":{}}}],["cancel",{"_index":570,"title":{},"body":{"components/ImagerecPage.html":{}}}],["capston",{"_index":145,"title":{},"body":{"components/AboutPage.html":{}}}],["captur",{"_index":547,"title":{},"body":{"components/ImagerecPage.html":{}}}],["card",{"_index":896,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["carri",{"_index":597,"title":{},"body":{"components/ImagerecPage.html":{}}}],["case",{"_index":759,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["catalogu",{"_index":720,"title":{},"body":{"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["catch",{"_index":777,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["catch((error",{"_index":434,"title":{},"body":{"components/ContactPage.html":{},"components/ImagerecPage.html":{}}}],["catch(error",{"_index":404,"title":{},"body":{"components/ContactPage.html":{}}}],["categori",{"_index":855,"title":{},"body":{"components/ResultsPage.html":{}}}],["cdktablemodul",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["centerheight",{"_index":795,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["centerwidth",{"_index":798,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["central1",{"_index":420,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["chang",{"_index":587,"title":{},"body":{"components/ImagerecPage.html":{}}}],["check",{"_index":344,"title":{},"body":{"components/ContactPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["checkbox",{"_index":343,"title":{},"body":{"components/ContactPage.html":{}}}],["class",{"_index":96,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["classes.json",{"_index":742,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["classesjson",{"_index":803,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["classid",{"_index":791,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["classif",{"_index":524,"title":{},"body":{"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{}}}],["classjson",{"_index":741,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["classpr",{"_index":714,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["classpreds.length",{"_index":805,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["clearinterval(modelload",{"_index":606,"title":{},"body":{"components/ImagerecPage.html":{}}}],["cli",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["click",{"_index":517,"title":{},"body":{"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/ResultsPage.html":{}}}],["client'",{"_index":150,"title":{},"body":{"components/AboutPage.html":{}}}],["client\\'",{"_index":172,"title":{},"body":{"components/AboutPage.html":{}}}],["close",{"_index":114,"title":{},"body":{"components/AboutPage.html":{},"components/ResultsPage.html":{}}}],["closemod",{"_index":53,"title":{},"body":{"components/AboutPage.html":{},"components/FeedbackPage.html":{},"components/ResultsPage.html":{}}}],["cloud",{"_index":662,"title":{},"body":{"components/ImagerecPage.html":{}}}],["cluster_appmodul",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declar",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_provid",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["code",{"_index":480,"title":{},"body":{"components/FeedbackPage.html":{},"components/ImagerecPage.html":{}}}],["coetzer",{"_index":130,"title":{},"body":{"components/AboutPage.html":{}}}],["compat",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":336,"title":{},"body":{"components/ContactPage.html":{}}}],["compon",{"_index":0,"title":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"coverage.html":{},"index.html":{}}}],["component_templ",{"_index":171,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["compos",{"_index":476,"title":{},"body":{"components/FeedbackPage.html":{}}}],["comput",{"_index":118,"title":{},"body":{"components/AboutPage.html":{}}}],["conduct",{"_index":868,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["config",{"_index":615,"title":{},"body":{"components/ImagerecPage.html":{}}}],["console.error(\"error",{"_index":435,"title":{},"body":{"components/ContactPage.html":{}}}],["console.error('error",{"_index":652,"title":{},"body":{"components/ImagerecPage.html":{}}}],["console.error(error",{"_index":405,"title":{},"body":{"components/ContactPage.html":{}}}],["console.log('app",{"_index":841,"title":{},"body":{"components/MyApp.html":{}}}],["console.log('check",{"_index":778,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["console.log('ionviewdidload",{"_index":486,"title":{},"body":{"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["console.log('map",{"_index":802,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["console.log('model",{"_index":602,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["console.log('nam",{"_index":415,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["console.log('not",{"_index":607,"title":{},"body":{"components/ImagerecPage.html":{}}}],["console.log('provid",{"_index":773,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["console.log(data1",{"_index":426,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["const",{"_index":386,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["construct",{"_index":291,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["constructor",{"_index":57,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{}}}],["constructor(alertctrl",{"_index":684,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["constructor(navctrl",{"_index":58,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"components/ResultsPage.html":{}}}],["constructor(platform",{"_index":822,"title":{},"body":{"components/MyApp.html":{}}}],["constructor(priv",{"_index":764,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["constructor(publ",{"_index":105,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["contact",{"_index":267,"title":{},"body":{"components/ContactPage.html":{}}}],["contact'},{'nam",{"_index":175,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["contact.html",{"_index":271,"title":{},"body":{"components/ContactPage.html":{}}}],["contact.t",{"_index":264,"title":{},"body":{"components/ContactPage.html":{}}}],["contact/contact",{"_index":515,"title":{},"body":{"components/HomePage.html":{},"components/UtilitiesPage.html":{}}}],["contactemail",{"_index":389,"title":{},"body":{"components/ContactPage.html":{}}}],["contactmessag",{"_index":391,"title":{},"body":{"components/ContactPage.html":{}}}],["contactnam",{"_index":387,"title":{},"body":{"components/ContactPage.html":{}}}],["contactpag",{"_index":174,"title":{"components/ContactPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"coverage.html":{},"index.html":{}}}],["contain",{"_index":719,"title":{},"body":{"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["content",{"_index":530,"title":{},"body":{"components/ImagerecPage.html":{}}}],["content:ani",{"_index":596,"title":{},"body":{"components/ImagerecPage.html":{}}}],["context",{"_index":589,"title":{},"body":{"components/ImagerecPage.html":{}}}],["control",{"_index":68,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["cordova",{"_index":303,"title":{},"body":{"components/ContactPage.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["correspond",{"_index":706,"title":{},"body":{"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["coverag",{"_index":904,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["crescent",{"_index":573,"title":{},"body":{"components/ImagerecPage.html":{}}}],["crop",{"_index":643,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["cropimag",{"_index":675,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["cropimage(img",{"_index":686,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["ctibyorii",{"_index":440,"title":{},"body":{"components/ContactPage.html":{}}}],["current",{"_index":70,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"components/ResultsPage.html":{}}}],["custom",{"_index":125,"title":{},"body":{"components/AboutPage.html":{},"components/MyApp.html":{}}}],["cut",{"_index":713,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["data",{"_index":296,"title":{},"body":{"components/ContactPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/UtilitiesPage.html":{}}}],["data.results[0].address_components[3].long_nam",{"_index":400,"title":{},"body":{"components/ContactPage.html":{}}}],["data.results[0].address_components[4].long_nam",{"_index":401,"title":{},"body":{"components/ContactPage.html":{}}}],["data.results[0].address_components[5].long_nam",{"_index":402,"title":{},"body":{"components/ContactPage.html":{}}}],["data1",{"_index":427,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["data:image/jpeg;base64",{"_index":631,"title":{},"body":{"components/ImagerecPage.html":{}}}],["date",{"_index":29,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["declar",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"injectables/ModelLoaderProvider.html":{},"index.html":{}}}],["decor",{"_index":557,"title":{},"body":{"components/ImagerecPage.html":{},"components/MyApp.html":{}}}],["decreas",{"_index":709,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["default",{"_index":346,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["defaultfeedtyp",{"_index":453,"title":{},"body":{"components/FeedbackPage.html":{}}}],["defin",{"_index":62,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["depend",{"_index":191,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{},"index.html":{}}}],["descript",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["design",{"_index":146,"title":{},"body":{"components/AboutPage.html":{}}}],["destinationtyp",{"_index":618,"title":{},"body":{"components/ImagerecPage.html":{}}}],["detail",{"_index":324,"title":{},"body":{"components/ContactPage.html":{}}}],["determin",{"_index":337,"title":{},"body":{"components/ContactPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/UtilitiesPage.html":{}}}],["develop",{"_index":128,"title":{},"body":{"components/AboutPage.html":{},"components/FeedbackPage.html":{}}}],["devic",{"_index":121,"title":{},"body":{"components/AboutPage.html":{},"components/ImagerecPage.html":{},"dependencies.html":{}}}],["device'",{"_index":657,"title":{},"body":{"components/ImagerecPage.html":{}}}],["device\\'",{"_index":664,"title":{},"body":{"components/ImagerecPage.html":{}}}],["di",{"_index":102,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["differ",{"_index":755,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["direct",{"_index":169,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["disabl",{"_index":583,"title":{},"body":{"components/ImagerecPage.html":{}}}],["dismiss",{"_index":413,"title":{},"body":{"components/ContactPage.html":{}}}],["dismissonpagechang",{"_index":574,"title":{},"body":{"components/ImagerecPage.html":{}}}],["display",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"components/ImagerecPage.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["document",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["document.getelementbyid('selectedimag",{"_index":634,"title":{},"body":{"components/ImagerecPage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["don't",{"_index":500,"title":{},"body":{"components/FeedbackPage.html":{}}}],["don\\'t",{"_index":506,"title":{},"body":{"components/FeedbackPage.html":{}}}],["dure",{"_index":458,"title":{},"body":{"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"components/ResultsPage.html":{}}}],["dynam",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":902,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["each",{"_index":728,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["ee885.appspot.com/bramhope_mobilenet_model/model.json",{"_index":746,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["ee885.appspot.com/mobilenet_model/model.json",{"_index":740,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["ee885.cloudfunctions.net/app/sendmail",{"_index":422,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["element",{"_index":168,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["element.likeli",{"_index":816,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["element.nam",{"_index":812,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["element.name.charat(0).touppercas",{"_index":814,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["element.name.replace(/_/g",{"_index":813,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["element.name.slice(1",{"_index":815,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["email",{"_index":270,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["empti",{"_index":883,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["empty_bucket",{"_index":871,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["encodingtyp",{"_index":620,"title":{},"body":{"components/ImagerecPage.html":{}}}],["enter",{"_index":898,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["entrycompon",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["environ",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environ",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":637,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["error",{"_index":436,"title":{},"body":{"components/ContactPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["errorhandl",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["evalu",{"_index":340,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{}}}],["evaul",{"_index":566,"title":{},"body":{"components/ImagerecPage.html":{}}}],["export",{"_index":103,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"index.html":{}}}],["extern",{"_index":83,"title":{},"body":{"components/AboutPage.html":{}}}],["f",{"_index":505,"title":{},"body":{"components/FeedbackPage.html":{}}}],["facad",{"_index":510,"title":{},"body":{"components/HomePage.html":{}}}],["fals",{"_index":110,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["fb",{"_index":287,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["featur",{"_index":473,"title":{},"body":{"components/FeedbackPage.html":{}}}],["feedback",{"_index":40,"title":{},"body":{"components/AboutPage.html":{},"components/FeedbackPage.html":{}}}],["feedback'},{'nam",{"_index":176,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["feedback.html",{"_index":452,"title":{},"body":{"components/FeedbackPage.html":{}}}],["feedback.t",{"_index":450,"title":{},"body":{"components/FeedbackPage.html":{}}}],["feedback/feedback",{"_index":91,"title":{},"body":{"components/AboutPage.html":{}}}],["feedbackpag",{"_index":90,"title":{"components/FeedbackPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"coverage.html":{},"index.html":{}}}],["feedbackpage.pres",{"_index":113,"title":{},"body":{"components/AboutPage.html":{}}}],["feedtyp",{"_index":454,"title":{},"body":{"components/FeedbackPage.html":{}}}],["fetch",{"_index":849,"title":{},"body":{"components/ResultsPage.html":{}}}],["fetch('https://maps.googleapis.com/maps/api/geocode/json?latlng",{"_index":438,"title":{},"body":{"components/ContactPage.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"coverage.html":{},"dependencies.html":{}}}],["fill",{"_index":886,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["filled_bucket",{"_index":872,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["final",{"_index":329,"title":{},"body":{"components/ContactPage.html":{}}}],["firebas",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["floor",{"_index":893,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["form",{"_index":292,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/MyApp.html":{}}}],["format",{"_index":730,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["formbuild",{"_index":288,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["formcontrol",{"_index":348,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["formcontrol(nul",{"_index":481,"title":{},"body":{"components/FeedbackPage.html":{}}}],["formgroup",{"_index":354,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["formsmodul",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["full",{"_index":447,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["function",{"_index":33,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["galleri",{"_index":553,"title":{},"body":{"components/ImagerecPage.html":{}}}],["gallery.2",{"_index":665,"title":{},"body":{"components/ImagerecPage.html":{}}}],["gener",{"_index":95,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["geoloc",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"components/ContactPage.html":{},"dependencies.html":{}}}],["get",{"_index":295,"title":{},"body":{"components/ContactPage.html":{},"components/ImagerecPage.html":{}}}],["getgeoloc",{"_index":278,"title":{},"body":{"components/ContactPage.html":{}}}],["getgoogleaddress",{"_index":279,"title":{},"body":{"components/ContactPage.html":{}}}],["getgoogleaddress(lat",{"_index":310,"title":{},"body":{"components/ContactPage.html":{}}}],["getresult",{"_index":676,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["getter",{"_index":697,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["github",{"_index":162,"title":{},"body":{"components/AboutPage.html":{}}}],["go",{"_index":862,"title":{},"body":{"components/ResultsPage.html":{}}}],["googl",{"_index":315,"title":{},"body":{"components/ContactPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["googleaddress",{"_index":396,"title":{},"body":{"components/ContactPage.html":{}}}],["handl",{"_index":298,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["haslink",{"_index":745,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["hate",{"_index":502,"title":{},"body":{"components/FeedbackPage.html":{}}}],["hello",{"_index":382,"title":{},"body":{"components/ContactPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/UtilitiesPage.html":{}}}],["help",{"_index":159,"title":{},"body":{"components/AboutPage.html":{},"components/MyApp.html":{}}}],["histori",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["hoek",{"_index":963,"title":{},"body":{"dependencies.html":{}}}],["holder.png",{"_index":580,"title":{},"body":{"components/ImagerecPage.html":{}}}],["home",{"_index":512,"title":{},"body":{"components/HomePage.html":{}}}],["home'},{'nam",{"_index":178,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["home.html",{"_index":513,"title":{},"body":{"components/HomePage.html":{}}}],["home.t",{"_index":508,"title":{},"body":{"components/HomePage.html":{}}}],["homepag",{"_index":177,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"coverage.html":{},"index.html":{}}}],["homepage.pres",{"_index":385,"title":{},"body":{"components/ContactPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/UtilitiesPage.html":{}}}],["html",{"_index":167,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["htmlimageel",{"_index":560,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["http",{"_index":285,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["httpclient",{"_index":286,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["httpclientmodul",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["httpmodul",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["https://angular.io/guide/depend",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["https://github.com/orishaorrie/softwaresharks/blob/master/documentation/user%20manual.pdf",{"_index":26,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["https://ionicframework.com/docs/components/#navig",{"_index":527,"title":{},"body":{"components/ImagerecPage.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["https://storage.googleapis.com/testproject",{"_index":739,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["https://storage.googleapis.com/tfj",{"_index":750,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["huge",{"_index":157,"title":{},"body":{"components/AboutPage.html":{}}}],["icon",{"_index":837,"title":{},"body":{"components/MyApp.html":{}}}],["identifi",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["ignor",{"_index":484,"title":{},"body":{"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["imag",{"_index":123,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{}}}],["image.3",{"_index":666,"title":{},"body":{"components/ImagerecPage.html":{}}}],["image:1",{"_index":663,"title":{},"body":{"components/ImagerecPage.html":{}}}],["imagedata",{"_index":632,"title":{},"body":{"components/ImagerecPage.html":{}}}],["imageel",{"_index":550,"title":{},"body":{"components/ImagerecPage.html":{}}}],["imagenet",{"_index":749,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["imagenet_classes.json",{"_index":752,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["imagerec",{"_index":528,"title":{},"body":{"components/ImagerecPage.html":{}}}],["imagerec'},{'nam",{"_index":180,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["imagerec.html",{"_index":529,"title":{},"body":{"components/ImagerecPage.html":{}}}],["imagerecpag",{"_index":179,"title":{"components/ImagerecPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"coverage.html":{},"index.html":{}}}],["imagetopredict",{"_index":531,"title":{},"body":{"components/ImagerecPage.html":{}}}],["img",{"_index":694,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["img.shape[0",{"_index":796,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["img.shape[1",{"_index":794,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["img.slice([beginheight",{"_index":800,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["imgavail",{"_index":532,"title":{},"body":{"components/ImagerecPage.html":{}}}],["imgselectedorcaptur",{"_index":533,"title":{},"body":{"components/ImagerecPage.html":{}}}],["import",{"_index":89,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["includ",{"_index":756,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["index",{"_index":46,"title":{"index.html":{}},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["indic",{"_index":465,"title":{},"body":{"components/FeedbackPage.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["inform",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["initi",{"_index":294,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{}}}],["inject",{"_index":100,"title":{"injectables/ModelLoaderProvider.html":{}},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"injectables/ModelLoaderProvider.html":{},"coverage.html":{},"index.html":{}}}],["input",{"_index":352,"title":{},"body":{"components/ContactPage.html":{},"components/UtilitiesPage.html":{}}}],["instanc",{"_index":738,"title":{},"body":{"injectables/ModelLoaderProvider.html":{},"components/UtilitiesPage.html":{}}}],["instruct",{"_index":899,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["interfac",{"_index":265,"title":{},"body":{"components/ContactPage.html":{},"components/MyApp.html":{}}}],["invalid",{"_index":889,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["ionic",{"_index":93,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"dependencies.html":{}}}],["ionic/pro",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["ionic/storag",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["ionicapp",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["ionicerrorhandl",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicmodul",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicmodule.forroot(myapp",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicon",{"_index":965,"title":{},"body":{"dependencies.html":{}}}],["ionviewdidload",{"_index":485,"title":{},"body":{"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["issu",{"_index":161,"title":{},"body":{"components/AboutPage.html":{}}}],["it'",{"_index":563,"title":{},"body":{"components/ImagerecPage.html":{}}}],["item",{"_index":853,"title":{},"body":{"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["javascript",{"_index":892,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["jonathan",{"_index":133,"title":{},"body":{"components/AboutPage.html":{}}}],["json",{"_index":321,"title":{},"body":{"components/ContactPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["key=aizasyd1gi0j6qpoyxqxbmg4z2oir",{"_index":439,"title":{},"body":{"components/ContactPage.html":{}}}],["keyboard",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["kg",{"_index":903,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["label",{"_index":707,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["lat",{"_index":318,"title":{},"body":{"components/ContactPage.html":{}}}],["later",{"_index":693,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["latitud",{"_index":319,"title":{},"body":{"components/ContactPage.html":{}}}],["latlng",{"_index":437,"title":{},"body":{"components/ContactPage.html":{}}}],["lattitud",{"_index":309,"title":{},"body":{"components/ContactPage.html":{}}}],["legend",{"_index":166,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"index.html":{}}}],["lew",{"_index":134,"title":{},"body":{"components/AboutPage.html":{}}}],["likeli",{"_index":710,"title":{},"body":{"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["link",{"_index":721,"title":{},"body":{"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["linkexist",{"_index":806,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["list",{"_index":716,"title":{},"body":{"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["lng",{"_index":311,"title":{},"body":{"components/ContactPage.html":{}}}],["load",{"_index":534,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{}}}],["loader",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{}}}],["loader.t",{"_index":670,"title":{},"body":{"injectables/ModelLoaderProvider.html":{},"coverage.html":{}}}],["loader.ts:110",{"_index":722,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["loader.ts:124",{"_index":724,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["loader.ts:146",{"_index":687,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["loader.ts:158",{"_index":696,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["loader.ts:170",{"_index":705,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["loader.ts:205",{"_index":733,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["loader.ts:215",{"_index":718,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["loader.ts:223",{"_index":729,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["loader.ts:37",{"_index":737,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["loader.ts:43",{"_index":754,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["loader.ts:68",{"_index":761,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["loader.ts:72",{"_index":685,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["loader.ts:85",{"_index":698,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["loader/model",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"coverage.html":{}}}],["loadingcontrol",{"_index":535,"title":{},"body":{"components/ImagerecPage.html":{}}}],["loadmodel",{"_index":678,"title":{},"body":{"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{}}}],["locat",{"_index":342,"title":{},"body":{"components/ContactPage.html":{}}}],["location=y",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/ResultsPage.html":{}}}],["lodash",{"_index":967,"title":{},"body":{"dependencies.html":{}}}],["longitud",{"_index":308,"title":{},"body":{"components/ContactPage.html":{}}}],["lower",{"_index":711,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["make",{"_index":313,"title":{},"body":{"components/ContactPage.html":{},"components/ImagerecPage.html":{}}}],["manual",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["map",{"_index":316,"title":{},"body":{"components/ContactPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["mappredict",{"_index":679,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["mappredictions(classpr",{"_index":704,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["mark",{"_index":129,"title":{},"body":{"components/AboutPage.html":{}}}],["matcardmodul",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":188,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["math",{"_index":873,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["math.floor((this.filled_bucket",{"_index":887,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["math.min(img.shape[0",{"_index":793,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["matodzi",{"_index":132,"title":{},"body":{"components/AboutPage.html":{}}}],["mattablemodul",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["md",{"_index":661,"title":{},"body":{"components/ImagerecPage.html":{}}}],["measur",{"_index":900,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["mediatyp",{"_index":622,"title":{},"body":{"components/ImagerecPage.html":{}}}],["meet",{"_index":149,"title":{},"body":{"components/AboutPage.html":{}}}],["member",{"_index":410,"title":{},"body":{"components/ContactPage.html":{}}}],["memori",{"_index":585,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["messag",{"_index":334,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/UtilitiesPage.html":{}}}],["messagetosend",{"_index":417,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["metadata",{"_index":42,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["method",{"_index":52,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["mobil",{"_index":120,"title":{},"body":{"components/AboutPage.html":{}}}],["mobilenet",{"_index":784,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["modal",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["modalcontrol",{"_index":61,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/UtilitiesPage.html":{}}}],["modalctrl",{"_index":49,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/UtilitiesPage.html":{}}}],["model",{"_index":126,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{}}}],["model'",{"_index":760,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["modelhaslink",{"_index":680,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["modelisreadi",{"_index":681,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["modelload",{"_index":536,"title":{},"body":{"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{}}}],["modelloader.getresult",{"_index":859,"title":{},"body":{"components/ResultsPage.html":{}}}],["modelloader.loadmodel",{"_index":842,"title":{},"body":{"components/MyApp.html":{}}}],["modelloaderprovid",{"_index":97,"title":{"injectables/ModelLoaderProvider.html":{}},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"coverage.html":{},"index.html":{}}}],["modelnumb",{"_index":673,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["models/tfjs/mobilenet_v1_0.25_224/model.json",{"_index":751,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["modeltyp",{"_index":674,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["modul",{"_index":189,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"components/ContactPage.html":{},"index.html":{},"modules.html":{}}}],["more",{"_index":101,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["msg",{"_index":416,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["mukundi",{"_index":131,"title":{},"body":{"components/AboutPage.html":{}}}],["myapp",{"_index":181,"title":{"components/MyApp.html":{}},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"coverage.html":{},"index.html":{}}}],["mygroup",{"_index":273,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["myphoto",{"_index":537,"title":{},"body":{"components/ImagerecPage.html":{}}}],["n",{"_index":495,"title":{},"body":{"components/FeedbackPage.html":{}}}],["name",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["nativ",{"_index":305,"title":{},"body":{"components/ContactPage.html":{},"components/ImagerecPage.html":{}}}],["native/camera",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["native/cor",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["native/firebas",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["native/geoloc",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"components/ContactPage.html":{},"dependencies.html":{}}}],["native/splash",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["native/statu",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["nav",{"_index":819,"title":{},"body":{"components/MyApp.html":{}}}],["navcontrol",{"_index":59,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["navcontroller,publ",{"_index":516,"title":{},"body":{"components/HomePage.html":{}}}],["navctrl",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["navig",{"_index":69,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["navparam",{"_index":455,"title":{},"body":{"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["need",{"_index":151,"title":{},"body":{"components/AboutPage.html":{},"components/MyApp.html":{}}}],["new",{"_index":347,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"coverage.html":{}}}],["ngmodul",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":609,"title":{},"body":{"components/ImagerecPage.html":{}}}],["ninshiki",{"_index":19,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["node_modules/angularfire2/storag",{"_index":593,"title":{},"body":{"components/ImagerecPage.html":{}}}],["notreadytopredict",{"_index":538,"title":{},"body":{"components/ImagerecPage.html":{}}}],["nsent",{"_index":418,"title":{},"body":{"components/ContactPage.html":{}}}],["null",{"_index":736,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["number",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["numclass",{"_index":743,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["object",{"_index":124,"title":{},"body":{"components/AboutPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{}}}],["observ",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["obtain",{"_index":307,"title":{},"body":{"components/ContactPage.html":{},"components/ImagerecPage.html":{}}}],["ok",{"_index":641,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["on",{"_index":442,"title":{},"body":{"components/ContactPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["onc",{"_index":520,"title":{},"body":{"components/HomePage.html":{},"components/ImagerecPage.html":{}}}],["onlyself",{"_index":483,"title":{},"body":{"components/FeedbackPage.html":{}}}],["onsubmit",{"_index":280,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["open",{"_index":81,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["openbrowsertobramhop",{"_index":847,"title":{},"body":{"components/ResultsPage.html":{}}}],["openbrowsertobramhope(url",{"_index":851,"title":{},"body":{"components/ResultsPage.html":{}}}],["openbrowsertogithubissu",{"_index":54,"title":{},"body":{"components/AboutPage.html":{}}}],["openbrowsertopp",{"_index":55,"title":{},"body":{"components/AboutPage.html":{}}}],["openfeedback",{"_index":56,"title":{},"body":{"components/AboutPage.html":{}}}],["openmod",{"_index":281,"title":{},"body":{"components/ContactPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/UtilitiesPage.html":{}}}],["openpag",{"_index":821,"title":{},"body":{"components/MyApp.html":{}}}],["openpage(pag",{"_index":828,"title":{},"body":{"components/MyApp.html":{}}}],["oper",{"_index":727,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["option",{"_index":67,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{}}}],["order",{"_index":734,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["organ",{"_index":20,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["orisha",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/HomePage.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["orri",{"_index":17,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/HomePage.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["out",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"components/ImagerecPage.html":{},"index.html":{}}}],["overview",{"_index":983,"title":{"index.html":{}},"body":{"index.html":{}}}],["packag",{"_index":922,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["page",{"_index":41,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["pageinterfac",{"_index":834,"title":{},"body":{"components/MyApp.html":{}}}],["pagenam",{"_index":835,"title":{},"body":{"components/MyApp.html":{}}}],["pages/about/about",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{}}}],["pages/contact/contact",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{}}}],["pages/feedback/feedback",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/home/hom",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{}}}],["pages/imagerec/imagerec",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{}}}],["pages/results/result",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["pages/tabs/tab",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{}}}],["pages/utilities/util",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{}}}],["param",{"_index":104,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{}}}],["paramet",{"_index":64,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{}}}],["paramt",{"_index":463,"title":{},"body":{"components/FeedbackPage.html":{}}}],["part",{"_index":144,"title":{},"body":{"components/AboutPage.html":{}}}],["pass",{"_index":457,"title":{},"body":{"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"components/ResultsPage.html":{}}}],["perform",{"_index":725,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["pictur",{"_index":656,"title":{},"body":{"components/ImagerecPage.html":{}}}],["pixel",{"_index":689,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["platform",{"_index":823,"title":{},"body":{"components/MyApp.html":{}}}],["platform.ready().then",{"_index":839,"title":{},"body":{"components/MyApp.html":{}}}],["platofrm",{"_index":826,"title":{},"body":{"components/MyApp.html":{}}}],["pleas",{"_index":497,"title":{},"body":{"components/FeedbackPage.html":{}}}],["plugin",{"_index":304,"title":{},"body":{"components/ContactPage.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["polici",{"_index":165,"title":{},"body":{"components/AboutPage.html":{}}}],["positionlat",{"_index":274,"title":{},"body":{"components/ContactPage.html":{}}}],["positionlong",{"_index":275,"title":{},"body":{"components/ContactPage.html":{}}}],["possibl",{"_index":412,"title":{},"body":{"components/ContactPage.html":{}}}],["post",{"_index":330,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["postmessag",{"_index":282,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["postmessage(nam",{"_index":333,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["power",{"_index":116,"title":{},"body":{"components/AboutPage.html":{}}}],["predict",{"_index":127,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["predictbuttontext",{"_index":539,"title":{},"body":{"components/ImagerecPage.html":{}}}],["predictedclass",{"_index":779,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["predictedclass.data",{"_index":792,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["predictimag",{"_index":541,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["predictimage(imag",{"_index":723,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["present",{"_index":72,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{}}}],["presentalert",{"_index":283,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["presentresult",{"_index":542,"title":{},"body":{"components/ImagerecPage.html":{}}}],["press",{"_index":460,"title":{},"body":{"components/FeedbackPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{}}}],["pretoria",{"_index":141,"title":{},"body":{"components/AboutPage.html":{}}}],["privaci",{"_index":164,"title":{},"body":{"components/AboutPage.html":{}}}],["privat",{"_index":368,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["process",{"_index":522,"title":{},"body":{"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["processresultnam",{"_index":682,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["product",{"_index":444,"title":{},"body":{"components/ContactPage.html":{}}}],["project",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["prompt",{"_index":639,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["prompt.pres",{"_index":642,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["properti",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["provid",{"_index":38,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"index.html":{}}}],["providers/model",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{}}}],["public",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["qualiti",{"_index":616,"title":{},"body":{"components/ImagerecPage.html":{}}}],["queen",{"_index":776,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["queri",{"_index":363,"title":{},"body":{"components/ContactPage.html":{}}}],["quot",{"_index":446,"title":{},"body":{"components/ContactPage.html":{}}}],["raw",{"_index":688,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["rc.11",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["readabl",{"_index":731,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["readi",{"_index":603,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{}}}],["realli",{"_index":501,"title":{},"body":{"components/FeedbackPage.html":{}}}],["receiv",{"_index":366,"title":{},"body":{"components/ContactPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{}}}],["recognis",{"_index":518,"title":{},"body":{"components/HomePage.html":{}}}],["recognit",{"_index":653,"title":{},"body":{"components/ImagerecPage.html":{},"components/MyApp.html":{}}}],["refer",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["relat",{"_index":671,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["report",{"_index":156,"title":{},"body":{"components/AboutPage.html":{}}}],["request",{"_index":299,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{}}}],["requir",{"_index":472,"title":{},"body":{"components/FeedbackPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/UtilitiesPage.html":{},"dependencies.html":{}}}],["require(`./classes/${this.modeltype[this.modelnumber].classjson",{"_index":804,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["reset",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["resiz",{"_index":692,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["resized.expanddims(0",{"_index":787,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["respons",{"_index":365,"title":{},"body":{"components/ContactPage.html":{}}}],["response.coords.latitud",{"_index":432,"title":{},"body":{"components/ContactPage.html":{}}}],["response.coords.longitud",{"_index":433,"title":{},"body":{"components/ContactPage.html":{}}}],["response.json",{"_index":441,"title":{},"body":{"components/ContactPage.html":{}}}],["result",{"_index":187,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["result.likeli",{"_index":864,"title":{},"body":{"components/ResultsPage.html":{}}}],["result.nam",{"_index":863,"title":{},"body":{"components/ResultsPage.html":{}}}],["resultpr",{"_index":540,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["results!captur",{"_index":668,"title":{},"body":{"components/ImagerecPage.html":{}}}],["results'},{'nam",{"_index":183,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["results.html",{"_index":846,"title":{},"body":{"components/ResultsPage.html":{}}}],["results.t",{"_index":857,"title":{},"body":{"components/ResultsPage.html":{}}}],["results/result",{"_index":594,"title":{},"body":{"components/ImagerecPage.html":{}}}],["resultsmod",{"_index":610,"title":{},"body":{"components/ImagerecPage.html":{}}}],["resultsmodal.pres",{"_index":613,"title":{},"body":{"components/ImagerecPage.html":{}}}],["resultspag",{"_index":182,"title":{"components/ResultsPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"coverage.html":{},"index.html":{}}}],["retriev",{"_index":327,"title":{},"body":{"components/ContactPage.html":{}}}],["return",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["root",{"_index":833,"title":{},"body":{"components/MyApp.html":{}}}],["rootpag",{"_index":820,"title":{},"body":{"components/MyApp.html":{}}}],["rxj",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":503,"title":{},"body":{"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"components/UtilitiesPage.html":{}}}],["savetophotoalbum",{"_index":624,"title":{},"body":{"components/ImagerecPage.html":{}}}],["scienc",{"_index":138,"title":{},"body":{"components/AboutPage.html":{}}}],["screen",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["see",{"_index":98,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["select",{"_index":471,"title":{},"body":{"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["selector",{"_index":43,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["selectp",{"_index":543,"title":{},"body":{"components/ImagerecPage.html":{}}}],["send",{"_index":163,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["sender'",{"_index":466,"title":{},"body":{"components/FeedbackPage.html":{}}}],["senderfeedtyp",{"_index":491,"title":{},"body":{"components/FeedbackPage.html":{}}}],["sendermessag",{"_index":493,"title":{},"body":{"components/FeedbackPage.html":{}}}],["sendernam",{"_index":490,"title":{},"body":{"components/FeedbackPage.html":{}}}],["sendloc",{"_index":276,"title":{},"body":{"components/ContactPage.html":{}}}],["sent",{"_index":362,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{}}}],["serv",{"_index":509,"title":{},"body":{"components/HomePage.html":{}}}],["server",{"_index":331,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["servic",{"_index":297,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["set",{"_index":726,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["setinterv",{"_index":600,"title":{},"body":{"components/ImagerecPage.html":{}}}],["shark",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["shouldlocationbes",{"_index":284,"title":{},"body":{"components/ContactPage.html":{}}}],["singl",{"_index":884,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["single_item",{"_index":874,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["size",{"_index":691,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["slice",{"_index":732,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["smaller",{"_index":690,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["softwar",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["soon",{"_index":411,"title":{},"body":{"components/ContactPage.html":{},"components/MyApp.html":{}}}],["sort",{"_index":708,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["sortpr",{"_index":683,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["sourcetyp",{"_index":645,"title":{},"body":{"components/ImagerecPage.html":{}}}],["south",{"_index":142,"title":{},"body":{"components/AboutPage.html":{}}}],["specif",{"_index":504,"title":{},"body":{"components/FeedbackPage.html":{}}}],["specifi",{"_index":328,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["spinner",{"_index":572,"title":{},"body":{"components/ImagerecPage.html":{}}}],["splash",{"_index":827,"title":{},"body":{"components/MyApp.html":{}}}],["splashscreen",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["src",{"_index":564,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/app/app.component.t",{"_index":817,"title":{},"body":{"components/MyApp.html":{},"coverage.html":{}}}],["src/app/app.component.ts:29",{"_index":831,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:34",{"_index":832,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:38",{"_index":824,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.component.ts:65",{"_index":829,"title":{},"body":{"components/MyApp.html":{}}}],["src/app/app.module.t",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["src/pages/about/about.t",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/pages/about/about.ts:32",{"_index":63,"title":{},"body":{"components/AboutPage.html":{}}}],["src/pages/about/about.ts:39",{"_index":88,"title":{},"body":{"components/AboutPage.html":{}}}],["src/pages/about/about.ts:45",{"_index":74,"title":{},"body":{"components/AboutPage.html":{}}}],["src/pages/about/about.ts:52",{"_index":80,"title":{},"body":{"components/AboutPage.html":{}}}],["src/pages/about/about.ts:60",{"_index":86,"title":{},"body":{"components/AboutPage.html":{}}}],["src/pages/about/about.ts:68",{"_index":87,"title":{},"body":{"components/AboutPage.html":{}}}],["src/pages/contact/contact.t",{"_index":263,"title":{},"body":{"components/ContactPage.html":{},"coverage.html":{}}}],["src/pages/contact/contact.ts:106",{"_index":325,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:131",{"_index":338,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:148",{"_index":335,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:164",{"_index":339,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:171",{"_index":306,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:186",{"_index":312,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:41",{"_index":364,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:46",{"_index":351,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:51",{"_index":359,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:56",{"_index":357,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:61",{"_index":358,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:66",{"_index":355,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:70",{"_index":289,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:81",{"_index":353,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:82",{"_index":345,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/contact/contact.ts:96",{"_index":332,"title":{},"body":{"components/ContactPage.html":{}}}],["src/pages/feedback/feedback.t",{"_index":449,"title":{},"body":{"components/FeedbackPage.html":{},"coverage.html":{}}}],["src/pages/feedback/feedback.ts:105",{"_index":461,"title":{},"body":{"components/FeedbackPage.html":{}}}],["src/pages/feedback/feedback.ts:121",{"_index":462,"title":{},"body":{"components/FeedbackPage.html":{}}}],["src/pages/feedback/feedback.ts:31",{"_index":478,"title":{},"body":{"components/FeedbackPage.html":{}}}],["src/pages/feedback/feedback.ts:36",{"_index":474,"title":{},"body":{"components/FeedbackPage.html":{}}}],["src/pages/feedback/feedback.ts:45",{"_index":470,"title":{},"body":{"components/FeedbackPage.html":{}}}],["src/pages/feedback/feedback.ts:50",{"_index":475,"title":{},"body":{"components/FeedbackPage.html":{}}}],["src/pages/feedback/feedback.ts:53",{"_index":456,"title":{},"body":{"components/FeedbackPage.html":{}}}],["src/pages/feedback/feedback.ts:64",{"_index":477,"title":{},"body":{"components/FeedbackPage.html":{}}}],["src/pages/feedback/feedback.ts:65",{"_index":468,"title":{},"body":{"components/FeedbackPage.html":{}}}],["src/pages/feedback/feedback.ts:85",{"_index":459,"title":{},"body":{"components/FeedbackPage.html":{}}}],["src/pages/feedback/feedback.ts:92",{"_index":467,"title":{},"body":{"components/FeedbackPage.html":{}}}],["src/pages/home/home.t",{"_index":507,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/pages/home/home.ts:39",{"_index":514,"title":{},"body":{"components/HomePage.html":{}}}],["src/pages/imagerec/imagerec.t",{"_index":526,"title":{},"body":{"components/ImagerecPage.html":{},"coverage.html":{}}}],["src/pages/imagerec/imagerec.ts:108",{"_index":548,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:122",{"_index":551,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:139",{"_index":554,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:184",{"_index":552,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:223",{"_index":549,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:37",{"_index":559,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:43",{"_index":565,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:48",{"_index":567,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:52",{"_index":590,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:57",{"_index":581,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:61",{"_index":561,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:65",{"_index":586,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:69",{"_index":582,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:73",{"_index":575,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:77",{"_index":546,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:89",{"_index":578,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/imagerec/imagerec.ts:90",{"_index":577,"title":{},"body":{"components/ImagerecPage.html":{}}}],["src/pages/results/results.t",{"_index":845,"title":{},"body":{"components/ResultsPage.html":{},"coverage.html":{}}}],["src/pages/results/results.ts:38",{"_index":848,"title":{},"body":{"components/ResultsPage.html":{}}}],["src/pages/results/results.ts:47",{"_index":854,"title":{},"body":{"components/ResultsPage.html":{}}}],["src/pages/results/results.ts:61",{"_index":850,"title":{},"body":{"components/ResultsPage.html":{}}}],["src/pages/results/results.ts:69",{"_index":852,"title":{},"body":{"components/ResultsPage.html":{}}}],["src/pages/utilities/utilities.t",{"_index":865,"title":{},"body":{"components/UtilitiesPage.html":{},"coverage.html":{}}}],["src/pages/utilities/utilities.ts:39",{"_index":891,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["src/pages/utilities/utilities.ts:41",{"_index":895,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["src/pages/utilities/utilities.ts:42",{"_index":877,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["src/pages/utilities/utilities.ts:43",{"_index":879,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["src/pages/utilities/utilities.ts:50",{"_index":888,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["src/pages/utilities/utilities.ts:82",{"_index":875,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["src/providers/model",{"_index":669,"title":{},"body":{"injectables/ModelLoaderProvider.html":{},"coverage.html":{}}}],["statement",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":825,"title":{},"body":{"components/MyApp.html":{}}}],["statusbar",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"dependencies.html":{}}}],["statusbar.styledefault",{"_index":840,"title":{},"body":{"components/MyApp.html":{}}}],["still",{"_index":152,"title":{},"body":{"components/AboutPage.html":{}}}],["storag",{"_index":757,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["store",{"_index":562,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["string",{"_index":469,"title":{},"body":{"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/UtilitiesPage.html":{}}}],["student",{"_index":139,"title":{},"body":{"components/AboutPage.html":{}}}],["subject",{"_index":423,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["submiss",{"_index":326,"title":{},"body":{"components/ContactPage.html":{}}}],["submit",{"_index":277,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{}}}],["subscribe(data1",{"_index":425,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["subtitl",{"_index":409,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["success",{"_index":479,"title":{},"body":{"components/FeedbackPage.html":{}}}],["support",{"_index":985,"title":{},"body":{"modules.html":{}}}],["suppos",{"_index":576,"title":{},"body":{"components/ImagerecPage.html":{}}}],["sure",{"_index":489,"title":{},"body":{"components/FeedbackPage.html":{}}}],["svg",{"_index":986,"title":{},"body":{"modules.html":{}}}],["sw",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["system",{"_index":148,"title":{},"body":{"components/AboutPage.html":{}}}],["tab",{"_index":830,"title":{},"body":{"components/MyApp.html":{}}}],["tabcompon",{"_index":836,"title":{},"body":{"components/MyApp.html":{}}}],["tabl",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["tabshideonsubpag",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["tabspag",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"components/MyApp.html":{},"index.html":{}}}],["take",{"_index":122,"title":{},"body":{"components/AboutPage.html":{},"components/ImagerecPage.html":{}}}],["takep",{"_index":544,"title":{},"body":{"components/ImagerecPage.html":{}}}],["tap",{"_index":861,"title":{},"body":{"components/ResultsPage.html":{}}}],["targetheight",{"_index":628,"title":{},"body":{"components/ImagerecPage.html":{}}}],["targetwidth",{"_index":626,"title":{},"body":{"components/ImagerecPage.html":{}}}],["team",{"_index":137,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{}}}],["tell",{"_index":498,"title":{},"body":{"components/FeedbackPage.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["templateurl",{"_index":44,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["tensorflow",{"_index":672,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["tensorflow/tfj",{"_index":763,"title":{},"body":{"injectables/ModelLoaderProvider.html":{},"dependencies.html":{}}}],["tensorflowj",{"_index":699,"title":{},"body":{"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["test",{"_index":154,"title":{},"body":{"components/AboutPage.html":{}}}],["testproject",{"_index":421,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["text",{"_index":424,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{}}}],["tf",{"_index":762,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["tf.frompixel",{"_index":695,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["tf.frompixels(imag",{"_index":781,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["tf.image.resizebilinear(crop",{"_index":785,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["tf.loadmodel",{"_index":700,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["tf.loadmodel(this.modeltype[this.modelnumber].url",{"_index":769,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["tf.model",{"_index":735,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["tf.tensor",{"_index":790,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["tf.tensor).dispos",{"_index":772,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["tf.tensor.data",{"_index":715,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["tf.tidi",{"_index":780,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["thank",{"_index":487,"title":{},"body":{"components/FeedbackPage.html":{}}}],["then((predict",{"_index":649,"title":{},"body":{"components/ImagerecPage.html":{}}}],["then(data",{"_index":399,"title":{},"body":{"components/ContactPage.html":{}}}],["this.alertcontroller.cr",{"_index":407,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["this.alertctrl.cr",{"_index":640,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["this.camera.destinationtype.data_url",{"_index":619,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.camera.encodingtype.jpeg",{"_index":621,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.camera.getpicture(options).then((imagedata",{"_index":629,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.camera.mediatype.pictur",{"_index":623,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.camera.picturesourcetype.photolibrari",{"_index":646,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.content.scrolltobottom(1000",{"_index":633,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.content.scrolltobottom(300",{"_index":614,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.cropimage(raw",{"_index":782,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["this.empty_bucket",{"_index":880,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["this.fb.group",{"_index":370,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["this.filled_bucket",{"_index":881,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["this.geolocation.getcurrentposition().then((respons",{"_index":430,"title":{},"body":{"components/ContactPage.html":{}}}],["this.getgeoloc",{"_index":381,"title":{},"body":{"components/ContactPage.html":{}}}],["this.getgoogleaddress(this.positionlat",{"_index":397,"title":{},"body":{"components/ContactPage.html":{}}}],["this.http.post('https://u",{"_index":419,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["this.imagetopredict",{"_index":635,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.imgavail",{"_index":638,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.imgselectedorcaptur",{"_index":636,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.loading.pres",{"_index":647,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.loadingcontroller.cr",{"_index":571,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.modalctrl.create(aboutpage,data",{"_index":384,"title":{},"body":{"components/ContactPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/UtilitiesPage.html":{}}}],["this.modalctrl.create(feedbackpag",{"_index":112,"title":{},"body":{"components/AboutPage.html":{}}}],["this.modalctrl.create(resultspag",{"_index":611,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.model",{"_index":767,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["this.model.predict(img",{"_index":789,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["this.model.predict(tf.zeros([1",{"_index":770,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["this.modelhaslink",{"_index":807,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["this.modelisreadi",{"_index":765,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["this.modelloader.mappredictions(predict",{"_index":650,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.modelloader.modelisreadi",{"_index":601,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.modelloader.predictimage(this.imagetopredict",{"_index":648,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.modelstatu",{"_index":774,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["this.modeltype[this.modelnumber].haslink",{"_index":810,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["this.mygroup",{"_index":369,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["this.mygroup.controls['feedtype'].setvalue(this.defaultfeedtyp",{"_index":482,"title":{},"body":{"components/FeedbackPage.html":{}}}],["this.mygroup.get('email').valu",{"_index":390,"title":{},"body":{"components/ContactPage.html":{}}}],["this.mygroup.get('feedtype').valu",{"_index":492,"title":{},"body":{"components/FeedbackPage.html":{}}}],["this.mygroup.get('message').valu",{"_index":392,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["this.mygroup.get('name').valu",{"_index":388,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["this.mygroup.reset",{"_index":394,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["this.myphoto",{"_index":630,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.nav.setroot(page.compon",{"_index":844,"title":{},"body":{"components/MyApp.html":{}}}],["this.notreadytopredict",{"_index":605,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.pag",{"_index":843,"title":{},"body":{"components/MyApp.html":{}}}],["this.positionlat",{"_index":431,"title":{},"body":{"components/ContactPage.html":{}}}],["this.positionlong",{"_index":398,"title":{},"body":{"components/ContactPage.html":{}}}],["this.postmessage(contactnam",{"_index":403,"title":{},"body":{"components/ContactPage.html":{}}}],["this.postmessage(sendernam",{"_index":494,"title":{},"body":{"components/FeedbackPage.html":{}}}],["this.predictbuttontext",{"_index":604,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.presentalert",{"_index":393,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["this.presentresult",{"_index":651,"title":{},"body":{"components/ImagerecPage.html":{}}}],["this.processresultnam",{"_index":801,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["this.resultpr",{"_index":612,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["this.resultpreds.foreach((el",{"_index":811,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["this.sendloc",{"_index":429,"title":{},"body":{"components/ContactPage.html":{}}}],["this.shouldlocationbes",{"_index":395,"title":{},"body":{"components/ContactPage.html":{}}}],["this.single_item",{"_index":882,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["this.submit",{"_index":428,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["this.viewctrl.dismiss",{"_index":106,"title":{},"body":{"components/AboutPage.html":{},"components/FeedbackPage.html":{},"components/ResultsPage.html":{}}}],["time",{"_index":568,"title":{},"body":{"components/ImagerecPage.html":{}}}],["titl",{"_index":408,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{}}}],["tobia",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/FeedbackPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["tool",{"_index":961,"title":{},"body":{"dependencies.html":{}}}],["toolbox",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["train",{"_index":523,"title":{},"body":{"components/HomePage.html":{}}}],["transfer",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["tri",{"_index":766,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["true",{"_index":341,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["truli",{"_index":488,"title":{},"body":{"components/FeedbackPage.html":{}}}],["type",{"_index":66,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"coverage.html":{}}}],["unavail",{"_index":496,"title":{},"body":{"components/FeedbackPage.html":{}}}],["undisclos",{"_index":406,"title":{},"body":{"components/ContactPage.html":{}}}],["unit",{"_index":901,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["univers",{"_index":140,"title":{},"body":{"components/AboutPage.html":{}}}],["up",{"_index":555,"title":{},"body":{"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["updat",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["upload",{"_index":654,"title":{},"body":{"components/ImagerecPage.html":{}}}],["upon",{"_index":290,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["url",{"_index":464,"title":{},"body":{"components/FeedbackPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{}}}],["us",{"_index":73,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["useclass",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":25,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["user'",{"_index":361,"title":{},"body":{"components/ContactPage.html":{}}}],["util",{"_index":185,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["utilities.html",{"_index":870,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["utilities.t",{"_index":866,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["utilitiespag",{"_index":184,"title":{"components/UtilitiesPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{},"coverage.html":{},"index.html":{}}}],["v1.0",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["valid",{"_index":293,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/UtilitiesPage.html":{}}}],["validators.compose([validators.maxlength(70",{"_index":373,"title":{},"body":{"components/ContactPage.html":{}}}],["validators.compose([validators.requir",{"_index":371,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["validators.email",{"_index":350,"title":{},"body":{"components/ContactPage.html":{}}}],["validators.minlength(1",{"_index":372,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{}}}],["validators.pattern('^[_a",{"_index":374,"title":{},"body":{"components/ContactPage.html":{}}}],["validators.requir",{"_index":349,"title":{},"body":{"components/ContactPage.html":{}}}],["valu",{"_index":320,"title":{},"body":{"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["var",{"_index":170,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["variou",{"_index":323,"title":{},"body":{"components/ContactPage.html":{}}}],["version",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"injectables/ModelLoaderProvider.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["via",{"_index":269,"title":{},"body":{"components/ContactPage.html":{},"components/ImagerecPage.html":{}}}],["view",{"_index":71,"title":{},"body":{"components/AboutPage.html":{},"components/FeedbackPage.html":{},"components/ImagerecPage.html":{},"components/ResultsPage.html":{}}}],["viewchild",{"_index":558,"title":{},"body":{"components/ImagerecPage.html":{},"components/MyApp.html":{}}}],["viewchild('cont",{"_index":595,"title":{},"body":{"components/ImagerecPage.html":{}}}],["viewchild(nav",{"_index":838,"title":{},"body":{"components/MyApp.html":{}}}],["viewcontrol",{"_index":60,"title":{},"body":{"components/AboutPage.html":{},"components/FeedbackPage.html":{},"components/ResultsPage.html":{}}}],["viewctrl",{"_index":51,"title":{},"body":{"components/AboutPage.html":{},"components/FeedbackPage.html":{},"components/ResultsPage.html":{}}}],["vision",{"_index":119,"title":{},"body":{"components/AboutPage.html":{}}}],["void",{"_index":79,"title":{},"body":{"components/AboutPage.html":{},"components/ContactPage.html":{},"components/FeedbackPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"injectables/ModelLoaderProvider.html":{},"components/MyApp.html":{},"components/ResultsPage.html":{},"components/UtilitiesPage.html":{}}}],["want",{"_index":445,"title":{},"body":{"components/ContactPage.html":{}}}],["warm",{"_index":701,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["we'll",{"_index":521,"title":{},"body":{"components/HomePage.html":{}}}],["we\\'ll",{"_index":525,"title":{},"body":{"components/HomePage.html":{}}}],["web",{"_index":856,"title":{},"body":{"components/ResultsPage.html":{}}}],["websit",{"_index":82,"title":{},"body":{"components/AboutPage.html":{}}}],["webview",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["weigh",{"_index":885,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["weight",{"_index":869,"title":{},"body":{"components/UtilitiesPage.html":{}}}],["whether",{"_index":360,"title":{},"body":{"components/ContactPage.html":{},"injectables/ModelLoaderProvider.html":{}}}],["whitelist",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["window.open('https://github.com/orishaorrie/softwaresharks/issues/new/choos",{"_index":107,"title":{},"body":{"components/AboutPage.html":{}}}],["window.open('https://www.freeprivacypolicy.com/privacy/view/b0d98055db1daabbf50b21d867461a36",{"_index":111,"title":{},"body":{"components/AboutPage.html":{}}}],["window.open(url",{"_index":860,"title":{},"body":{"components/ResultsPage.html":{}}}],["world",{"_index":383,"title":{},"body":{"components/ContactPage.html":{},"components/HomePage.html":{},"components/ImagerecPage.html":{},"components/UtilitiesPage.html":{}}}],["ya",{"_index":775,"title":{},"body":{"injectables/ModelLoaderProvider.html":{}}}],["yarn",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["z0",{"_index":376,"title":{},"body":{"components/ContactPage.html":{}}}],["z]{2",{"_index":380,"title":{},"body":{"components/ContactPage.html":{}}}],["za",{"_index":375,"title":{},"body":{"components/ContactPage.html":{}}}],["zone.j",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/about/about.ts\n\n\n    \n        Description\n    \n    \n        File Name:       about.ts\nVersion Number:  v1.0\nAuthor Name:     Orisha Orrie\nProject Name:    Ninshiki\nOrganization:    Software Sharks\nManual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf\nUpdate History:\nDate         Author        Description\n21/07/2018   Orisha        Created modal\nFunctional Description:\n  Displays additional information about the app and provides access to the feedback page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-about\n            \n\n\n\n\n            \n                templateUrl\n                about.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                viewCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeModal\n                            \n                            \n                                openBrowserToGithubIssues\n                            \n                            \n                                openBrowserToPP\n                            \n                            \n                                openFeedback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, viewCtrl: ViewController, modalCtrl: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/pages/about/about.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls navigation\n\n                                                        \n                                                \n                                                \n                                                        viewCtrl\n                                                  \n                                                        \n                                                                    ViewController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls the current view\n\n                                                        \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls the modal that is presented. Used for the Feedback page modal\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/about/about.ts:45\n                            \n                        \n\n\n                \n                    \n                            Called when the Back button is called\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openBrowserToGithubIssues\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenBrowserToGithubIssues()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/about/about.ts:52\n                            \n                        \n\n\n                \n                    \n                            Opens website in external browser\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openBrowserToPP\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenBrowserToPP()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/about/about.ts:60\n                            \n                        \n\n\n                \n                    \n                            Opens website in external browser\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openFeedback\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenFeedback()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/about/about.ts:68\n                            \n                        \n\n\n                \n                    \n                            Opens the Feedback page modal\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalCtrl:     ModalController\n\n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/about/about.ts:39\n                            \n                        \n\n                \n                    \n                        Controls the modal that is presented. Used for the Feedback page modal\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/about/about.ts:39\n                            \n                        \n\n                \n                    \n                        Controls navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewCtrl:     ViewController\n\n                    \n                \n                    \n                        \n                            Type :     ViewController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/about/about.ts:39\n                            \n                        \n\n                \n                    \n                        Controls the current view\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { FeedbackPage } from './../feedback/feedback';\nimport { Component } from '@angular/core';\nimport { NavController, ModalController } from 'ionic-angular';\nimport { ViewController } from 'ionic-angular';\n\n/**\n * File Name:       about.ts\n * Version Number:  v1.0\n * Author Name:     Orisha Orrie\n * Project Name:    Ninshiki\n * Organization:    Software Sharks\n * Manual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf\n * Update History:\n * ------------------------------------------\n * Date         Author        Description\n * 21/07/2018   Orisha        Created modal\n * ------------------------------------------\n * Functional Description:\n *  Displays additional information about the app and provides access to the feedback page\n */\n\n/*\n  Generated class for the ModelLoaderProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Component({\n  selector: 'page-about',\n  templateUrl: 'about.html'\n})\nexport class AboutPage {\n\n  /**\n   * @param navCtrl Controls navigation\n   * @param viewCtrl Controls the current view\n   * @param modalCtrl Controls the modal that is presented. Used for the Feedback page modal\n   */\n  constructor(public navCtrl: NavController, public viewCtrl : ViewController, public modalCtrl: ModalController) {\n  }\n\n  /**\n   * Called when the Back button is called\n   */\n  public closeModal(){\n    this.viewCtrl.dismiss();\n  }\n\n  /**\n   * Opens website in external browser\n   */\n  openBrowserToGithubIssues() {\n    window.open('https://github.com/OrishaOrrie/SoftwareSharks/issues/new/choose', '_system', 'location=yes');\n    return false;\n  }\n\n  /**\n   * Opens website in external browser\n   */\n  openBrowserToPP() {\n    window.open('https://www.freeprivacypolicy.com/privacy/view/b0d98055db1daabbf50b21d867461a36', '_system', 'location=yes');\n    return false;\n  }\n\n  /**\n   * Opens the Feedback page modal\n   */\n  openFeedback() {\n    let feedbackPage = this.modalCtrl.create(FeedbackPage);\n\t\tfeedbackPage.present();\n  }\n}\n\n    \n\n    \n        \n  \n      \n          Close\n        \n    About Us\n  \n\n\n\n  Ninshiki -->\n  \n  Ninshiki brings the power of AI and Computer Vision to your mobile device. Take an image\n  of an object and let our custom-defined model predict what the object is!\n  Developed by:\n  \n  \n    Orisha Orrie\n    Mark Coetzer\n    Mukundi Matodzi\n    Jonathan Lew\n    Tobias Bester\n  \n  \n    \n    \n  \n  We are Software Sharks, a team of Computer Science students from the University of Pretoria, South Africa\n  This app is part of our Capstone Project, in which we have to design, develop, and document a system \n    to meet a client's needs. The app is open-source and is still in Beta testing, so any feedback and bug reports would be hugely appreciated, and might help us get better marks :)\n  \n    \n    Report Issue on GitHub\n  \n    \n    Send Feedback\n  \n    View Privacy Policy\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Close            About Us    Ninshiki -->    Ninshiki brings the power of AI and Computer Vision to your mobile device. Take an image  of an object and let our custom-defined model predict what the object is!  Developed by:        Orisha Orrie    Mark Coetzer    Mukundi Matodzi    Jonathan Lew    Tobias Bester                We are Software Sharks, a team of Computer Science students from the University of Pretoria, South Africa  This app is part of our Capstone Project, in which we have to design, develop, and document a system     to meet a client\\'s needs. The app is open-source and is still in Beta testing, so any feedback and bug reports would be hugely appreciated, and might help us get better marks :)          Report Issue on GitHub          Send Feedback      View Privacy Policy'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'page-about'},{'name': 'ContactPage', 'selector': 'page-contact'},{'name': 'FeedbackPage', 'selector': 'page-feedback'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'ImagerecPage', 'selector': 'page-imagerec'},{'name': 'MyApp', 'selector': ''},{'name': 'ResultsPage', 'selector': 'page-results'},{'name': 'UtilitiesPage', 'selector': 'page-utilities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutPage->AppModule\n\n\n\n\n\nContactPage\n\nContactPage\n\nAppModule -->\n\nContactPage->AppModule\n\n\n\n\n\nFeedbackPage\n\nFeedbackPage\n\nAppModule -->\n\nFeedbackPage->AppModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nAppModule -->\n\nHomePage->AppModule\n\n\n\n\n\nImagerecPage\n\nImagerecPage\n\nAppModule -->\n\nImagerecPage->AppModule\n\n\n\n\n\nMyApp\n\nMyApp\n\nAppModule -->\n\nMyApp->AppModule\n\n\n\n\n\nResultsPage\n\nResultsPage\n\nAppModule -->\n\nResultsPage->AppModule\n\n\n\n\n\nTabsPage\n\nTabsPage\n\nAppModule -->\n\nTabsPage->AppModule\n\n\n\n\n\nUtilitiesPage\n\nUtilitiesPage\n\nAppModule -->\n\nUtilitiesPage->AppModule\n\n\n\n\n\nIonicApp \n\nIonicApp \n\nIonicApp  -->\n\nAppModule->IonicApp \n\n\n\n\n\nModelLoaderProvider\n\nModelLoaderProvider\n\nAppModule -->\n\nModelLoaderProvider->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AboutPage\n                            \n                            \n                                ContactPage\n                            \n                            \n                                FeedbackPage\n                            \n                            \n                                HomePage\n                            \n                            \n                                ImagerecPage\n                            \n                            \n                                MyApp\n                            \n                            \n                                ResultsPage\n                            \n                            \n                                TabsPage\n                            \n                            \n                                UtilitiesPage\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AboutPage\n                            \n                            \n                                ContactPage\n                            \n                            \n                                FeedbackPage\n                            \n                            \n                                HomePage\n                            \n                            \n                                ImagerecPage\n                            \n                            \n                                MyApp\n                            \n                            \n                                ResultsPage\n                            \n                            \n                                TabsPage\n                            \n                            \n                                UtilitiesPage\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ModelLoaderProvider\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                IonicApp\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { ModelLoaderProvider } from './../providers/model-loader/model-loader';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\nimport { AboutPage } from '../pages/about/about';\nimport { ContactPage } from '../pages/contact/contact';\nimport { FeedbackPage } from './../pages/feedback/feedback';\nimport { HomePage } from '../pages/home/home';\nimport { TabsPage } from '../pages/tabs/tabs';\nimport { UtilitiesPage } from '../pages/utilities/utilities';\nimport { ImagerecPage } from '../pages/imagerec/imagerec';\nimport { ResultsPage } from '../pages/results/results';\n\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { Camera } from '@ionic-native/camera';\nimport { Firebase } from '@ionic-native/firebase';\nimport { Geolocation } from '@ionic-native/geolocation';\n\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport {AngularFireModule} from 'angularfire2';\nimport {AngularFireDatabaseModule /*, AngularFireDatabase,*/ } from 'angularfire2/database';\nimport {AngularFireAuthModule} from 'angularfire2/auth';\nimport { MatCardModule, MatTableModule } from '@angular/material';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { environment } from './../environments/environment';\nimport { AngularFireStorageModule } from 'angularfire2/storage';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    AboutPage,\n    ContactPage,\n    HomePage,\n    TabsPage,\n    UtilitiesPage,\n    ImagerecPage,\n    FeedbackPage,\n    ResultsPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp, {\n      tabsHideOnSubPages: false\n   }),\n    HttpModule,\n    HttpClientModule,\n    FormsModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    AngularFireAuthModule,\n    MatCardModule,\n    MatTableModule,\n    CdkTableModule,\n    AngularFirestoreModule,\n    AngularFireStorageModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    AboutPage,\n    ContactPage,\n    HomePage,\n    TabsPage,\n    UtilitiesPage,\n    ImagerecPage,\n    FeedbackPage,\n    ResultsPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    Camera,\n    AngularFirestoreModule,\n    Firebase,\n    ModelLoaderProvider,\n    Geolocation,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactPage.html":{"url":"components/ContactPage.html","title":"component - ContactPage","body":"\n                   \n\n\n\n\n\n  Components\n  ContactPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/contact/contact.ts\n\n\n    \n        Description\n    \n    \n        File Name:       contact.ts\nVersion Number:  v1.0\nAuthor Name:     Orisha Orrie\nProject Name:    Ninshiki\nOrganization:    Software Sharks\nManual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf\nUpdate History:\nDate         Author        Description\n21/07/2018   Orisha        Created component\nFunctional Description:\n  Provides interface to allow user to contact Bramhope via email\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-contact\n            \n\n\n\n\n            \n                templateUrl\n                contact.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                email\n                            \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                myGroup\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                positionLat\n                            \n                            \n                                positionLong\n                            \n                            \n                                sendLocation\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGeolocation\n                            \n                            \n                                getGoogleAddress\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openModal\n                            \n                            \n                                postMessage\n                            \n                            \n                                presentAlert\n                            \n                            \n                                shouldLocationBeSent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, modalCtrl: ModalController, http: HttpClient, alertController: AlertController, fb: FormBuilder, geolocation: Geolocation)\n                    \n                \n                        \n                            \n                                Defined in src/pages/contact/contact.ts:70\n                            \n                        \n\n                \n                    \n                            Upon construction, the form and its validation is initialized. Also gets geolocation data\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls navigation\n\n                                                        \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls the modal that is presented. Used for the About page modal\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides the service to handle HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Allows for alerts to appear \n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides the service to build a form\n\n                                                        \n                                                \n                                                \n                                                        geolocation\n                                                  \n                                                        \n                                                                    Geolocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Ionic Cordova plugin to natively handle geolocation data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getGeolocation\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetGeolocation()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:171\n                            \n                        \n\n\n                \n                    \n                            Uses the Ionic geolocation module to obtain the current longitude and lattitude\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getGoogleAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetGoogleAddress(lat: , lng: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:186\n                            \n                        \n\n\n                \n                    \n                            Makes an API call to Google Maps to get the address from the geolocation data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lat\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Current latitude value\n\n                                                        \n                                                \n                                                \n                                                        lng\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Current longitude value\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    A JSON array with various details of the address as returned by the Google Maps API\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:106\n                            \n                        \n\n\n                \n                    \n                            Called upon valid form submission. Obtains values to submit from form, then retrieves geolocation data if specified,\nand finally posts the data to the email server.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:96\n                            \n                        \n\n\n                \n                    \n                            Opens the About modal\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \npostMessage(name: , email: , message: , address: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:148\n                            \n                        \n\n\n                \n                    \n                            Completes the HTTP POST request to the email server with the specified data\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Name value from form\n\n                                                        \n                                                \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Email value from form\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Message value from form\n\n                                                        \n                                                \n                                                \n                                                        address\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Address value as determined by getGoogleAddress(), if specified\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            presentAlert\n                            \n                            \n                        \n                    \n                \n                \n                    \npresentAlert()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:131\n                            \n                        \n\n\n                \n                    \n                            Alert component that is called upon form submission\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shouldLocationBeSent\n                            \n                            \n                        \n                    \n                \n                \n                    \nshouldLocationBeSent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:164\n                            \n                        \n\n\n                \n                    \n                            Evaluates to true if the Send Location checkbox is checked in the form\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertController\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alertController:     AlertController\n\n                    \n                \n                    \n                        \n                            Type :     AlertController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:82\n                            \n                        \n\n                \n                    \n                        Allows for alerts to appear \n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     \n\n                    \n                \n                    \n                        \n                            Default value : new FormControl('', [Validators.required, Validators.email] )\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:46\n                            \n                        \n\n                \n                    \n                        FormControl used to validate email input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalCtrl:     ModalController\n\n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:81\n                            \n                        \n\n                \n                    \n                        Controls the modal that is presented. Used for the About page modal\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        myGroup:     \n\n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    name: new FormControl(),\n    email: new FormControl(),\n    message: new FormControl()\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:66\n                            \n                        \n\n                \n                    \n                        FormGroup used as a model for form input\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:81\n                            \n                        \n\n                \n                    \n                        Controls navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            positionLat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        positionLat:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:56\n                            \n                        \n\n                \n                    \n                        Latitude value obtained by the Geolocation module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            positionLong\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        positionLong:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:61\n                            \n                        \n\n                \n                    \n                        Longitude value obtained by the Geolocation module\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendLocation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sendLocation:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:51\n                            \n                        \n\n                \n                    \n                        Determines whether the user's geolocation should be sent with the user query\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/contact/contact.ts:41\n                            \n                        \n\n                \n                    \n                        Evaluates to true when a server response is received.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Geolocation } from '@ionic-native/geolocation';\nimport { Component } from '@angular/core';\nimport { NavController, AlertController } from 'ionic-angular';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl, Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { ModalController } from 'ionic-angular';\nimport { AboutPage } from '../about/about';\n\n/**\n * File Name:       contact.ts\n * Version Number:  v1.0\n * Author Name:     Orisha Orrie\n * Project Name:    Ninshiki\n * Organization:    Software Sharks\n * Manual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf\n * Update History:\n * ------------------------------------------\n * Date         Author        Description\n * 21/07/2018   Orisha        Created component\n * ------------------------------------------\n * Functional Description:\n *  Provides interface to allow user to contact Bramhope via email\n */\n\n/*\n  Generated class for the ModelLoaderProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n\n@Component({\n  selector: 'page-contact',\n  templateUrl: 'contact.html'\n})\nexport class ContactPage {\n\n  /**\n   * Evaluates to true when a server response is received.\n   */\n  submitted = false;\n\n  /**\n   * FormControl used to validate email input\n   */\n  email = new FormControl('', [Validators.required, Validators.email] );\n\n  /**\n   * Determines whether the user's geolocation should be sent with the user query\n   */\n  sendLocation = true;\n\n  /**\n   * Latitude value obtained by the Geolocation module\n   */\n  positionLat = 0;\n  \n  /**\n   * Longitude value obtained by the Geolocation module\n   */\n  positionLong = 0;\n\n  /**\n   * FormGroup used as a model for form input\n   */\n  myGroup = new FormGroup({\n    name: new FormControl(),\n    email: new FormControl(),\n    message: new FormControl()\n  });\n\n  /**\n   * Upon construction, the form and its validation is initialized. Also gets geolocation data\n   * @param navCtrl Controls navigation\n   * @param modalCtrl Controls the modal that is presented. Used for the About page modal\n   * @param http Provides the service to handle HTTP requests\n   * @param alertController Allows for alerts to appear \n   * @param fb Provides the service to build a form\n   * @param geolocation Ionic Cordova plugin to natively handle geolocation data\n   */\n  constructor(public navCtrl: NavController, public modalCtrl : ModalController, private http: HttpClient, \n    public alertController: AlertController, private fb: FormBuilder, private geolocation: Geolocation) {\n    \n    this.myGroup = this.fb.group({  \n      'name': ['', Validators.compose([Validators.required, Validators.minLength(1)])],\n      'email': ['', Validators.compose([Validators.maxLength(70), Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'), Validators.required])],\n      'message': ['', Validators.compose([Validators.required, Validators.minLength(1)])]\n    });\n\n    this.getGeolocation();\n  }\n\n  /**\n\t * Opens the About modal\n\t */\n  openModal() {\n    var data = { message : 'hello world' };\n    var homePage = this.modalCtrl.create(AboutPage,data);\n    homePage.present();\n  }\n    \n  /**\n   * Called upon valid form submission. Obtains values to submit from form, then retrieves geolocation data if specified,\n   * and finally posts the data to the email server.\n   */\n  onSubmit() {\n    const contactName = this.myGroup.get('name').value;\n    const contactEmail = this.myGroup.get('email').value;\n    const contactMessage = this.myGroup.get('message').value;\n    this.presentAlert();\n    this.myGroup.reset();\n\n    if (this.shouldLocationBeSent() == true) {\n      this.getGeolocation();\n      let googleAddress: any;\n      this.getGoogleAddress(this.positionLat, this.positionLong)\n        .then(data => {\n          googleAddress = data.results[0].address_components[3].long_name + ', ' + \n            data.results[0].address_components[4].long_name + ', ' + data.results[0].address_components[5].long_name;\n           this.postMessage(contactName, contactEmail, contactMessage, googleAddress);\n        })\n        .catch(error => console.error(error));    \n    } else {\n      this.postMessage(contactName, contactEmail, contactMessage, 'Undisclosed location');\n    }\n  }\n\n  /**\n   * Alert component that is called upon form submission\n   */\n  presentAlert() {\n    let alert = this.alertController.create({\n      title: 'Message sent!',\n      subTitle: 'Your message has been sent. A member of our team will get back to you as soon as possible.',\n      buttons: ['Dismiss']\n    });\n  \n    alert.present();\n  }\n\n  /**\n   * Completes the HTTP POST request to the email server with the specified data\n   * @param name Name value from form\n   * @param email Email value from form\n   * @param message Message value from form\n   * @param address Address value as determined by getGoogleAddress(), if specified\n   */\n  postMessage(name, email, message, address) {\n    console.log('Name: ' + name + ' Email: ' + email + ' Msg: ' + message + ' Address: ' + address);\n    let messageToSend = message + '\\nSent from:  ' + address;\n    this.http.post('https://us-central1-testproject-ee885.cloudfunctions.net/app/sendmail',\n    {'subject': name, 'text': messageToSend, 'email': email}\n      ).subscribe(data1 => {\n        console.log(data1);\n        if (data1 == 'sent') {\n          this.submitted = true;\n        }\n      });\n  }\n\n  /**\n   * Evaluates to true if the Send Location checkbox is checked in the form\n   */\n  shouldLocationBeSent() {\n    return this.sendLocation;\n  }\n\n  /**\n   * Uses the Ionic geolocation module to obtain the current longitude and lattitude\n   */\n  getGeolocation() {\n    this.geolocation.getCurrentPosition().then((response) => {\n      this.positionLat = response.coords.latitude;\n      this.positionLong = response.coords.longitude;\n    }).catch((error) => {\n      console.error(\"Error getting geolocation data: \" + error);\n    });\n  }\n\n  /**\n   * Makes an API call to Google Maps to get the address from the geolocation data\n   * @param lat Current latitude value\n   * @param lng Current longitude value\n   * @returns A JSON array with various details of the address as returned by the Google Maps API\n   */\n  getGoogleAddress(lat, lng) {\n    const latlng = lat + ',' + lng;\n    return fetch('https://maps.googleapis.com/maps/api/geocode/json?latlng=' + latlng + '&key=AIzaSyD1GI0J6QPOYxqxBMG4Z2oIr-ctibYoRiI')\n      .then(\n        response => {\n          return response.json();\n        });\n  }\n\n}\n\n    \n\n    \n        \n    \n        Contact Us\n        \n            \n             \n           \n          \n      \n\n\n\n    Got a query about one of Brahope's products? Want to request a quote? Send Bramhope a message! \n    \n \n      \n        Full Name\n        \n      \n      \n        Email Address\n        \n      \n      \n        Message\n        \n      \n    \n      \n        Send location data\n        \n      \n \n    Send\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Contact Us                                                                Got a query about one of Brahope\\'s products? Want to request a quote? Send Bramhope a message!                    Full Name                            Email Address                            Message                                Send location data                   Send  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'page-about'},{'name': 'ContactPage', 'selector': 'page-contact'},{'name': 'FeedbackPage', 'selector': 'page-feedback'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'ImagerecPage', 'selector': 'page-imagerec'},{'name': 'MyApp', 'selector': ''},{'name': 'ResultsPage', 'selector': 'page-results'},{'name': 'UtilitiesPage', 'selector': 'page-utilities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedbackPage.html":{"url":"components/FeedbackPage.html","title":"component - FeedbackPage","body":"\n                   \n\n\n\n\n\n  Components\n  FeedbackPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/feedback/feedback.ts\n\n\n    \n        Description\n    \n    \n        File Name:       feedback.ts\nVersion Number:  v1.0\nAuthor Name:     Tobias Bester\nProject Name:    Ninshiki\nOrganization:    Software Sharks\nManual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf\nUpdate History:\nDate         Author        Description\n01/07/2018   Tobias        Created component\nFunctional Description:\n  Allows user to send feedback to developers\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-feedback\n            \n\n\n\n\n            \n                templateUrl\n                feedback.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertController\n                            \n                            \n                                defaultFeedType\n                            \n                            \n                                feedType\n                            \n                            \n                                myGroup\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                submitted\n                            \n                            \n                                    Public\n                                viewCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeModal\n                            \n                            \n                                onSubmit\n                            \n                            \n                                postMessage\n                            \n                            \n                                presentAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, navParams: NavParams, viewCtrl: ViewController, fb: FormBuilder, http: HttpClient, alertController: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/pages/feedback/feedback.ts:53\n                            \n                        \n\n                \n                    \n                            Upon construction, the form and its validation is initialized\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls navigation\n\n                                                        \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls parameters passed in during navigation\n\n                                                        \n                                                \n                                                \n                                                        viewCtrl\n                                                  \n                                                        \n                                                                    ViewController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls the current view\n\n                                                        \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides the service to build a form\n\n                                                        \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides the service to handle HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        alertController\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Allows for alerts to appear\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/feedback/feedback.ts:85\n                            \n                        \n\n\n                \n                    \n                            Called when the Back button is pressed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/feedback/feedback.ts:105\n                            \n                        \n\n\n                \n                    \n                            Called when the Send Feedback button is pressed. Sends message and alerts user.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \npostMessage(name: , feedType: , message: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/feedback/feedback.ts:121\n                            \n                        \n\n\n                \n                    \n                            Uses POST to post the paramters to the server URL indicated\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The sender's name\n\n                                                        \n                                                \n                                                \n                                                        feedType\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The sender's specified feedback type\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The sender's message\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            presentAlert\n                            \n                            \n                        \n                    \n                \n                \n                    \npresentAlert()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/feedback/feedback.ts:92\n                            \n                        \n\n\n                \n                    \n                            Presents a model that indicates that the feedback is sent\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            alertController\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alertController:     AlertController\n\n                    \n                \n                    \n                        \n                            Type :     AlertController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/feedback/feedback.ts:65\n                            \n                        \n\n                \n                    \n                        Allows for alerts to appear\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultFeedType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultFeedType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'General Feedback'\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/feedback/feedback.ts:45\n                            \n                        \n\n                \n                    \n                        The default select element option as required\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            feedType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        feedType:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'General Feedback',\n    'Bug',\n    'Feature Request'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/feedback/feedback.ts:36\n                            \n                        \n\n                \n                    \n                        The array of options for the \"Feedback type\" select element\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        myGroup:     \n\n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    name: new FormControl(),\n    message: new FormControl()\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/feedback/feedback.ts:50\n                            \n                        \n\n                \n                    \n                        The objects that compose the Feedback form is in the FormGroup object\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/feedback/feedback.ts:64\n                            \n                        \n\n                \n                    \n                        Controls navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/feedback/feedback.ts:64\n                            \n                        \n\n                \n                    \n                        Controls parameters passed in during navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/feedback/feedback.ts:31\n                            \n                        \n\n                \n                    \n                        Evaluates to true when the email server returns a success code\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewCtrl:     ViewController\n\n                    \n                \n                    \n                        \n                            Type :     ViewController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/feedback/feedback.ts:64\n                            \n                        \n\n                \n                    \n                        Controls the current view\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { NavController, NavParams, ViewController, AlertController } from 'ionic-angular';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\n\n/**\n * File Name:       feedback.ts\n * Version Number:  v1.0\n * Author Name:     Tobias Bester\n * Project Name:    Ninshiki\n * Organization:    Software Sharks\n * Manual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf\n * Update History:\n * ------------------------------------------\n * Date         Author        Description\n * 01/07/2018   Tobias        Created component\n * ------------------------------------------\n * Functional Description:\n *  Allows user to send feedback to developers\n */\n\n@Component({\n  selector: 'page-feedback',\n  templateUrl: 'feedback.html',\n})\nexport class FeedbackPage {\n\n  /**\n   * Evaluates to true when the email server returns a success code\n   */\n  submitted = false;\n\n  /**\n   * The array of options for the \"Feedback type\" select element\n   */\n  feedType: string[] = [\n    'General Feedback',\n    'Bug',\n    'Feature Request'\n  ];\n\n  /**\n   * The default select element option as required\n   */\n  defaultFeedType = 'General Feedback';\n\n  /**\n   * The objects that compose the Feedback form is in the FormGroup object\n   */\n  myGroup = new FormGroup({\n    name: new FormControl(),\n    message: new FormControl()\n  });\n\n  /**\n   * Upon construction, the form and its validation is initialized\n   * @param navCtrl Controls navigation\n   * @param navParams Controls parameters passed in during navigation\n   * @param viewCtrl Controls the current view\n   * @param fb Provides the service to build a form\n   * @param http Provides the service to handle HTTP requests\n   * @param alertController Allows for alerts to appear\n   */\n  constructor(public navCtrl: NavController, public navParams: NavParams, public viewCtrl: ViewController,\n    private fb: FormBuilder, private http: HttpClient, public alertController: AlertController) {\n\n      this.myGroup = this.fb.group({\n        'feedType': new FormControl(null),\n        'name': ['', Validators.compose([Validators.required, Validators.minLength(1)])],\n        'message': ['', Validators.compose([Validators.required, Validators.minLength(1)])]\n      });\n      this.myGroup.controls['feedType'].setValue(this.defaultFeedType, {onlySelf: true});\n  }\n\n  /**\n   * @ignore\n   */\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad FeedbackPage');\n  }\n\n  /**\n   * Called when the Back button is pressed\n   */\n  public closeModal(){\n    this.viewCtrl.dismiss();\n  }\n\n  /**\n   * Presents a model that indicates that the feedback is sent\n   */\n  presentAlert() {\n    let alert = this.alertController.create({\n      title: 'Feedback sent!',\n      subTitle: 'Thanks, we truly appreciate it!',\n      buttons: ['Sure']\n    })\n\n    alert.present();\n  }\n\n  /**\n   * Called when the Send Feedback button is pressed. Sends message and alerts user.\n   */\n  onSubmit() {\n    const senderName = this.myGroup.get('name').value;\n    const senderFeedType = this.myGroup.get('feedType').value;\n    const senderMessage = this.myGroup.get('message').value;\n    this.presentAlert();\n    this.myGroup.reset();\n\n    this.postMessage(senderName, senderFeedType, senderMessage);\n  }\n\n  /**\n   * Uses POST to post the paramters to the server URL indicated\n   * @param name The sender's name\n   * @param feedType The sender's specified feedback type\n   * @param message The sender's message\n   */\n  postMessage(name, feedType, message) {\n    console.log('Name: ' + name + ' Type: ' + feedType + ' Msg: ' + message);\n    let messageToSend = 'Feedback type: ' + feedType + '\\n' + message;\n    this.http.post('https://us-central1-testproject-ee885.cloudfunctions.net/app/sendmail',\n    {'subject': name, 'text': messageToSend, 'email': \"Email unavailable\"}\n    ).subscribe(data1 => {\n      console.log(data1);\n      if (data1 == 'sent') {\n        this.submitted = true;\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Send Feedback\n    \n      Back\n    \n  \n\n\n\n\n\n  \n    Please tell us anything you like, don't like, or really hate, and then do the same but specifically about this app, thanks!\n  \n\n  \n \n    \n      Select feedback type\n      \n        {{ f }}\n      \n    \n    \n      Full Name\n      \n    \n    \n      Message\n      \n    \n    \n  \n\n  Send\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Send Feedback          Back            Please tell us anything you like, don\\'t like, or really hate, and then do the same but specifically about this app, thanks!               Select feedback type              {{ f }}                    Full Name                    Message                  Send'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'page-about'},{'name': 'ContactPage', 'selector': 'page-contact'},{'name': 'FeedbackPage', 'selector': 'page-feedback'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'ImagerecPage', 'selector': 'page-imagerec'},{'name': 'MyApp', 'selector': ''},{'name': 'ResultsPage', 'selector': 'page-results'},{'name': 'UtilitiesPage', 'selector': 'page-utilities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FeedbackPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/home/home.ts\n\n\n    \n        Description\n    \n    \n        File Name:       home.ts\nVersion Number:  v1.0\nAuthor Name:     Orisha Orrie\nProject Name:    Ninshiki\nOrganization:    Software Sharks\nManual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf\nUpdate History:\nDate         Author        Description\n21/07/2018   Orisha        Created component\nFunctional Description:\n  Serves as a facade for the application\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-home\n            \n\n\n\n\n            \n                templateUrl\n                home.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/home/home.ts:39\n                            \n                        \n\n\n                \n                    \n                            Opens the About modal page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { ModalController } from 'ionic-angular';\n// import { ContactPage } from '../contact/contact';\nimport { AboutPage } from '../about/about';\n//import {ContactPage} from '../contact/contact';\n\n/**\n * File Name:       home.ts\n * Version Number:  v1.0\n * Author Name:     Orisha Orrie\n * Project Name:    Ninshiki\n * Organization:    Software Sharks\n * Manual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf\n * Update History:\n * ------------------------------------------\n * Date         Author        Description\n * 21/07/2018   Orisha        Created component\n * ------------------------------------------\n * Functional Description:\n *  Serves as a facade for the application\n */\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  /**\n   * @ignore\n   */\n  constructor(public navCtrl: NavController,public modalCtrl : ModalController) {\n  }\n\n  /**\n   * Opens the About modal page\n   */\n  openModal() {\n    var data = { message : 'hello world' };\n    var homePage = this.modalCtrl.create(AboutPage,data);\n    homePage.present();\n  }\n}\n\n    \n\n    \n        \n\n  \n    Home\n    \n        \n         \n       \n      \n\n\n\n\n \n  \n    Submit Image\n   Click on the Predict button and select an image of an object to be recognised. \n\n  \n  \n    Image Analysis\n    Once you submit an image, we'll process the image with our trained AI model.\n  \n  \n    Image Classification\n    You will then receive a classification of the object in the image.\n   \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Home                                         Submit Image   Click on the Predict button and select an image of an object to be recognised.         Image Analysis    Once you submit an image, we\\'ll process the image with our trained AI model.        Image Classification    You will then receive a classification of the object in the image.   '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'page-about'},{'name': 'ContactPage', 'selector': 'page-contact'},{'name': 'FeedbackPage', 'selector': 'page-feedback'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'ImagerecPage', 'selector': 'page-imagerec'},{'name': 'MyApp', 'selector': ''},{'name': 'ResultsPage', 'selector': 'page-results'},{'name': 'UtilitiesPage', 'selector': 'page-utilities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImagerecPage.html":{"url":"components/ImagerecPage.html","title":"component - ImagerecPage","body":"\n                   \n\n\n\n\n\n  Components\n  ImagerecPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/imagerec/imagerec.ts\n\n\n    \n        Description\n    \n    \n        Generated class for the ImagerecPage page.\nSee https://ionicframework.com/docs/components/#navigation for more info on\nIonic pages and navigation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-imagerec\n            \n\n\n\n\n            \n                templateUrl\n                imagerec.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Public\n                                imageToPredict\n                            \n                            \n                                    Public\n                                imgAvailable\n                            \n                            \n                                    Public\n                                imgSelectedOrCaptured\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                loadingController\n                            \n                            \n                                    Public\n                                modalCtrl\n                            \n                            \n                                    Public\n                                modelLoader\n                            \n                            \n                                    Public\n                                myPhoto\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Public\n                                notReadyToPredict\n                            \n                            \n                                    Public\n                                predictButtonText\n                            \n                            \n                                    Public\n                                resultPreds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openModal\n                            \n                            \n                                predictImage\n                            \n                            \n                                presentResults\n                            \n                            \n                                selectPic\n                            \n                            \n                                takePic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, modalCtrl: ModalController, navParams: NavParams, alertCtrl: AlertController, camera: Camera, loadingController: LoadingController, modelLoader: ModelLoaderProvider)\n                    \n                \n                        \n                            \n                                Defined in src/pages/imagerec/imagerec.ts:77\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls navigation\n\n                                                        \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls the modal that is presented. Used for the Results page modal\n\n                                                        \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls parameters passed in during navigation\n\n                                                        \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls the alert element\n\n                                                        \n                                                \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides functionality for capturing an image with the native camera\n\n                                                        \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls the loader element\n\n                                                        \n                                                \n                                                \n                                                        modelLoader\n                                                  \n                                                        \n                                                                    ModelLoaderProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The ModelLoader provider that handles all image classification requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:108\n                            \n                        \n\n\n                \n                    \n                            Opens the About modal\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            predictImage\n                            \n                            \n                        \n                    \n                \n                \n                    \npredictImage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:223\n                            \n                        \n\n\n                \n                    \n                            Called when the Predict button is clicked. It passes the ImageElement to the ModelLoader provider.\nOnce it receives predictions for the image, it map the predictions to resultPreds and presents the results via the Results modal\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            presentResults\n                            \n                            \n                        \n                    \n                \n                \n                    \npresentResults()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:122\n                            \n                        \n\n\n                \n                    \n                            Opens the Results modal and passes it resultPreds\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectPic\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectPic()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:184\n                            \n                        \n\n\n                \n                    \n                            IONIC FUNCTION TO SELECT FROM GALLERY\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            takePic\n                            \n                            \n                        \n                    \n                \n                \n                    \ntakePic()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:139\n                            \n                        \n\n\n                \n                    \n                            Handles the native process of opening up the camera, accepting the captured image, and displaying it on the page.\nAlso handles errors from the camera process. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        content:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imageToPredict\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imageToPredict:     HTMLImageElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLImageElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:61\n                            \n                        \n\n                \n                    \n                        Stores the Image Element that is displayed and is predicted on. It's src value is that of myPhoto\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imgAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imgAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:43\n                            \n                        \n\n                \n                    \n                        Evaulates to true either when an image has been selected or an image has been captured, else false.\nIf true, then the predict button is displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imgSelectedOrCaptured\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imgSelectedOrCaptured:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:48\n                            \n                        \n\n                \n                    \n                        Evaluates to true at the same time as imgAvailable, but is false if an action is canceled.\nIf true, then the selected image is displayed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     \n\n                    \n                \n                    \n                        \n                            Default value : this.loadingController.create({\n\t\tspinner: 'crescent',\n\t\tcontent: 'Making a Prediction...',\n\t\tdismissOnPageChange: true\n\t})\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:73\n                            \n                        \n\n                \n                    \n                        A Loader element that is supposed to be displayed during the prediction process, but is not currently in use\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loadingController\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadingController:     LoadingController\n\n                    \n                \n                    \n                        \n                            Type :     LoadingController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:90\n                            \n                        \n\n                \n                    \n                        Controls the loader element\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modalCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modalCtrl:     ModalController\n\n                    \n                \n                    \n                        \n                            Type :     ModalController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:89\n                            \n                        \n\n                \n                    \n                        Controls the modal that is presented. Used for the Results page modal\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modelLoader:     ModelLoaderProvider\n\n                    \n                \n                    \n                        \n                            Type :     ModelLoaderProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:90\n                            \n                        \n\n                \n                    \n                        The ModelLoader provider that handles all image classification requests\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            myPhoto\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        myPhoto:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"assets/imgs/camera-holder.png\"\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:57\n                            \n                        \n\n                \n                    \n                        Stores the src of the Image Element that is displayed on the page and sent to be predicted on.\nInitially stores a default image.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:89\n                            \n                        \n\n                \n                    \n                        Controls navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:89\n                            \n                        \n\n                \n                    \n                        Controls parameters passed in during navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notReadyToPredict\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notReadyToPredict:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:69\n                            \n                        \n\n                \n                    \n                        If true, then the predict button is disabled. Becomes false when the model has been loaded into memory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            predictButtonText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        predictButtonText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Loading...'\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:65\n                            \n                        \n\n                \n                    \n                        Specifies the text that appears on the Predict button. Changes according to context\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultPreds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resultPreds:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/imagerec/imagerec.ts:52\n                            \n                        \n\n                \n                    \n                        An array of Result objects, which are obtained from the predict function and passed to the Results page\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ViewChild } from '@angular/core';\nimport { NavController, NavParams, LoadingController, AlertController } from 'ionic-angular';\nimport { Camera, CameraOptions } from '@ionic-native/camera';\nimport { ModalController } from 'ionic-angular';\nimport { ModelLoaderProvider } from './../../providers/model-loader/model-loader';\n// import { AngularFireStorage } from '../../../node_modules/angularfire2/storage';\nimport { AboutPage } from '../about/about';\nimport { ResultsPage } from '../results/results';\n\n/**\n * Generated class for the ImagerecPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n@Component({\n  selector: 'page-imagerec',\n  templateUrl: 'imagerec.html'\n})\nexport class ImagerecPage {\n\t@ViewChild('content') content:any;\n\t\t\n\t/**\n\t * Evaulates to true either when an image has been selected or an image has been captured, else false.\n\t * If true, then the predict button is displayed\n\t */\n\tpublic imgAvailable = false;\n\t/**\n\t * Evaluates to true at the same time as imgAvailable, but is false if an action is canceled.\n\t * If true, then the selected image is displayed.\n\t */\n\tpublic imgSelectedOrCaptured = false;\n\t/**\n\t * An array of Result objects, which are obtained from the predict function and passed to the Results page\n\t */\n\tpublic resultPreds = [];\n\t/**\n\t * Stores the src of the Image Element that is displayed on the page and sent to be predicted on.\n\t * Initially stores a default image.\n\t */\n\tpublic myPhoto= \"assets/imgs/camera-holder.png\";\n\t/**\n\t * Stores the Image Element that is displayed and is predicted on. It's src value is that of myPhoto\n\t */\n\tpublic imageToPredict: HTMLImageElement;\n\t/**\n\t * Specifies the text that appears on the Predict button. Changes according to context\n\t */\n\tpublic predictButtonText = 'Loading...';\n\t/**\n\t * If true, then the predict button is disabled. Becomes false when the model has been loaded into memory\n\t */\n\tpublic notReadyToPredict = true;\n\t/**\n\t * A Loader element that is supposed to be displayed during the prediction process, but is not currently in use\n\t */\n\tpublic loading = this.loadingController.create({\n\t\tspinner: 'crescent',\n\t\tcontent: 'Making a Prediction...',\n\t\tdismissOnPageChange: true\n\t});\n\t\t\n\t/**\n\t * \n     * @param navCtrl Controls navigation\n\t * @param modalCtrl Controls the modal that is presented. Used for the Results page modal\n\t * @param navParams Controls parameters passed in during navigation\n\t * @param alertCtrl Controls the alert element\n\t * @param camera Provides functionality for capturing an image with the native camera\n\t * @param loadingController Controls the loader element\n\t * @param modelLoader The ModelLoader provider that handles all image classification requests\n\t */\n\tconstructor( public navCtrl: NavController, public modalCtrl: ModalController, public navParams: NavParams, private alertCtrl: AlertController,\n\t\tprivate camera: Camera, public loadingController: LoadingController, public modelLoader: ModelLoaderProvider ) {\n\t\t\n\t\t// Carries out the code below every 500ms\n\t\tlet modelLoaded = setInterval(() => {\n\t\t\tif (this.modelLoader.modelIsReady()) {\n\t\t\t\t// console.log('Model Ready');\n\t\t\t\tthis.predictButtonText = 'Predict';\n\t\t\t\tthis.notReadyToPredict = false;\n\t\t\t\tclearInterval(modelLoaded);\n\t\t\t} else {\n\t\t\t\t// console.log('Not Ready');\t\t\t\n\t\t\t}\n\t\t},500);\n\t}\n\t\t\n\t/**\n\t * Opens the About modal\n\t */\n\topenModal() {\n\t\tvar data = { message : 'hello world' };\n\t\tvar homePage = this.modalCtrl.create(AboutPage,data);\n\t\thomePage.present();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tngOnInit() { }\n\n\t/**\n\t * Opens the Results modal and passes it resultPreds\n\t */\n\tpresentResults() {\n\t\tlet resultsModal = this.modalCtrl.create(ResultsPage,  this.resultPreds);\n\t\tresultsModal.present();\n\t}\n\t\n\t/**\n\t * @ignore\n\t */\n\tionViewDidLoad() {\n\t\tconsole.log('ionViewDidLoad ImagerecPage');\n\t\t//this.content.scrollToBottom(300);\n\t};\n\n\t/**\n\t * Handles the native process of opening up the camera, accepting the captured image, and displaying it on the page.\n\t * Also handles errors from the camera process. \n\t */\n\ttakePic() {\n\t\t/**\n\t\t * Config options for the native Ionic camera component\n\t\t */\n\t\tconst options: CameraOptions = {\n\t\t\tquality: 95,\n\t\t\tdestinationType: this.camera.DestinationType.DATA_URL,\n\t\t\tencodingType: this.camera.EncodingType.JPEG,\n\t\t\tmediaType: this.camera.MediaType.PICTURE,\n\t\t\tsaveToPhotoAlbum: true,\n\t\t\tallowEdit: true,\n\t\t\ttargetWidth: 300,\n\t\t\ttargetHeight: 300\n\t\t}\n\n\t\tthis.camera.getPicture(options).then((imageData) => {\n\t\t\tthis.myPhoto = 'data:image/jpeg;base64,' + imageData;\n\t\t\tthis.content.scrollToBottom(1000);\n\t\t\tlet image = document.getElementById('selectedImage');\n\t\t\tthis.imageToPredict = image;\n\t\t\tthis.imgSelectedOrCaptured = true;\n\t\t}, (err) => {\n\t\t\tthis.imgSelectedOrCaptured = false;\n\t\t\tthis.imgAvailable = false;\n\t\t\tlet prompt = this.alertCtrl.create({\n\t\t\t\ttitle: 'Error getting captured image',\n\t\t\t\tsubTitle: err,\n\t\t\t\tbuttons: ['OK']\n\t\t\t});\n\t\t\tprompt.present();\n\t\t});\n\t\t\t\n\t\tthis.imgAvailable = true;\n\t};\n\t  \n/**\n * \n * IONIC FUNCTION TO SELECT FROM GALLERY\n * \n */\n\n\t/**\n\t * Handles the native process of opening the gallery, accepting the selected image, cropping the image, and displaying it on the page.\n\t * Also handles errors from the gallery process.\n\t */\n  \tselectPic() {\n\t\t  /**\n\t\t * Config options for the native Ionic camera component\n\t\t */\n\t\tconst options: CameraOptions = {\n\t\t\tquality: 100,\n\t\t\tdestinationType: this.camera.DestinationType.DATA_URL,\n\t\t\tencodingType: this.camera.EncodingType.JPEG,\n\t\t\tsourceType: this.camera.PictureSourceType.PHOTOLIBRARY,\n\t\t\tsaveToPhotoAlbum: false,\n\t\t\tallowEdit: true,\n\t\t\ttargetWidth: 300,\n\t\t\ttargetHeight: 300\n\t\t}\n\n\t\tthis.camera.getPicture(options).then((imageData) => {\n\t\t\tthis.myPhoto = 'data:image/jpeg;base64,' + imageData;\n\t\t\tthis.content.scrollToBottom(1000);\n\t\t\tlet image = document.getElementById('selectedImage');\n\t\t\tthis.imageToPredict = image;\n\t\t\tthis.imgSelectedOrCaptured = true;\n\t\t}, (err) => {\n\t\t\tthis.imgSelectedOrCaptured = false;\n\t\t\tthis.imgAvailable = false;\n\t\t\tlet prompt = this.alertCtrl.create({\n\t\t\t\ttitle: 'Error getting selected image',\n\t\t\t\tsubTitle: err,\n\t\t\t\tbuttons: ['OK']\n\t\t\t});\n\t\t\tprompt.present();\n\t\t});\n\t\t\t\n\t\tthis.imgAvailable = true;\n\t};\n\n\t/**\n\t * Called when the Predict button is clicked. It passes the ImageElement to the ModelLoader provider.\n\t * Once it receives predictions for the image, it map the predictions to resultPreds and presents the results via the Results modal\n\t */\n\tpredictImage() {\n\t\tlet image = document.getElementById('selectedImage');\n\t\tthis.imageToPredict = image;\n\t\t// this.loading.present();\n\t\tthis.predictButtonText = 'Predicting...';\n\t\tthis.modelLoader.predictImage(this.imageToPredict)\n\t\t\t.then((predictions) => {\n\t\t\t\tthis.resultPreds = this.modelLoader.mapPredictions(predictions);\n\t\t\t\tthis.presentResults();\n\t\t\t\tthis.predictButtonText = 'Predict';\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error('Error: ' + error);\n\t\t\t});\n\t};\n\t\t\n}\n\n    \n\n    \n        \n\n\n  \n    Image recognition\n    \n        \n         \n       \n      \n  \n\n\n\n -->\n\n\n\n\nHow to upload an image:\n1. Take a picture with your device's camera or select an image from your gallery.\n2. Crop the image.\n3. Click the Predict button.\n4. View the results!\nCapture an image using device camera -->\n  \n    \n      \n          \n            Camera\n      \n    \n    \n  \n    Select image from device gallery md-cloud-upload-->\n  \n    \n      Gallery\n   \n\n\n  \n    \n  \n  \n    \n      \n    {{ predictButtonText }}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Image recognition                                     -->How to upload an image:1. Take a picture with your device\\'s camera or select an image from your gallery.2. Crop the image.3. Click the Predict button.4. View the results!Capture an image using device camera -->                                  Camera                    Select image from device gallery md-cloud-upload-->            Gallery                           {{ predictButtonText }}  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'page-about'},{'name': 'ContactPage', 'selector': 'page-contact'},{'name': 'FeedbackPage', 'selector': 'page-feedback'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'ImagerecPage', 'selector': 'page-imagerec'},{'name': 'MyApp', 'selector': ''},{'name': 'ResultsPage', 'selector': 'page-results'},{'name': 'UtilitiesPage', 'selector': 'page-utilities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ImagerecPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelLoaderProvider.html":{"url":"injectables/ModelLoaderProvider.html","title":"injectable - ModelLoaderProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModelLoaderProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/model-loader/model-loader.ts\n        \n\n            \n                Description\n            \n            \n                File Name:       model-loader.ts\nVersion Number:  v1.0\nAuthor Name:     Tobias Bester\nProject Name:    Ninshiki\nOrganization:    Software Sharks\nManual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf\nUpdate History:\nDate         Author        Description\n21/07/2018   Tobias        Created provider\nFunctional Description:\n  Handles all requests related to image classification and TensorFlow functions\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                model\n                            \n                            \n                                    Public\n                                modelNumber\n                            \n                            \n                                    Public\n                                modelType\n                            \n                            \n                                    Public\n                                resultPreds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cropImage\n                            \n                            \n                                getResults\n                            \n                            \n                                    Async\n                                loadModel\n                            \n                            \n                                mapPredictions\n                            \n                            \n                                    Private\n                                modelHasLinks\n                            \n                            \n                                modelIsReady\n                            \n                            \n                                    Async\n                                predictImage\n                            \n                            \n                                    Private\n                                processResultNames\n                            \n                            \n                                    Private\n                                sortPreds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(alertCtrl: AlertController)\n                    \n                \n                        \n                            \n                                Defined in src/providers/model-loader/model-loader.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls the alert element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cropImage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cropImage(img: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/model-loader/model-loader.ts:146\n                            \n                        \n\n\n                \n                    \n                            Called by the predictImage function, this crops the raw image pixel data to a smaller\nsize so that it can be resized later\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        img\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The raw image pixel data as returned by tf.fromPixels\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    The raw pixel data of the cropped image\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResults\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResults()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/model-loader/model-loader.ts:158\n                            \n                        \n\n\n                \n                    \n                            A getter for resultPreds. Also processes the prediction results by calling processResultNames()\n\n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            loadModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadModel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/model-loader/model-loader.ts:85\n                            \n                        \n\n\n                \n                    \n                            Loads the TensorFlowJS model from the specified URL by using the tf.loadModel. It then warms up the model\nby predicting on a blank image. This function only loads a model if one has not been loaded already\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapPredictions\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapPredictions(classPreds: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/model-loader/model-loader.ts:170\n                            \n                        \n\n\n                \n                    \n                            Maps the predictions returned from the predictImage function to the corresponding class labels in\nthe classes JSON file. Then the classes are sorted by decreasing likeliness and the classes with a\nlikeliness lower than 0.001% are cut off\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        classPreds\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                tf.Tensor.data  The list of predictions returned by the predictImage function\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    An array of JSON objects of the model classes and their associated prediction likeliness\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            modelHasLinks\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        modelHasLinks()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/model-loader/model-loader.ts:215\n                            \n                        \n\n\n                \n                    \n                            Checks whether the selected model contains catalogue links\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    True if the model has links, false if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modelIsReady\n                            \n                            \n                        \n                    \n                \n                \n                    \nmodelIsReady()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/model-loader/model-loader.ts:110\n                            \n                        \n\n\n                \n                    \n                            Checks if the model is ready to be used\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if a TensorFlowJS model is loaded into memory. False if not\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            predictImage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        predictImage(image: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/model-loader/model-loader.ts:124\n                            \n                        \n\n\n                \n                    \n                            Performs a set of TensorFlowJS operations that result in a list of predicted classes of an image\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        image\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                HTMLImageElement containing the image to be predicted\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    A list of predictions where each element is the predicted likeliness of the corresponding model class\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            processResultNames\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        processResultNames()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/model-loader/model-loader.ts:223\n                            \n                        \n\n\n                \n                    \n                            Formats the class labels to a more readable format and slices off classes with a likeliness lower\nthan 0.001%\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sortPreds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sortPreds()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/model-loader/model-loader.ts:205\n                            \n                        \n\n\n                \n                    \n                            Called by mapPredictions in order to sort the classes by likeliness\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     tf.Model\n\n                    \n                \n                    \n                        \n                            Type :     tf.Model\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/model-loader/model-loader.ts:37\n                            \n                        \n\n                \n                    \n                        Reference to the TensorFlowJS Model instance that is loaded into memory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modelNumber:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/model-loader/model-loader.ts:72\n                            \n                        \n\n                \n                    \n                        Determines which modelType object is selected to specify which model should be used\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modelType:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n    'name': 'bramhope',\n      'url': 'https://storage.googleapis.com/testproject-ee885.appspot.com/mobilenet_model/model.json',\n      'classJson': 'classes.json',\n      'numClasses': 57,\n      'hasLinks': false\n    },\n    {\n      'name': 'bramhope',\n      'url': 'https://storage.googleapis.com/testproject-ee885.appspot.com/bramhope_mobilenet_model/model.json',\n      'classJson': 'bramhope_classes.json',\n      'numClasses': 53,\n      'hasLinks': true\n    },\n    {\n      'name': 'imagenet',\n      'url': 'https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_0.25_224/model.json',\n      'classJson': 'imagenet_classes.json',\n      'numClasses': 1000,\n      'hasLinks': false\n  }]\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/model-loader/model-loader.ts:43\n                            \n                        \n\n                \n                    \n                        Specifies the different models that can be used, including their name, the URL of the Google Storage bucket in which\nthey are called from, the number of classes that it can predict from, and whether the model has catalogue links, as is the\ncase with the Bramhope model. Also includes the classes JSON file with the model's corresponding class labels\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultPreds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resultPreds:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/model-loader/model-loader.ts:68\n                            \n                        \n\n                \n                    \n                        An array used to store JSON objects related to the classes that were predicted. Includes class name, class likeliness,\nand class catalogue links, if specified\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { AlertController } from 'ionic-angular';\nimport { Injectable } from '@angular/core';\nimport * as tf from '@tensorflow/tfjs';\n/**\n * @ignore\n */\ndeclare var require: any\n\n/**\n * File Name:       model-loader.ts\n * Version Number:  v1.0\n * Author Name:     Tobias Bester\n * Project Name:    Ninshiki\n * Organization:    Software Sharks\n * Manual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf\n * Update History:\n * ------------------------------------------\n * Date         Author        Description\n * 21/07/2018   Tobias        Created provider\n * ------------------------------------------\n * Functional Description:\n *  Handles all requests related to image classification and TensorFlow functions\n */\n\n/*\n  Generated class for the ModelLoaderProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class ModelLoaderProvider {\n\n  /**\n   * Reference to the TensorFlowJS Model instance that is loaded into memory\n   */\n  private model: tf.Model = null;\n  /**\n   * Specifies the different models that can be used, including their name, the URL of the Google Storage bucket in which\n   * they are called from, the number of classes that it can predict from, and whether the model has catalogue links, as is the\n   * case with the Bramhope model. Also includes the classes JSON file with the model's corresponding class labels\n   */\n  public modelType = [{\n    'name': 'bramhope',\n      'url': 'https://storage.googleapis.com/testproject-ee885.appspot.com/mobilenet_model/model.json',\n      'classJson': 'classes.json',\n      'numClasses': 57,\n      'hasLinks': false\n    },\n    {\n      'name': 'bramhope',\n      'url': 'https://storage.googleapis.com/testproject-ee885.appspot.com/bramhope_mobilenet_model/model.json',\n      'classJson': 'bramhope_classes.json',\n      'numClasses': 53,\n      'hasLinks': true\n    },\n    {\n      'name': 'imagenet',\n      'url': 'https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_0.25_224/model.json',\n      'classJson': 'imagenet_classes.json',\n      'numClasses': 1000,\n      'hasLinks': false\n  }];\n  /**\n   * An array used to store JSON objects related to the classes that were predicted. Includes class name, class likeliness,\n   * and class catalogue links, if specified\n   */\n  public resultPreds = [];\n  /**\n   * Determines which modelType object is selected to specify which model should be used\n   */\n  public modelNumber = 1;\n\n  /**\n   * \n   * @param http Provides the service to handle HTTP requests\n   * @param alertCtrl Controls the alert element\n   */\n  constructor(private alertCtrl: AlertController) { }\n\n  /**\n   * Loads the TensorFlowJS model from the specified URL by using the tf.loadModel. It then warms up the model\n   * by predicting on a blank image. This function only loads a model if one has not been loaded already\n   */\n  async loadModel() {\n    if (this.modelIsReady()) {\n      console.log('Model is already loaded');\n    } else {\n      try {\n        this.model = await tf.loadModel(this.modelType[this.modelNumber].url);\n        (this.model.predict(tf.zeros([1, 224, 224, 3])) as tf.Tensor).dispose();\n        console.log('Provider: Model is Loaded!');\n        //this.modelStatus = 'Model loaded YAS QUEEN';\n      } catch (err) {\n        // Handle error\n        let prompt = this.alertCtrl.create({\n          title: 'Error loading model',\n          subTitle: err,\n          buttons: ['OK']\n        });\n        prompt.present();\n      }\n    }\n  };\n\n  /**\n   * Checks if the model is ready to be used\n   * @returns   True if a TensorFlowJS model is loaded into memory. False if not\n   */\n  modelIsReady() {\n    // console.log('Checking modelIsReady');\n    if (this.model == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Performs a set of TensorFlowJS operations that result in a list of predicted classes of an image\n   * @param image   HTMLImageElement containing the image to be predicted\n   * @returns   A list of predictions where each element is the predicted likeliness of the corresponding model class\n   */\n  async predictImage(image) {\n    const predictedClass = tf.tidy(() => {\n      const raw = tf.fromPixels(image, 3);\n      const cropped = this.cropImage(raw);\n      // 224,224 is the required size for the MobileNet model\n      const resized = tf.image.resizeBilinear(cropped, [224, 224]);\n      const batchedImage = resized.expandDims(0);\n      const img = batchedImage.toFloat().div(tf.scalar(127)).sub(tf.scalar(1));\n      const predictions = (this.model.predict(img) as tf.Tensor);\n      return predictions;\n    });\n\n    const classId = (await predictedClass.data());\n    return classId;\n  }\n\n  /**\n   * Called by the predictImage function, this crops the raw image pixel data to a smaller\n   * size so that it can be resized later\n   * @param img   The raw image pixel data as returned by tf.fromPixels\n   * @returns   The raw pixel data of the cropped image\n   */\n  private cropImage(img) {\n    const size = Math.min(img.shape[0], img.shape[1]);\n    const centerHeight = img.shape[0] / 2;\n    const beginHeight = centerHeight - (size / 2);\n    const centerWidth = img.shape[1] / 2;\n    const beginWidth = centerWidth - (size / 2);\n    return img.slice([beginHeight, beginWidth, 0], [size, size, 3]);\n  };\n\n  /**\n   * A getter for resultPreds. Also processes the prediction results by calling processResultNames()\n   */\n  getResults() {\n    this.processResultNames();\n    return this.resultPreds;\n  };\n\n  /**\n   * Maps the predictions returned from the predictImage function to the corresponding class labels in\n   * the classes JSON file. Then the classes are sorted by decreasing likeliness and the classes with a\n   * likeliness lower than 0.001% are cut off\n   * @param classPreds  tf.Tensor.data  The list of predictions returned by the predictImage function\n   * @returns   An array of JSON objects of the model classes and their associated prediction likeliness\n   */\n  mapPredictions(classPreds) {\n    console.log('Mapping predictions...');\n    const classesJson = require(`./classes/${this.modelType[this.modelNumber].classJson}`);\n    const numClasses = classPreds.length;\n    this.resultPreds = [];\n    const linkExists = this.modelHasLinks();\n\n    for (let i = 0; i  {\n      return b.likeliness - a.likeliness;\n    });\n  }\n\n  /**\n   * Checks whether the selected model contains catalogue links\n   * @returns   True if the model has links, false if not\n   */\n  private modelHasLinks() {\n    return this.modelType[this.modelNumber].hasLinks;\n  }\n\n  /**\n   * Formats the class labels to a more readable format and slices off classes with a likeliness lower\n   * than 0.001%\n   */\n  private processResultNames() {\n    this.resultPreds.forEach((element, index) => {\n      element.name = element.name.replace(/_/g, ' ');\n      element.name = element.name.charAt(0).toUpperCase() + element.name.slice(1);\n\n      if (element.likeliness \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyApp.html":{"url":"components/MyApp.html","title":"component - MyApp","body":"\n                   \n\n\n\n\n\n  Components\n  MyApp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                app.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nav\n                            \n                            \n                                pages\n                            \n                            \n                                rootPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, modelLoader: ModelLoaderProvider)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates the status bar and requests the model to be loaded as soon as the platform is ready\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Default Ionic platofrm\n\n                                                        \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Cordova plugin for a statusbar\n\n                                                        \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Cordova plugin for the splash screen\n\n                                                        \n                                                \n                                                \n                                                        modelLoader\n                                                  \n                                                        \n                                                                    ModelLoaderProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provider that handles model loading and image classification\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openPage\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenPage(page: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Handles which page is opened depending on which tab is pressed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Determines which page is opened\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nav\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nav:     Nav\n\n                    \n                \n                    \n                        \n                            Type :     Nav\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pages:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:38\n                            \n                        \n\n                \n                    \n                        Array of page objects which are in the form (title, component)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rootPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rootPage:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : TabsPage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n                \n                    \n                        The root page should be the page with the Tabs\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component  , ViewChild} from '@angular/core';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n// import { Camera, CameraOptions } from '@ionic-native/camera';\n\nimport { AboutPage } from '../pages/about/about';\nimport { ContactPage } from '../pages/contact/contact';\n// import { HomePage } from '../pages/home/home';\nimport { TabsPage } from '../pages/tabs/tabs';\n// import { UtilitiesPage } from '../pages/utilities/utilities';\nimport { ImagerecPage } from '../pages/imagerec/imagerec';\nimport { ModelLoaderProvider } from '../providers/model-loader/model-loader';\n\n/**\n * @ignore\n */\nexport interface PageInterface {\n  title: string;\n  pageName: string;\n  tabComponent?: any;\n  index?: number;\n  icon: string;\n}\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n@ViewChild(Nav) nav: Nav;\n\n  /**\n   * The root page should be the page with the Tabs\n   */\n  rootPage: any = TabsPage;\n  /**\n   * Array of page objects which are in the form (title, component)\n   */\n  pages: Array;\n\n  /**\n   * Creates the status bar and requests the model to be loaded as soon as the platform is ready\n   * @param platform Default Ionic platofrm\n   * @param statusBar Cordova plugin for a statusbar\n   * @param splashScreen Cordova plugin for the splash screen\n   * @param modelLoader Provider that handles model loading and image classification\n   */\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen, modelLoader: ModelLoaderProvider) {\n    platform.ready().then(() => {\n      statusBar.styleDefault();\n      console.log('App: Calling provider function - loadModel');\n      modelLoader.loadModel();\n    });\n  \n    this.pages = [\n      { title: 'Custom image recognition', component: ImagerecPage },\n      { title: 'Need Help?', component: ContactPage },\n      { title: 'About Us', component: AboutPage }\n    ];\n  }\n\n  /**\n   * Handles which page is opened depending on which tab is pressed\n   * @param page Determines which page is opened\n   */\n  openPage(page) {\n    this.nav.setRoot(page.component);\n  }\n  \n}\n\n    \n\n    \n        \n-->\n-->\n  \n       \n         Page Title  \n        \n      \n  \n -->\n  \n    \n      \n           -->\n           -->\n        \n       -->\n     -->\n   -->\n -->\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->-->                  Page Title                   -->                       -->           -->               -->     -->   --> -->'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'page-about'},{'name': 'ContactPage', 'selector': 'page-contact'},{'name': 'FeedbackPage', 'selector': 'page-feedback'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'ImagerecPage', 'selector': 'page-imagerec'},{'name': 'MyApp', 'selector': ''},{'name': 'ResultsPage', 'selector': 'page-results'},{'name': 'UtilitiesPage', 'selector': 'page-utilities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyApp'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsPage.html":{"url":"components/ResultsPage.html","title":"component - ResultsPage","body":"\n                   \n\n\n\n\n\n  Components\n  ResultsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/results/results.ts\n\n\n    \n        Description\n    \n    \n        Generated class for the ResultsPage page.\nSee https://ionicframework.com/docs/components/#navigation for more info on\nIonic pages and navigation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-results\n            \n\n\n\n\n            \n                templateUrl\n                results.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                modelLoader\n                            \n                            \n                                    Public\n                                navCtrl\n                            \n                            \n                                    Public\n                                navParams\n                            \n                            \n                                    Public\n                                resultPreds\n                            \n                            \n                                    Public\n                                viewCtrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeModal\n                            \n                            \n                                openBrowserToBramhope\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(navCtrl: NavController, navParams: NavParams, viewCtrl: ViewController, modelLoader: ModelLoaderProvider)\n                    \n                \n                        \n                            \n                                Defined in src/pages/results/results.ts:38\n                            \n                        \n\n                \n                    \n                            Fetches the resultPreds from the model loader provider\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        navCtrl\n                                                  \n                                                        \n                                                                    NavController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls navigation\n\n                                                        \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls parameters passed in during navigation\n\n                                                        \n                                                \n                                                \n                                                        viewCtrl\n                                                  \n                                                        \n                                                                    ViewController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Controls the current view\n\n                                                        \n                                                \n                                                \n                                                        modelLoader\n                                                  \n                                                        \n                                                                    ModelLoaderProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The ModelLoader provider that handles all image classification requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            closeModal\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        closeModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/results/results.ts:61\n                            \n                        \n\n\n                \n                    \n                            Closes the modal when the back button is pressed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openBrowserToBramhope\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenBrowserToBramhope(url: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/results/results.ts:69\n                            \n                        \n\n\n                \n                    \n                            Opens a link to the Bramhope store for the corresponding item that was pressed\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Passed in from the item that is clicked. The corresponding URL is stored in the classes JSON file\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modelLoader:     ModelLoaderProvider\n\n                    \n                \n                    \n                        \n                            Type :     ModelLoaderProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/results/results.ts:47\n                            \n                        \n\n                \n                    \n                        The ModelLoader provider that handles all image classification requests\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navCtrl:     NavController\n\n                    \n                \n                    \n                        \n                            Type :     NavController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/results/results.ts:47\n                            \n                        \n\n                \n                    \n                        Controls navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            navParams\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navParams:     NavParams\n\n                    \n                \n                    \n                        \n                            Type :     NavParams\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/results/results.ts:47\n                            \n                        \n\n                \n                    \n                        Controls parameters passed in during navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resultPreds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resultPreds:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/results/results.ts:38\n                            \n                        \n\n                \n                    \n                        Array of result objects, which contain the category name, likeliness, and item web links, if specified.\nThis array is used to display the list of results in the page\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewCtrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewCtrl:     ViewController\n\n                    \n                \n                    \n                        \n                            Type :     ViewController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/results/results.ts:47\n                            \n                        \n\n                \n                    \n                        Controls the current view\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavController, NavParams } from 'ionic-angular';\nimport { ViewController } from 'ionic-angular';\nimport { ModelLoaderProvider } from './../../providers/model-loader/model-loader';\n/**\n * Generated class for the ResultsPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n /**\n * File Name:       results.ts\n * Version Number:  v1.0\n * Author Name:     Orisha Orrie\n * Project Name:    Ninshiki\n * Organization:    Software Sharks\n * Manual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf\n * Update History:\n * ------------------------------------------\n * Date         Author        Description\n * 1/08/2018   Orisha        Created component\n * ------------------------------------------\n * Functional Description:\n *  Displays results as predicted by the TensorFlowJS model\n */\n\n@Component({\n  selector: 'page-results',\n  templateUrl: 'results.html',\n})\nexport class ResultsPage {\n\n  /**\n   * Array of result objects, which contain the category name, likeliness, and item web links, if specified.\n   * This array is used to display the list of results in the page\n   */\n  public resultPreds = [];\n\n  /**\n   * Fetches the resultPreds from the model loader provider\n   * @param navCtrl Controls navigation\n   * @param navParams Controls parameters passed in during navigation\n   * @param viewCtrl Controls the current view\n   * @param modelLoader The ModelLoader provider that handles all image classification requests\n   */\n  constructor(public navCtrl: NavController, public navParams: NavParams, public viewCtrl: ViewController, public modelLoader : ModelLoaderProvider) {\n      this.resultPreds= modelLoader.getResults();\n  }\n\n  /**\n   * @ignore\n   */\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ResultsPage');\n  }\n\n  /**\n   * Closes the modal when the back button is pressed\n   */\n  public closeModal(){\n    this.viewCtrl.dismiss();\n  }\n\n  /**\n   * Opens a link to the Bramhope store for the corresponding item that was pressed\n   * @param url Passed in from the item that is clicked. The corresponding URL is stored in the classes JSON file\n   */\n  openBrowserToBramhope(url) {\n    if (url == '') {\n      return false;\n    }\n    window.open(url, '_system', 'location=yes');\n    return false;\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n      \n          Close\n        \n    Results\n  \n\n\n\n\n  Tap on an object class to go to the Bramhope catalogue for that object\n  \n    \n      {{ result.name }}: {{ result.likeliness }}%\n        \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Close            Results    Tap on an object class to go to the Bramhope catalogue for that object            {{ result.name }}: {{ result.likeliness }}%                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'page-about'},{'name': 'ContactPage', 'selector': 'page-contact'},{'name': 'FeedbackPage', 'selector': 'page-feedback'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'ImagerecPage', 'selector': 'page-imagerec'},{'name': 'MyApp', 'selector': ''},{'name': 'ResultsPage', 'selector': 'page-results'},{'name': 'UtilitiesPage', 'selector': 'page-utilities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UtilitiesPage.html":{"url":"components/UtilitiesPage.html","title":"component - UtilitiesPage","body":"\n                   \n\n\n\n\n\n  Components\n  UtilitiesPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/pages/utilities/utilities.ts\n\n\n    \n        Description\n    \n    \n        File Name:       utilities.ts\nVersion Number:  v1.0\nAuthor Name:     Orisha Orrie\nProject Name:    Ninshiki\nOrganization:    Software Sharks\nManual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf\nUpdate History:\nDate         Author        Description\n21/07/2018   Orisha        Created component\nFunctional Description:\n  Provides ability for user to conduct weight analysis\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                page-utilities\n            \n\n\n\n\n            \n                templateUrl\n                utilities.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                empty_bucket\n                            \n                            \n                                filled_bucket\n                            \n                            \n                                hello\n                            \n                            \n                                Math\n                            \n                            \n                                single_item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openModal\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenModal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/pages/utilities/utilities.ts:82\n                            \n                        \n\n\n                \n                    \n                            Opens the About page modal\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            empty_bucket\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        empty_bucket:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2.0\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/utilities/utilities.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filled_bucket\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filled_bucket:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 10.0\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/utilities/utilities.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hello\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hello:     \n\n                    \n                \n                    \n                        \n                            Default value : (() => {\n\n    if (!this.empty_bucket || !this.filled_bucket || !this.single_item) {\n        return 'Weight inputs cannot be empty';\n      }\n\n    if (this.empty_bucket  0) {\n      return 'Single item cannot weigh more than a filled bucket';\n    }\n\n    if (this.empty_bucket - this.filled_bucket >= 0) {\n      return 'Empty bucket cannot weigh more than a filled bucket';\n    }\n\n    return 'Number of items: ' + Math.floor((this.filled_bucket - this.empty_bucket) / this.single_item);\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/utilities/utilities.ts:50\n                            \n                        \n\n                \n                    \n                        Determines what is the resulting weight value to be displayed. Handles invalid input values by returning\nappropriate validation messages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Math\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Math:     Math\n\n                    \n                \n                    \n                        \n                            Type :     Math\n\n                        \n                    \n                    \n                        \n                            Default value : Math\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/utilities/utilities.ts:39\n                            \n                        \n\n                \n                    \n                        An instance of the JavaScript Math class required to use the floor function\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            single_item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        single_item:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1.0\n                        \n                    \n                        \n                            \n                                    Defined in src/pages/utilities/utilities.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavController, NavParams, AlertController} from 'ionic-angular';\nimport { ModalController } from 'ionic-angular';\n// import { ContactPage } from '../contact/contact';\nimport { AboutPage } from '../about/about';\n\n/**\n * File Name:       utilities.ts\n * Version Number:  v1.0\n * Author Name:     Orisha Orrie\n * Project Name:    Ninshiki\n * Organization:    Software Sharks\n * Manual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf\n * Update History:\n * ------------------------------------------\n * Date         Author        Description\n * 21/07/2018   Orisha        Created component\n * ------------------------------------------\n * Functional Description:\n *  Provides ability for user to conduct weight analysis\n */\n\n/**\n * Generated class for the UtilitiesPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n      \n@Component({\n  selector: 'page-utilities',\n  templateUrl: 'utilities.html',\n})\nexport class UtilitiesPage {\n  \n  /**\n   * An instance of the JavaScript Math class required to use the floor function\n   */\n  Math: Math = Math;\n  \n  single_item = 1.0;\n  empty_bucket = 2.0;\n  filled_bucket = 10.0;\n  \n  /**\n   * Determines what is the resulting weight value to be displayed. Handles invalid input values by returning\n   * appropriate validation messages\n   * @returns A string value that is displayed in the result card on the page\n   */\n  hello = (() => {\n\n    if (!this.empty_bucket || !this.filled_bucket || !this.single_item) {\n        return 'Weight inputs cannot be empty';\n      }\n\n    if (this.empty_bucket  0) {\n      return 'Single item cannot weigh more than a filled bucket';\n    }\n\n    if (this.empty_bucket - this.filled_bucket >= 0) {\n      return 'Empty bucket cannot weigh more than a filled bucket';\n    }\n\n    return 'Number of items: ' + Math.floor((this.filled_bucket - this.empty_bucket) / this.single_item);\n  });\n\n  /**\n   * @ignore\n   */\n  constructor(public navCtrl: NavController, public navParams: NavParams, \n    public alertController: AlertController, public modalCtrl : ModalController) {\n\n  }\n\n  /**\n   * Opens the About page modal\n   */\n  openModal() {\n    var data = { message : 'hello world' };\n    var homePage = this.modalCtrl.create(AboutPage,data);\n    homePage.present();\n  }\n\n  /**\n   * @ignore\n   */\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad UtilitiesPage');\n  }  \n\n}\n\n    \n\n    \n        \n\n\n  \n  \n    Item calculator\n    \n        \n         \n       \n      \n     Modal    -->\n  \n\n\n\n\n\n\n\n   Enter the values as instructed. Use the same measurement units (e.g. Kg) \n\n   Weight Single Item \n    \n  \n  \n    Weight Empty Bucket\n    \n  \n  \n    Weight Filled Bucket\n    \n  \n \n \n  \n\n  \n    {{ hello() }}\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Item calculator                                       Modal    -->     Enter the values as instructed. Use the same measurement units (e.g. Kg)    Weight Single Item             Weight Empty Bucket            Weight Filled Bucket                {{ hello() }}  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'page-about'},{'name': 'ContactPage', 'selector': 'page-contact'},{'name': 'FeedbackPage', 'selector': 'page-feedback'},{'name': 'HomePage', 'selector': 'page-home'},{'name': 'ImagerecPage', 'selector': 'page-imagerec'},{'name': 'MyApp', 'selector': ''},{'name': 'ResultsPage', 'selector': 'page-results'},{'name': 'UtilitiesPage', 'selector': 'page-utilities'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UtilitiesPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                MyApp\n            \n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/pages/about/about.ts\n            \n            \n                component\n            \n            \n                AboutPage\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/pages/contact/contact.ts\n            \n            \n                component\n            \n            \n                ContactPage\n            \n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                src/pages/feedback/feedback.ts\n            \n            \n                component\n            \n            \n                FeedbackPage\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/pages/home/home.ts\n            \n            \n                component\n            \n            \n                HomePage\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/pages/imagerec/imagerec.ts\n            \n            \n                component\n            \n            \n                ImagerecPage\n            \n            \n                90 %\n                (19/21)\n            \n        \n        \n            \n                \n                src/pages/results/results.ts\n            \n            \n                component\n            \n            \n                ResultsPage\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/pages/utilities/utilities.ts\n            \n            \n                component\n            \n            \n                UtilitiesPage\n            \n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/providers/model-loader/model-loader.ts\n            \n            \n                injectable\n            \n            \n                ModelLoaderProvider\n            \n            \n                93 %\n                (14/15)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.0.9\n        \n            @angular/cdk : ^6.3.3\n        \n            @angular/common : 6.0.9\n        \n            @angular/compiler : 6.0.9\n        \n            @angular/compiler-cli : 5.2.11\n        \n            @angular/core : 6.0.9\n        \n            @angular/http : 5.2.11\n        \n            @angular/material : ^6.3.3\n        \n            @angular/platform-browser : 5.2.11\n        \n            @angular/platform-browser-dynamic : 5.2.11\n        \n            @ionic-native/camera : ^4.15.0\n        \n            @ionic-native/core : ^4.15.0\n        \n            @ionic-native/firebase : ^4.15.0\n        \n            @ionic-native/geolocation : ^4.15.0\n        \n            @ionic-native/splash-screen : ^4.15.0\n        \n            @ionic-native/status-bar : ^4.15.0\n        \n            @ionic/pro : 1.0.20\n        \n            @ionic/storage : 2.1.3\n        \n            @tensorflow/tfjs : ^0.12.5\n        \n            angularfire2 : ^5.0.0-rc.11\n        \n            cordova-android : 7.1.1\n        \n            cordova-browser : ^5.0.4\n        \n            cordova-plugin-camera : ^4.0.3\n        \n            cordova-plugin-device : ^2.0.2\n        \n            cordova-plugin-file : ^6.0.1\n        \n            cordova-plugin-file-transfer : ^1.7.1\n        \n            cordova-plugin-firebase : ^1.0.5\n        \n            cordova-plugin-geolocation : ^4.0.1\n        \n            cordova-plugin-ionic : ^5.2.4\n        \n            cordova-plugin-ionic-keyboard : 2.1.2\n        \n            cordova-plugin-ionic-webview : ^2.1.4\n        \n            cordova-plugin-splashscreen : ^5.0.2\n        \n            cordova-plugin-statusbar : ^2.4.2\n        \n            cordova-plugin-whitelist : ^1.3.3\n        \n            firebase : ^5.3.1\n        \n            firebase-tools : ^4.2.1\n        \n            hoek : ^5.0.4\n        \n            ionic-angular : 3.9.2\n        \n            ionicons : 3.0.0\n        \n            lodash : ^4.17.11\n        \n            observable : ^2.1.4\n        \n            package.json : ^2.0.1\n        \n            require : ^2.4.20\n        \n            rxjs : ^6.3.3\n        \n            rxjs-compat : ^6.2.2\n        \n            sw-toolbox : 3.6.0\n        \n            yarn : ^1.9.4\n        \n            zone.js : 0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutPage->AppModule\n\n\n\n\n\nContactPage\n\nContactPage\n\nAppModule -->\n\nContactPage->AppModule\n\n\n\n\n\nFeedbackPage\n\nFeedbackPage\n\nAppModule -->\n\nFeedbackPage->AppModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nAppModule -->\n\nHomePage->AppModule\n\n\n\n\n\nImagerecPage\n\nImagerecPage\n\nAppModule -->\n\nImagerecPage->AppModule\n\n\n\n\n\nMyApp\n\nMyApp\n\nAppModule -->\n\nMyApp->AppModule\n\n\n\n\n\nResultsPage\n\nResultsPage\n\nAppModule -->\n\nResultsPage->AppModule\n\n\n\n\n\nTabsPage\n\nTabsPage\n\nAppModule -->\n\nTabsPage->AppModule\n\n\n\n\n\nUtilitiesPage\n\nUtilitiesPage\n\nAppModule -->\n\nUtilitiesPage->AppModule\n\n\n\n\n\nIonicApp \n\nIonicApp \n\nIonicApp  -->\n\nAppModule->IonicApp \n\n\n\n\n\nModelLoaderProvider\n\nModelLoaderProvider\n\nAppModule -->\n\nModelLoaderProvider->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
