/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"main": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/_karma_webpack_/";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push(["./src/test.ts","vendor"]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src sync recursive \\.spec\\.ts$":
/*!******************************!*\
  !*** ./src sync \.spec\.ts$ ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./app/app.component.spec.ts": "./src/app/app.component.spec.ts",
	"./app/contact-us/contact-us.component.spec.ts": "./src/app/contact-us/contact-us.component.spec.ts",
	"./app/feedback/feedback.component.spec.ts": "./src/app/feedback/feedback.component.spec.ts",
	"./app/home/home.component.spec.ts": "./src/app/home/home.component.spec.ts",
	"./app/imageupload/imageupload.component.spec.ts": "./src/app/imageupload/imageupload.component.spec.ts",
	"./app/model/model-loader.service.spec.ts": "./src/app/model/model-loader.service.spec.ts",
	"./app/utilities/utilities.component.spec.ts": "./src/app/utilities/utilities.component.spec.ts"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	var module = __webpack_require__(id);
	return module;
}
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) { // check for number or string
		var e = new Error('Cannot find module "' + req + '".');
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return id;
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./src sync recursive \\.spec\\.ts$";

/***/ }),

/***/ "./src/$$_lazy_route_resource lazy recursive":
/*!**********************************************************!*\
  !*** ./src/$$_lazy_route_resource lazy namespace object ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error('Cannot find module "' + req + '".');
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./src/$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./src/$$_lazy_route_resource sync recursive":
/*!*****************************************!*\
  !*** ./src/$$_lazy_route_resource sync ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyContext(req) {
	var e = new Error('Cannot find module "' + req + '".');
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
module.exports = webpackEmptyContext;
webpackEmptyContext.id = "./src/$$_lazy_route_resource sync recursive";

/***/ }),

/***/ "./src/app/app.component.css":
/*!***********************************!*\
  !*** ./src/app/app.component.css ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".toolbar-container{\r\n    margin: auto 5%;\r\n}\r\n\r\n.toolbar__title{\r\n    font-style: italic;\r\n    text-transform: uppercase;\r\n    font-size: 150%;\r\n    font-family: Lato, Arial, sans-serif;\r\n    text-shadow: 2px 2px black;\r\n}\r\n\r\n.toolbar__spacer{\r\n    flex: 1 1 auto;\r\n}\r\n\r\n.toolbar__link {\r\n    font-family: Lato, Arial, sans-serif;\r\n}\r\n\r\n.toolbar__button-spacer{\r\n    flex: 0 0 1em;\r\n}\r\n\r\nmain{\r\n    margin: auto 5%;\r\n    overflow: auto;\r\n    padding-bottom: 2%;\r\n}\r\n\r\n.footer{\r\n    background: #607D8B;\r\n    position: relative;\r\n    margin-top: 2%;\r\n    margin-left: 5%;\r\n    margin-right: 5%;\r\n    height: 150px;\r\n    clear: both;\r\n}\r\n\r\n/* \r\n.footer__link {\r\n    height: 70%;\r\n    text-align: left;\r\n    color: white;\r\n    margin-right: 5px;\r\n} */\r\n\r\n.footer__buttons {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.footer__button {\r\n    margin-top: 20px;\r\n    width: 30%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-self: flex-start;\r\n    /* background: green; */\r\n}\r\n\r\n.footer__button-info {\r\n    font-family: Lato, Arial, sans-serif;\r\n    color:white;\r\n    float: right;\r\n    width: 40%;\r\n    height: 80%;\r\n    /* background: red; */\r\n    -ms-grid-row-align: center;\r\n        align-self: center;\r\n}\r\n\r\n.footer__logo {\r\n    margin-left: 0px;\r\n    width: 30%;\r\n    align-self: baseline;\r\n}\r\n"

/***/ }),

/***/ "./src/app/app.component.html":
/*!************************************!*\
  !*** ./src/app/app.component.html ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"toolbar-container\">\r\n\r\n  <mat-toolbar color=\"primary\">\r\n    <a mat-button routerLink=\"/home\" class=\"toolbar__title\">[ {{ title }} ]</a>\r\n    <span class=\"toolbar__spacer\"></span>\r\n    <a mat-button class=\"toolbar__link\" routerLink=\"/home\">Home</a>\r\n    <span class=\"toolbar__button-spacer\"></span>\r\n    <a mat-button class=\"toolbar__link\" id=\"navbar-image\" routerLink=\"/imageupload\">Classify Image</a>\r\n    <span class=\"toolbar__button-spacer\"></span>\r\n    <a mat-button class=\"toolbar__link\" id=\"navbar-utilities\" routerLink=\"/utilities\">Tools</a>\r\n    <span class=\"toolbar__button-spacer\"></span>\r\n    <a mat-button class=\"toolbar__link\" id=\"navbar-contact\" routerLink=\"/contactus\">Contact Us</a>\r\n  </mat-toolbar>\r\n  <br>\r\n</div>\r\n\r\n  <main>\r\n      <router-outlet></router-outlet>\r\n  </main>\r\n  \r\n<br>\r\n<app-feedback></app-feedback>\r\n\r\n<div class=\"footer\">\r\n    <!-- <mat-grid-list cols=\"3\" rowHeight=\"3:1\">\r\n      <mat-grid-tile [colspan]=1 [rowspan]=1>\r\n        <div>\r\n          <a mat-button routerLink=\"/home\" class=\"footer__link\">Home</a><br>\r\n          <a mat-button routerLink=\"/imageupload\" class=\"footer__link\">Upload Image</a><br>\r\n          <a mat-button routerLink=\"/utilities\" class=\"footer__link\">Utilities</a><br>\r\n          <a mat-button id=\"footer-contactus\" routerLink=\"/contactus\" class=\"footer__link\">Contact Us</a>\r\n        </div>\r\n      </mat-grid-tile>\r\n      <mat-grid-tile>\r\n        <a mat-button href=\"https://github.com/OrishaOrrie/SoftwareSharks\" class=\"footer__link\" target=\"_blank\">Developed by<br> Software Sharks</a><br>\r\n        <img class=\"footer__logo\" src=\"../assets/ss-logo.png\" alt=\"Software-Sharks\">\r\n      </mat-grid-tile>\r\n      <mat-grid-tile>\r\n        <a mat-button href=\"http://www.bramhope.co.za/\" class=\"footer__link\" target=\"_blank\">Developed for<br>The Bramhope Group</a><br>\r\n        <img class=\"footer__logo\" src=\"../assets/bramhope-logo.jpg\" alt=\"logo\">\r\n      </mat-grid-tile>\r\n      <mat-grid-tile>\r\n        <a mat-button href=\"https://www.up.ac.za/\" class=\"footer__link\" target=\"_blank\">A Project for<br>The University of Pretoria</a><br>\r\n        <img class=\"footer__logo\" src=\"../assets/tukslogo.png\" alt=\"logo\">\r\n      </mat-grid-tile>\r\n    </mat-grid-list> -->\r\n\r\n    <div class=\"footer__buttons\">\r\n      <!-- <a class=\"footer__button\" mat-button href=\"https://github.com/OrishaOrrie/SoftwareSharks\" target=\"_blank\">\r\n        <h3 class=\"footer__button-info\">Developed by</h3>\r\n        <img class=\"footer__logo\" src=\"../assets/ss-logo.png\" alt=\"Software Sharks Logo\">\r\n        <h3 class=\"footer__button-info\">Software Sharks</h3>\r\n      </a>\r\n      <a class=\"footer__button\" mat-button href=\"http://www.bramhope.co.za/\" target=\"_blank\">\r\n        <h3 class=\"footer__button-info\">Developed for</h3>\r\n        <img class=\"footer__logo\" src=\"../assets/bramhope-logo.jpg\" alt=\"Bramhope Logo\">\r\n        <h3 class=\"footer__button-info\">The Bramhope Group</h3>\r\n      </a>\r\n      <a class=\"footer__button\" mat-button href=\"https://www.up.ac.za/\" target=\"_blank\">\r\n        <h3 class=\"footer__button-info\">A project for</h3>\r\n        <img class=\"footer__logo\" src=\"../assets/tukslogo.png\" alt=\"University of Pretoria logo\">\r\n        <h3 class=\"footer__button-info\">The University of Pretoria</h3>\r\n      </a> -->\r\n      <a class=\"footer__button\" mat-button href=\"https://github.com/OrishaOrrie/SoftwareSharks\" target=\"_blank\">\r\n        <img class=\"footer__logo\" src=\"../assets/ss-logo.png\" alt=\"Software Sharks Logo\">\r\n        <h4 class=\"footer__button-info\">Developed by<br> Software Sharks</h4>\r\n      </a>\r\n      <a class=\"footer__button\" mat-button href=\"http://www.bramhope.co.za/\" target=\"_blank\">\r\n        <img class=\"footer__logo\" src=\"../assets/bramhope-logo.jpg\" alt=\"Bramhope Logo\">\r\n        <h4 class=\"footer__button-info\">Developed for<br> The Bramhope Group</h4>\r\n      </a>\r\n      <a class=\"footer__button\" mat-button href=\"https://www.up.ac.za/\" target=\"_blank\">\r\n        <img class=\"footer__logo\" src=\"../assets/tukslogo.png\" alt=\"University of Pretoria Logo\">\r\n        <h4 class=\"footer__button-info\">A Project for <br> University of Pretoria</h4>\r\n      </a>\r\n    </div>\r\n\r\n  </div>\r\n"

/***/ }),

/***/ "./src/app/app.component.spec.ts":
/*!***************************************!*\
  !*** ./src/app/app.component.spec.ts ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var feedback_component_1 = __webpack_require__(/*! ./feedback/feedback.component */ "./src/app/feedback/feedback.component.ts");
var router_1 = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
var testing_1 = __webpack_require__(/*! @angular/router/testing */ "./node_modules/@angular/router/fesm5/testing.js");
var testing_2 = __webpack_require__(/*! @angular/core/testing */ "./node_modules/@angular/core/fesm5/testing.js");
var app_component_1 = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
var material_module_1 = __webpack_require__(/*! ./material.module */ "./src/app/material.module.ts");
var forms_1 = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
var http_1 = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
describe('AppComponent', function () {
    beforeEach(testing_2.async(function () {
        testing_2.TestBed.configureTestingModule({
            declarations: [
                app_component_1.AppComponent,
                feedback_component_1.FeedbackComponent
            ],
            imports: [
                material_module_1.MaterialModule,
                router_1.RouterModule,
                testing_1.RouterTestingModule,
                forms_1.ReactiveFormsModule,
                http_1.HttpClientModule
            ]
        }).compileComponents();
    }));
    it('should create the app', testing_2.async(function () {
        var fixture = testing_2.TestBed.createComponent(app_component_1.AppComponent);
        var app = fixture.debugElement.componentInstance;
        expect(app).toBeTruthy();
    }));
    it("should have as title 'Ninshiki'", testing_2.async(function () {
        var fixture = testing_2.TestBed.createComponent(app_component_1.AppComponent);
        var app = fixture.debugElement.componentInstance;
        expect(app.title).toEqual('Ninshiki');
    }));
});


/***/ }),

/***/ "./src/app/app.component.ts":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var AppComponent = /** @class */ (function () {
    function AppComponent() {
        this.title = 'Ninshiki';
    }
    AppComponent = __decorate([
        core_1.Component({
            selector: 'app-root',
            template: __webpack_require__(/*! ./app.component.html */ "./src/app/app.component.html"),
            styles: [__webpack_require__(/*! ./app.component.css */ "./src/app/app.component.css")]
        })
    ], AppComponent);
    return AppComponent;
}());
exports.AppComponent = AppComponent;


/***/ }),

/***/ "./src/app/contact-us/contact-us.component.css":
/*!*****************************************************!*\
  !*** ./src/app/contact-us/contact-us.component.css ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".contact-container{\r\n    background-color: #607D8B;\r\n    color: lightgray;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.contact-title {\r\n    color: lightgray;\r\n    text-align: center;\r\n    font-family: \"Lato\", Arial, Helvetica, sans-serif;\r\n}\r\n\r\n.email-container {\r\n    background-color: #607D8B;\r\n    color: lightgray;\r\n    border: lightgray 2px solid;\r\n}\r\n\r\n.email-container__form {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    background-color: lightgray;\r\n    color: rgb(13, 33, 44);\r\n    border: 3px solid rgb(35, 64, 78);\r\n}\r\n\r\n.email-container__cs {\r\n    height: 300px;\r\n    padding: 10px;\r\n}\r\n\r\n.email__instructions {\r\n    text-align: center;\r\n    color: lightgray;\r\n    font-family: \"Lato\", Arial, Helvetica, sans-serif;\r\n}\r\n\r\n.email__form {\r\n    margin: 20px auto;\r\n    width: 60%;\r\n}\r\n\r\n.email__msg-part {\r\n    width: 80%;\r\n}\r\n\r\n.email__image {\r\n    padding: auto auto;\r\n    height: 275px;\r\n}\r\n\r\n.email__submit {\r\n    border: #607D8B 2px solid;\r\n}\r\n\r\n.status-card {\r\n    background-color: lightgray;\r\n    color: rgb(13, 33, 44);\r\n    font-family: \"Lato\", Arial, Helvetica, sans-serif;\r\n    margin: auto 25px;\r\n    padding-right: 20px;\r\n    border: #607D8B 3px solid;\r\n}\r\n"

/***/ }),

/***/ "./src/app/contact-us/contact-us.component.html":
/*!******************************************************!*\
  !*** ./src/app/contact-us/contact-us.component.html ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card class=\"contact-container\">\r\n    <h1 class=\"contact-title\">Contact Us!</h1>\r\n    \r\n    <mat-card class=\"email-container\" color=\"primary\">\r\n        <p class=\"email__instructions\">\r\n            Got a query about one of Brahope's products? Want to request a quote? Enter your name, email, and message, and one of our kind\r\n            staff members will get back to you soon!\r\n        </p>\r\n        <div class=\"email-container__form\">\r\n            <img class=\"email-container__cs\" src=\"../../assets/bramhope-logo.jpg\">\r\n            <form class=\"form-horizontal email__form\" id=\"usrForm\" [formGroup]=\"myGroup\" *ngIf=\"!submitted\">\r\n                <mat-form-field color=\"primary\">\r\n                    <input class=\"email__name-part\" matInput type=\"text\" id=\"name\" required formControlName=\"name\" name=\"name\" placeholder=\"Enter your name\">\r\n                </mat-form-field>\r\n                <br>\r\n                <mat-form-field color=\"primary\">\r\n                    <input class=\"email__email-part\" matInput id=\"email\" required formControlName=\"email\" name=\"email\" placeholder=\"Enter your email\">\r\n                <mat-error *ngIf=\"email.invalid\">{{ getErrorMessage() }}</mat-error>\r\n                </mat-form-field>\r\n                <br>\r\n                <mat-form-field class=\"email__msg-part\" color=\"primary\">\r\n                    <textarea matInput matTextareaAutosize matAutosizeMinRows=\"2\" matAutosizeMaxRows=\"5\" rows=\"3\" \r\n                    id=\"message\" form=\"usrForm\" required formControlName=\"message\" name=\"message\" placeholder=\"Enter your query\"></textarea>\r\n                </mat-form-field>\r\n                <br>\r\n                <div>\r\n                    <button [disabled]=\"!myGroup.valid\" mat-stroked-button color=\"primary\" type=\"submit\" (click)=\"onSubmit()\" \r\n                    class=\"email__submit\" form=\"usrForm\">SUBMIT</button>\r\n                    <mat-spinner style=\"float: right;\" color=\"primary\" [diameter]=\"30\" [style.display]=\"showSpinner ? 'block':'none'\"></mat-spinner>\r\n                </div>\r\n            </form>\r\n            <mat-card class=\"status-card\" *ngIf=\"submitted\">\r\n                <h2 class=\"status-heading\">{{ msgReceived }}</h2>\r\n            </mat-card>\r\n                <!-- <img class=\"email__image\" src=\"../../assets/bramhope-logo.jpg\"> -->\r\n        </div>        \r\n        \r\n    </mat-card>\r\n</mat-card>\r\n"

/***/ }),

/***/ "./src/app/contact-us/contact-us.component.spec.ts":
/*!*********************************************************!*\
  !*** ./src/app/contact-us/contact-us.component.spec.ts ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
var forms_1 = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
var material_module_1 = __webpack_require__(/*! ./../material.module */ "./src/app/material.module.ts");
var testing_1 = __webpack_require__(/*! @angular/core/testing */ "./node_modules/@angular/core/fesm5/testing.js");
var contact_us_component_1 = __webpack_require__(/*! ./contact-us.component */ "./src/app/contact-us/contact-us.component.ts");
describe('ContactUsComponent', function () {
    var component;
    var fixture;
    beforeEach(testing_1.async(function () {
        testing_1.TestBed.configureTestingModule({
            declarations: [contact_us_component_1.ContactUsComponent],
            imports: [
                material_module_1.MaterialModule,
                forms_1.ReactiveFormsModule,
                http_1.HttpClientModule
            ]
        })
            .compileComponents();
    }));
    beforeEach(function () {
        fixture = testing_1.TestBed.createComponent(contact_us_component_1.ContactUsComponent);
        component = fixture.componentInstance;
        fixture.detectChanges();
    });
    it('should create', function () {
        expect(component).toBeTruthy();
    });
    it('the form should be invalid when empty', function () {
        expect(component.myGroup.valid).toBeFalsy();
    });
    it('all fields should be invalid when empty', function () {
        var name = component.myGroup.controls['name'];
        var email = component.myGroup.controls['email'];
        var message = component.myGroup.controls['message'];
        expect(name.valid).toBeFalsy();
        expect(email.valid).toBeFalsy();
        expect(message.valid).toBeFalsy();
    });
    it('required fields should not be empty', function () {
        var errors = {};
        var email = component.myGroup.controls['email'];
        errors = email.errors || {};
        expect(errors['required']).toBeTruthy();
    });
    it('email values need to be valid', function () {
        var errors = {};
        var email = component.myGroup.controls['email'];
        email.setValue('test');
        errors = email.errors || {};
        expect(errors['email']).toBeTruthy();
    });
    it('valid email values should not have any errors', function () {
        var errors = {};
        var email = component.myGroup.controls['email'];
        email.setValue('test@2');
        errors = email.errors || {};
        expect(errors['email']).toBeFalsy();
    });
});


/***/ }),

/***/ "./src/app/contact-us/contact-us.component.ts":
/*!****************************************************!*\
  !*** ./src/app/contact-us/contact-us.component.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * File Name:       contact-us.component
 * Version Number:  v1.0
 * Author Name:     Orisha Orrie
 * Project Name:    Ninshiki
 * Organization:    Software Sharks
 * Manual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf
 * Update History:
 * ------------------------------------------
 * Date         Author        Description
 * 01/03/2018   Orisha        Created component
 * ------------------------------------------
 * Test Cases:      contact-us.component.spec.ts
 * Functional Description:
 *  Allows user to send email query to client via Http to the server
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var http_1 = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
var forms_1 = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
var ContactUsComponent = /** @class */ (function () {
    /**
     * This constructor is only used to pass an instance of the HttpClient module.
     * @param http  HttpClient instance
     */
    function ContactUsComponent(http) {
        this.http = http;
        /**
         * Evaluates to true when a server response is received.
         */
        this.submitted = false;
        /**
         * Determines whether the spinner is to be displayed or not
         */
        this.showSpinner = false;
        /**
         * Message received from the server. Displayed on the status card
         */
        this.msgReceived = '';
        /**
         * FormControl used to validate email input
         */
        this.email = new forms_1.FormControl('', [forms_1.Validators.required, forms_1.Validators.email]);
        /**
         * FormGroup used as a model for form input
         */
        this.myGroup = new forms_1.FormGroup({
            name: new forms_1.FormControl(''),
            email: new forms_1.FormControl('', [forms_1.Validators.required, forms_1.Validators.email]),
            message: new forms_1.FormControl('')
        });
    }
    ContactUsComponent.prototype.ngOnInit = function () {
    };
    /**
     * Called when invalid input is detected
     */
    ContactUsComponent.prototype.getErrorMessage = function () {
        // console.log('Errrorrrrr');
        return this.email.hasError('required') ? 'You must enter a value' :
            this.email.hasError('email') ? 'Not a valid email' :
                '';
    };
    /**
     * Called when the Submit button is clicked. POSTs the email, name, and query to the backend server.
     */
    ContactUsComponent.prototype.onSubmit = function () {
        var _this = this;
        var contactName = this.myGroup.get('name').value;
        var contactEmail = this.myGroup.get('email').value;
        var contactMessage = this.myGroup.get('message').value;
        var httpOptions = {
            headers: new http_1.HttpHeaders({
                'Access-Control-Allow-Origin': '*'
            })
        };
        console.log('Name: ' + contactName + ' Email: ' + contactEmail + ' Msg: ' + contactMessage);
        this.showSpinner = true;
        this.http.post('https://us-central1-testproject-ee885.cloudfunctions.net/app/sendmail', { 'subject': contactName, 'text': contactMessage, 'email': contactEmail }, httpOptions).subscribe(function (data1) {
            _this.showSpinner = false;
            var msgFromServer = data1['message'];
            _this.submitted = true;
            if (msgFromServer === 'Message sent') {
                console.log('Message sent == true');
                _this.msgReceived = 'Thank you for contacting us! We\'ll be in touch ;) ';
            }
            else {
                console.log('Message sent == false');
                _this.msgReceived = 'Sorry, your message was not sent. Try again later please if you don\'t mind OwO';
            }
        });
    };
    ContactUsComponent = __decorate([
        core_1.Component({
            selector: 'app-contact-us',
            template: __webpack_require__(/*! ./contact-us.component.html */ "./src/app/contact-us/contact-us.component.html"),
            styles: [__webpack_require__(/*! ./contact-us.component.css */ "./src/app/contact-us/contact-us.component.css")]
        }),
        __metadata("design:paramtypes", [http_1.HttpClient])
    ], ContactUsComponent);
    return ContactUsComponent;
}());
exports.ContactUsComponent = ContactUsComponent;


/***/ }),

/***/ "./src/app/feedback/feedback.component.html":
/*!**************************************************!*\
  !*** ./src/app/feedback/feedback.component.html ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"feedback\">\r\n  <p class=\"feedback_instructions\" *ngIf=\"!submitted\">We at Software Sharks are constantly trying to improve our webapp. Please provide us with feedback via the form below...</p>\r\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"submitForm()\" class=\"feedback__form\" *ngIf=\"!submitted\">\r\n    <mat-form-field color=\"primary\">\r\n      <input matInput formControlName=\"name\" type=\"text\" placeholder=\"Enter your name\" required>\r\n    </mat-form-field>\r\n    <mat-form-field color=\"primary\">\r\n      <mat-select placeholder=\"Select feedback type\" formControlName=\"feedType\" required>\r\n        <mat-option *ngFor=\"let f of feedbackTypes\" [value]=\"f\">{{ f }}</mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n    <mat-form-field color=\"primary\">\r\n      <textarea matInput matAutosizeMaxRows=\"3\" rows=\"1\" formControlName=\"message\" type=\"text\" placeholder=\"Enter feedback\" required></textarea>\r\n    </mat-form-field>\r\n    <div>\r\n      <button mat-stroked-button type=\"submit\" class=\"feedback__send-button\" [disabled]=\"!formGroup.valid\">\r\n        Send Feedback</button>\r\n      <!-- <mat-spinner color=\"primary\" mode=\"indeterminate\" diameter=\"10\" style.display=\"sending ? 'block': 'none'\"></mat-spinner> -->\r\n      <mat-spinner style=\"float: right; padding-left: 10px;\" color=\"primary\" \r\n      [diameter]=\"30\" [style.display]=\"sending ? 'block':'none'\"></mat-spinner>\r\n    </div>\r\n    <p class=\"feedback__sent\" *ngIf=\"failedToSubmit\">Sorry, we couldn't receive your feedback.</p>\r\n  </form>\r\n  <h3 class=\"feedback__sent\" *ngIf=\"submitted\">Thank you for the feedback!</h3>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/feedback/feedback.component.scss":
/*!**************************************************!*\
  !*** ./src/app/feedback/feedback.component.scss ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".feedback {\n  border: lightgray 3px solid;\n  margin: auto 5%; }\n\n.feedback_instructions {\n  padding-left: 20px;\n  font-family: \"Lato\", Arial, Helvetica, sans-serif;\n  color: lightgray; }\n\n.feedback__form {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  background-color: lightgray;\n  padding-top: 20px; }\n\n.feedback__send-button {\n  border: 2px solid #0d212c;\n  color: #0d212c;\n  font-family: \"Lato\", Arial, Helvetica, sans-serif; }\n\n.feedback__sent {\n  padding-left: 20px;\n  color: lightgray;\n  font-family: \"Lato\", Arial, Helvetica, sans-serif; }\n"

/***/ }),

/***/ "./src/app/feedback/feedback.component.spec.ts":
/*!*****************************************************!*\
  !*** ./src/app/feedback/feedback.component.spec.ts ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var testing_1 = __webpack_require__(/*! @angular/core/testing */ "./node_modules/@angular/core/fesm5/testing.js");
var feedback_component_1 = __webpack_require__(/*! ./feedback.component */ "./src/app/feedback/feedback.component.ts");
var material_module_1 = __webpack_require__(/*! ../material.module */ "./src/app/material.module.ts");
var forms_1 = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
var http_1 = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
describe('FeedbackComponent', function () {
    var component;
    var fixture;
    beforeEach(testing_1.async(function () {
        testing_1.TestBed.configureTestingModule({
            declarations: [feedback_component_1.FeedbackComponent],
            imports: [
                material_module_1.MaterialModule,
                forms_1.ReactiveFormsModule,
                http_1.HttpClientModule
            ]
        })
            .compileComponents();
    }));
    beforeEach(function () {
        fixture = testing_1.TestBed.createComponent(feedback_component_1.FeedbackComponent);
        component = fixture.componentInstance;
        fixture.detectChanges();
    });
    it('should create', function () {
        expect(component).toBeTruthy();
    });
    it('the form should be invalid when empty', function () {
        expect(component.formGroup.valid).toBeFalsy();
    });
    it('all fields should be invalid when empty', function () {
        var name = component.formGroup.controls['name'];
        var message = component.formGroup.controls['message'];
        expect(name.valid).toBeFalsy();
        expect(message.valid).toBeFalsy();
    });
    it('required fields should not be empty', function () {
        var errors = {};
        var name = component.formGroup.controls['name'];
        errors = name.errors || {};
        expect(errors['required']).toBeTruthy();
    });
});


/***/ }),

/***/ "./src/app/feedback/feedback.component.ts":
/*!************************************************!*\
  !*** ./src/app/feedback/feedback.component.ts ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * File Name:       feedback.component
 * Version Number:  v1.0
 * Author Name:     Tobias Bester
 * Project Name:    Ninshiki
 * Organization:    Software Sharks
 * Manual:  Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf
 * Update History:
 * ------------------------------------------
 * Date         Author        Description
 * 01/09/2018   Tobias        Created component
 * ------------------------------------------
 * Test Cases:      feedback.component.spec.ts
 * Functional Description:
 *  Allows user to send feedback to developers
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var forms_1 = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
var FeedbackComponent = /** @class */ (function () {
    /**
     * THe form group and it's validation is defined in this constructor
     * @param fb Form Builder injection used for Form validation
     * @param http HttpClient injection used to make HTTP requests
     */
    function FeedbackComponent(fb, http) {
        this.fb = fb;
        this.http = http;
        /**
         * Array of all types of feedback
         */
        this.feedbackTypes = [
            'General Feedback',
            'Bug',
            'Feature Request'
        ];
        /**
         * The default feedback type to be used
         */
        this.defaultType = 'General Feedback';
        /**
         * Indicates that the feedback is being sent
         */
        this.sending = false;
        /**
         * Indicates that a response has been received from the server
         */
        this.submitted = false;
        /**
         * Indicates that an error occured while trying to submit feedback
         */
        this.failedToSubmit = false;
        this.formGroup = this.fb.group({
            name: new forms_1.FormControl('', forms_1.Validators.compose([
                forms_1.Validators.maxLength(30),
                forms_1.Validators.minLength(3),
                forms_1.Validators.required
            ])),
            feedType: new forms_1.FormControl(null),
            message: new forms_1.FormControl('', forms_1.Validators.compose([
                forms_1.Validators.minLength(5),
                forms_1.Validators.maxLength(200)
            ]))
        });
        this.formGroup.controls['feedType'].setValue(this.defaultType, { onlySelf: true });
    }
    FeedbackComponent.prototype.ngOnInit = function () {
    };
    /**
     * Called when the Send Feedback button is clicked. POSTs the message and handles the server
     * response
     */
    FeedbackComponent.prototype.submitForm = function () {
        var _this = this;
        this.sending = true;
        console.log('Form Valid!');
        console.log(this.formGroup.controls['name'].value);
        this.postMessage().subscribe((function (data) {
            console.log(data);
            if (data['message'] === 'Message sent') {
                _this.submitted = true;
            }
            else {
                _this.failedToSubmit = true;
            }
            _this.sending = false;
        }));
        // this.formGroup.reset();
    };
    /**
     * Handles sending the HTTP POST request to the email server with the necessary feedback details
     * @returns   Observable with the data received by the email server
     */
    FeedbackComponent.prototype.postMessage = function () {
        var msgToSend = 'Feedback type: ' + this.formGroup.controls['feedType'].value + '\n'
            + this.formGroup.controls['message'].value;
        return this.http.post('https://us-central1-testproject-ee885.cloudfunctions.net/app/sendmail', {
            'subject': this.formGroup.controls['name'].value,
            'text': msgToSend,
            'email': 'Email Unavailable',
        });
    };
    FeedbackComponent = __decorate([
        core_1.Component({
            selector: 'app-feedback',
            template: __webpack_require__(/*! ./feedback.component.html */ "./src/app/feedback/feedback.component.html"),
            styles: [__webpack_require__(/*! ./feedback.component.scss */ "./src/app/feedback/feedback.component.scss")]
        }),
        __metadata("design:paramtypes", [forms_1.FormBuilder, http_1.HttpClient])
    ], FeedbackComponent);
    return FeedbackComponent;
}());
exports.FeedbackComponent = FeedbackComponent;


/***/ }),

/***/ "./src/app/home/home.component.css":
/*!*****************************************!*\
  !*** ./src/app/home/home.component.css ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".welcome-container {\r\n    padding: 5px;\r\n}\r\n\r\n.intro-message {\r\n    color: lightgray;\r\n    text-align: center;\r\n    top: 1em;\r\n    font-family: \"Lato\", sans-serif;\r\n    font-size: 250%;\r\n}\r\n\r\n.intro__subtitle {\r\n    font-family: \"Lato\", sans-serif;\r\n    text-align: center;\r\n    color: lightgray;\r\n    font-weight: 400;\r\n    margin: auto;\r\n    word-wrap: break-word;\r\n}\r\n\r\n.upload-button {\r\n    display: block;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    width: 40%;\r\n    padding: 15px;\r\n    border: 3px solid lightgray;\r\n    word-wrap: break-word;\r\n}\r\n\r\n.upload-button__text {\r\n    font-family: \"Lato\", sans-serif;\r\n    font-size: larger;\r\n    text-transform: capitalize;\r\n    color: lightgray;\r\n}\r\n\r\n.carousel {\r\n    width: 75%;\r\n    height: 25%;\r\n    background-color: #CFD8DC;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin: auto;\r\n}\r\n\r\n.carousel__img {\r\n    align-self: flex-start;\r\n    height: 300px;\r\n    width: 60%;\r\n}\r\n\r\n.carousel__img-src{\r\n    align-self: flex-start;\r\n    height: 100%;\r\n}\r\n\r\n.carousel__content {\r\n    -ms-grid-row-align: center;\r\n        align-self: center;\r\n    width: 30%;\r\n    padding-right: 50px;\r\n}\r\n\r\n.carousel__content-header {\r\n    font-family: \"Lato\", sans-serif;\r\n}\r\n\r\n.carousel__content-text {\r\n    font-family: \"Lato\", sans-serif;\r\n    word-wrap: break-word;\r\n}\r\n\r\n/* \r\n\r\n.step-card {\r\n    background-size: cover;\r\n    opacity: 0.9;\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.step-card__number {\r\n    margin-top: 20px;\r\n    text-align: center;\r\n    color: white;\r\n    font-size: 300%;\r\n    text-shadow: 4px 4px 4px black;\r\n}\r\n\r\n.step-card__title{\r\n    font-family: \"Raleway\", sans-serif;\r\n    text-align: left;\r\n    text-shadow: 4px 4px 4px black;\r\n    color:rgb(255, 255, 255);\r\n    font-size: 200%;\r\n    position: absolute;\r\n}\r\n\r\n.step-card__description{\r\n    color: white;\r\n    background: #607D8B;\r\n    height: 15%;\r\n    width: 100%;\r\n    position: absolute;\r\n    left: 0em;\r\n    bottom: 0em;\r\n}\r\n\r\n.actual-description {\r\n    overflow-wrap: break-word;\r\n    text-align: center;\r\n    margin-right: 50px;\r\n} */\r\n\r\n"

/***/ }),

/***/ "./src/app/home/home.component.html":
/*!******************************************!*\
  !*** ./src/app/home/home.component.html ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"welcome-container\">\r\n\r\n  <h1 class=\"intro-message\">Let us tell you what you're holding</h1>\r\n  <h2 class=\"intro__subtitle\">Ninshiki uses Artificial Intelligence and Computer Vision to predict the object in an image</h2>\r\n  <br>\r\n  <br>\r\n  <button mat-stroked-button color=\"primary\" routerLink=\"/imageupload\" class=\"upload-button\" id=\"submit-button\">\r\n    <i class=\"material-icons\" style=\"padding-right: 5px; color: lightgray;\">image_search</i>\r\n    <span class=\"upload-button__text\">SUBMIT IMAGE</span>\r\n  </button>\r\n  <br>\r\n  <br>\r\n  <br>\r\n  <br>\r\n  <div class=\"carousel\">\r\n    <div class=\"carousel__img\">\r\n      <img class=\"carousel__img-src\" src=\"../../assets/pineapple.jpeg\">\r\n    </div>\r\n    <div class=\"carousel__content\">\r\n      <h2 class=\"carousel__content-header\">You Select an Image</h2>\r\n      <p class=\"carousel__content-text\">Have an object that you'd like to classify? Capture an image of it using your webcam or select an \r\n        image from your gallery.</p>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <br>\r\n  <div class=\"carousel\">\r\n    <div class=\"carousel__img\">\r\n      <img class=\"carousel__img-src\" src=\"../../assets/coggers.jpeg\">\r\n    </div>\r\n    <div class=\"carousel__content\">\r\n      <h2 class=\"carousel__content-header\">We Analyze the Image</h2>\r\n      <p class=\"carousel__content-text\">Using state-of-the-art Artificial Intelligence and Image Classification technology, Ninshiki\r\n      will analyze the content of the image.</p>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <br>\r\n  <div class=\"carousel\">\r\n    <div class=\"carousel__img\">\r\n      <img class=\"carousel__img-src\" src=\"../../assets/ikea.jpg\">\r\n    </div>\r\n    <div class=\"carousel__content\">\r\n      <h2 class=\"carousel__content-header\">You Learn What the Object Is</h2>\r\n      <p class=\"carousel__content-text\">Within moments, Ninshiki will return the name or type of the object in the image. Now \r\n        you can continue with that knowledge!</p>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- <div style=\"width:100%;\">\r\n    <mat-grid-list cols=\"3\" rowHeight=\"9:10\" gutterSize=\"10px\">\r\n      <mat-grid-tile class=\"step-tile\" [colspan]=1 >\r\n        <mat-card class=\"hvr-float step-card\" style=\"background-image: url(/assets/taking-img-of-dessert.jpeg)\">\r\n          <h2 class=\"step-card__number\">1</h2>\r\n          <h3 class=\"step-card__title\">IMAGE<br>UPLOAD</h3>\r\n          <mat-card class=\"step-card__description\">\r\n              <p class=\"actual-description\">Click on the Upload Image button to get started</p>\r\n          </mat-card>\r\n        </mat-card>\r\n      </mat-grid-tile>\r\n      <mat-grid-tile class=\"step-tile\" [colspan]=1>\r\n        <mat-card class=\"hvr-float step-card\" style=\"background-image: url(/assets/gears.jpeg)\">\r\n          <h2 class=\"step-card__number\">2</h2>\r\n          <h3 class=\"step-card__title\">IMAGE<br>ANALYSIS</h3>\r\n          <mat-card class=\"step-card__description\">\r\n              <p class=\"actual-description\">Once you submit an image, we'll process the image with our trained AI model</p>\r\n          </mat-card>\r\n        </mat-card>\r\n      </mat-grid-tile>\r\n      <mat-grid-tile class=\"step-tile\" [colspan]=1>\r\n        <mat-card class=\"hvr-float step-card\" style=\"background-image: url(/assets/hardware-store.jpg)\">\r\n          <h2 class=\"step-card__number\">3</h2>\r\n          <h3 class=\"step-card__title\">IMAGE<br>CLASSIFICATION</h3>\r\n          <mat-card class=\"step-card__description\">\r\n              <p class=\"actual-description\">Then, we'll tell you what we think the object in your image is</p>\r\n          </mat-card>\r\n        </mat-card>\r\n      </mat-grid-tile>\r\n    </mat-grid-list>\r\n  </div> -->\r\n\r\n</div>"

/***/ }),

/***/ "./src/app/home/home.component.spec.ts":
/*!*********************************************!*\
  !*** ./src/app/home/home.component.spec.ts ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var material_module_1 = __webpack_require__(/*! ./../material.module */ "./src/app/material.module.ts");
var testing_1 = __webpack_require__(/*! @angular/core/testing */ "./node_modules/@angular/core/fesm5/testing.js");
var home_component_1 = __webpack_require__(/*! ./home.component */ "./src/app/home/home.component.ts");
describe('HomeComponent', function () {
    var component;
    var fixture;
    beforeEach(testing_1.async(function () {
        testing_1.TestBed.configureTestingModule({
            declarations: [home_component_1.HomeComponent],
            imports: [
                material_module_1.MaterialModule
            ]
        })
            .compileComponents();
    }));
    beforeEach(function () {
        fixture = testing_1.TestBed.createComponent(home_component_1.HomeComponent);
        component = fixture.componentInstance;
        fixture.detectChanges();
    });
    it('should create', function () {
        expect(component).toBeTruthy();
    });
});


/***/ }),

/***/ "./src/app/home/home.component.ts":
/*!****************************************!*\
  !*** ./src/app/home/home.component.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* File Name: home.component
Version Number: v1.0
Author Name: Tobias Bester
Project Name: Ninshiki
Organization: Software Sharks
Requirements: Refer to the Ninshiki User Manual at https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf
Update History:
----–––-––-–––---––––---––––--–––---––––-
Date––––Author––––Description–––––––––
01/03/2018 - Tobias - Created Home
----–––-––-–––---––––---––––--–––---––––-
Test Cases: home.component.spec.ts
Functional Description: Acts as landing page and provides routes to the other pages */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * File Name:       home.component
 * Version Number:  v1.0
 * Author:          Tobias Bester
 * Project Name:    Ninshiki
 * Organization:    Software Sharks
 * User Manual:     Refer to https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf
 * Update History:
 * ------------------------------------------
 * Date         Author        Description
 * 01/03/2018   Tobias        Created components
 * ------------------------------------------
 * Test Cases:      home.component.spec.ts
 * Functional Description:
 *  Acts as landing page for the web app and provides links to application functions.
 */
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var model_loader_service_1 = __webpack_require__(/*! ./../model/model-loader.service */ "./src/app/model/model-loader.service.ts");
var HomeComponent = /** @class */ (function () {
    /**
     * @ignore
     */
    function HomeComponent(ml) {
        this.ml = ml;
    }
    /**
     * The model loader service should start loading the model from the Internet upon home page entrance
     */
    HomeComponent.prototype.ngOnInit = function () {
        console.log('Fetching model');
        this.ml.loadModel();
    };
    HomeComponent = __decorate([
        core_1.Component({
            selector: 'app-home',
            template: __webpack_require__(/*! ./home.component.html */ "./src/app/home/home.component.html"),
            styles: [__webpack_require__(/*! ./home.component.css */ "./src/app/home/home.component.css"), __webpack_require__(/*! ../../../node_modules/hover.css/css/hover-min.css */ "./node_modules/hover.css/css/hover-min.css")],
            animations: []
        }),
        __metadata("design:paramtypes", [model_loader_service_1.ModelLoaderService])
    ], HomeComponent);
    return HomeComponent;
}());
exports.HomeComponent = HomeComponent;


/***/ }),

/***/ "./src/app/imageupload/classes sync recursive ^\\.\\/.*$":
/*!***************************************************!*\
  !*** ./src/app/imageupload/classes sync ^\.\/.*$ ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./bramhope_classes.json": "./src/app/imageupload/classes/bramhope_classes.json",
	"./classes.json": "./src/app/imageupload/classes/classes.json",
	"./imagenet_classes.json": "./src/app/imageupload/classes/imagenet_classes.json"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	var module = __webpack_require__(id);
	return module;
}
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) { // check for number or string
		var e = new Error('Cannot find module "' + req + '".');
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return id;
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./src/app/imageupload/classes sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./src/app/imageupload/classes/bramhope_classes.json":
/*!***********************************************************!*\
  !*** ./src/app/imageupload/classes/bramhope_classes.json ***!
  \***********************************************************/
/*! exports provided: classes, default */
/***/ (function(module) {

module.exports = {"classes":[{"id":0,"name":"allen_key_long","first":"a","quantity":362,"link":"http://www.bramhope.co.za/catalogue/Tools/Allen-key-6mm-long-neck_3#.W5QHj0YzZPY"},{"id":1,"name":"band_aid","first":"b","quantity":348,"link":"http://www.bramhope.co.za/catalogue/first-aid/Fabric-plaster-strips-100s_2#.W5QH9UYzZPY"},{"id":2,"name":"bastard_file","first":"b","quantity":304,"link":"http://www.bramhope.co.za/catalogue/Tools/Lathe-file-300mm-CUT-1-PFERD_2#.W5QINkYzZPY"},{"id":3,"name":"binzel_torch","first":"b","quantity":369,"link":"http://www.bramhope.co.za/catalogue/Tools/BINZEL-MB25-X-5m-Torch#.W5QIWEYzZPY"},{"id":4,"name":"boiler_suit","first":"b","quantity":181,"link":"http://www.bramhope.co.za/catalogue/body-workwear/POLY-COTTON-BOILER-SUIT#.W5QI60YzZPY"},{"id":5,"name":"broom","first":"b","quantity":362,"link":"http://www.bramhope.co.za/?search=broom"},{"id":6,"name":"cheese_head_screw","first":"c","quantity":324,"link":""},{"id":7,"name":"chisel","first":"c","quantity":380,"link":"http://www.bramhope.co.za/catalogue/Tools/Chisel-13x150_2#.W5QJ50YzZPY"},{"id":8,"name":"chuck_key","first":"c","quantity":369,"link":"http://www.bramhope.co.za/catalogue/Tool-Accessories/Chuck-Key-13mm_2#.W5QKDkYzZPY"},{"id":9,"name":"combination_spanner","first":"c","quantity":384,"link":"http://www.bramhope.co.za/?search=combination+spanner"},{"id":10,"name":"contact_tip","first":"c","quantity":372,"link":"http://www.bramhope.co.za/catalogue/Contact-Tips"},{"id":11,"name":"countersunk_screw","first":"c","quantity":354,"link":"http://www.bramhope.co.za/catalogue/Screws/M5-Countersunk-Screws#.W5QKbUYzZPY"},{"id":12,"name":"cutting_disk","first":"c","quantity":370,"link":"http://www.bramhope.co.za/catalogue/Grinding/115-X-1-0mm-Cutting-Disc-Steel-Thin#.W5QKiUYzZPY"},{"id":13,"name":"disposable_gloves","first":"d","quantity":375,"link":"http://www.bramhope.co.za/catalogue/hand-disposable-gloves"},{"id":14,"name":"dowel_pin","first":"d","quantity":372,"link":"http://www.bramhope.co.za/catalogue/Dowel-Pins"},{"id":15,"name":"drill","first":"d","quantity":377,"link":"http://www.bramhope.co.za/catalogue/Tool-Accessories/Kobe-DP2210-air-drill_2#.W5QKykYzZPY"},{"id":16,"name":"earmuffs","first":"e","quantity":359,"link":"http://www.bramhope.co.za/catalogue/ear-muffs"},{"id":17,"name":"first_aid kit","first":"f","quantity":286,"link":"http://www.bramhope.co.za/catalogue/first-aid"},{"id":18,"name":"group_of_people","first":"g","quantity":366,"link":""},{"id":19,"name":"grub_screw","first":"g","quantity":375,"link":"http://www.bramhope.co.za/catalogue/Screws/M10-Grub-Screws#.W5QLLEYzZPY"},{"id":20,"name":"gumboots","first":"g","quantity":381,"link":"http://www.bramhope.co.za/catalogue/foot-gumboots"},{"id":21,"name":"hacksaw","first":"h","quantity":381,"link":"http://www.bramhope.co.za/catalogue/Tools/Vickers-Hacksaw-frame_2#.W5QLS0YzZPY"},{"id":22,"name":"hammer","first":"h","quantity":371,"link":"http://www.bramhope.co.za/s.nl/it.A/id.39094/.f#.W5QLkkYzZPY"},{"id":23,"name":"hard_hat","first":"h","quantity":376,"link":"http://www.bramhope.co.za/catalogue/head-hard-hats"},{"id":24,"name":"hex_nut","first":"h","quantity":363,"link":"http://www.bramhope.co.za/?search=hex+nut"},{"id":25,"name":"hose_clamp","first":"h","quantity":381,"link":"http://www.bramhope.co.za/catalogue/Tool-Accessories/Hose-clamp#.W5QLxEYzZPY"},{"id":26,"name":"insulation_tape","first":"i","quantity":273,"link":"http://www.bramhope.co.za/catalogue/Tool-Accessories/Insulation-Tape-PTFE-12-x-10#.W5QL1UYzZPY"},{"id":27,"name":"jobber_drill","first":"j","quantity":354,"link":"http://www.bramhope.co.za/?search=jobber+drill"},{"id":28,"name":"ladder","first":"l","quantity":378,"link":"http://www.bramhope.co.za/catalogue/Tool-Accessories/FGSD6-Fibreglass-Ladder_3#.W5QMC0YzZPY"},{"id":29,"name":"life_jacket","first":"l","quantity":92,"link":"http://www.bramhope.co.za/catalogue/bramhope-multi-brand/nikki-life-jacket#.W5QMH0YzZPY"},{"id":30,"name":"mounted_point","first":"m","quantity":329,"link":"http://www.bramhope.co.za/catalogue/Tool-Accessories/Shank-diameter-6-x-40mm-point-A3-6-AR-30-O5V#.W5QMZ0YzZPY"},{"id":31,"name":"person","first":"p","quantity":377,"link":""},{"id":32,"name":"pot_magnet","first":"p","quantity":369,"link":"http://www.bramhope.co.za/catalogue/Tool-Accessories/Shallow-potmagnet#.W5QMjEYzZPY"},{"id":33,"name":"prohibitory_sign","first":"p","quantity":265,"link":"http://www.bramhope.co.za/catalogue/Prohibitory-Signs"},{"id":34,"name":"rubber_gloves","first":"r","quantity":362,"link":"http://www.bramhope.co.za/catalogue/hand-rubber-gloves"},{"id":35,"name":"safety_boots","first":"s","quantity":311,"link":"http://www.bramhope.co.za/catalogue/foot-boots"},{"id":36,"name":"safety_gloves","first":"s","quantity":376,"link":"http://www.bramhope.co.za/?search=safety+gloves"},{"id":37,"name":"sanding_belt","first":"s","quantity":386,"link":"http://www.bramhope.co.za/catalogue/Sanding-Accessories"},{"id":38,"name":"saw_blade","first":"s","quantity":377,"link":"http://www.bramhope.co.za/catalogue/Saw-Blades"},{"id":39,"name":"screwdriver","first":"s","quantity":382,"link":""},{"id":40,"name":"screwdriver_bit","first":"s","quantity":384,"link":"http://www.bramhope.co.za/catalogue/Tool-Accessories/Titanium-Screwdriver-Bits#.W5QNKEYzZPY"},{"id":41,"name":"screw_socket_head","first":"s","quantity":357,"link":"http://www.bramhope.co.za/?search=screw+socket+head"},{"id":42,"name":"self_tapping_screw","first":"s","quantity":367,"link":"http://www.bramhope.co.za/catalogue/Screws/Self-Tapping-Screws#.W5QNW0YzZPY"},{"id":43,"name":"tape_measure","first":"t","quantity":401,"link":"http://www.bramhope.co.za/catalogue/Tools/3-In-1-Tape-Measure_2#.W5QNdkYzZPY"},{"id":44,"name":"tap_wrench","first":"t","quantity":386,"link":"http://www.bramhope.co.za/catalogue/Tools/Ratchet-Type-Tap-Wrench-3.0-6.0mm#.W5QNjkYzZPY"},{"id":45,"name":"tool_set","first":"t","quantity":377,"link":"http://www.bramhope.co.za/catalogue/Tools/13-Piece-Home-Tool-Set_2#.W5QNoUYzZPY"},{"id":46,"name":"tow_belt","first":"t","quantity":374,"link":"http://www.bramhope.co.za/catalogue/Tools/3-6-Meter-Tow-Belt_2#.W5QNtkYzZPY"},{"id":47,"name":"traffic_cone","first":"t","quantity":380,"link":"http://www.bramhope.co.za/catalogue/road-safety-equipment/RUBBER-CONES#.W5QNzUYzZPY"},{"id":48,"name":"tungsten_rod","first":"t","quantity":355,"link":"http://www.bramhope.co.za/catalogue/Tool-Accessories/Tungsten-2.4mm-Red#.W5QN30YzZPY"},{"id":49,"name":"twist_drill","first":"t","quantity":382,"link":""},{"id":50,"name":"warning_sign","first":"w","quantity":349,"link":"http://www.bramhope.co.za/catalogue/Warning-Signs"},{"id":51,"name":"welding_tip","first":"w","quantity":351,"link":"http://www.bramhope.co.za/catalogue/Contact-Tips/BINZEL-Welding-Contact-Tips-1.0mm-M6#.W5QOOkYzZPY"},{"id":52,"name":"wire","first":"w","quantity":374,"link":"http://www.bramhope.co.za/catalogue/Tool-Accessories/Mig-Wire-1.0mm#.W5QOSUYzZPY"}]};

/***/ }),

/***/ "./src/app/imageupload/classes/classes.json":
/*!**************************************************!*\
  !*** ./src/app/imageupload/classes/classes.json ***!
  \**************************************************/
/*! exports provided: classes, default */
/***/ (function(module) {

module.exports = {"classes":[{"id":0,"name":"air_nipple","first":"a","quantity":354},{"id":1,"name":"air_quick_coupler","first":"a","quantity":339},{"id":2,"name":"allen_key_long","first":"a","quantity":362},{"id":3,"name":"allen_key_short","first":"a","quantity":358},{"id":4,"name":"automatic_lubricator","first":"a","quantity":358},{"id":5,"name":"backup_pad_hookit","first":"b","quantity":330},{"id":6,"name":"ball_lock","first":"b","quantity":375},{"id":7,"name":"ball_valve","first":"b","quantity":378},{"id":8,"name":"binzel_torch","first":"b","quantity":369},{"id":9,"name":"cheese_head_screw","first":"c","quantity":324},{"id":10,"name":"chipping_hammer","first":"c","quantity":287},{"id":11,"name":"circuit_breaker","first":"c","quantity":374},{"id":12,"name":"combination_spanner","first":"c","quantity":384},{"id":13,"name":"countersunk_screw","first":"c","quantity":354},{"id":14,"name":"cutting_disk","first":"c","quantity":370},{"id":15,"name":"dowel_pin","first":"d","quantity":372},{"id":16,"name":"dressing_stone","first":"d","quantity":315},{"id":17,"name":"drill_twist","first":"d","quantity":357},{"id":18,"name":"earth_clamp","first":"e","quantity":370},{"id":19,"name":"elbow_galv","first":"e","quantity":331},{"id":20,"name":"fan_grinder","first":"f","quantity":199},{"id":21,"name":"female_coupler","first":"f","quantity":350},{"id":22,"name":"file_handle","first":"f","quantity":350},{"id":23,"name":"flat_washer","first":"f","quantity":342},{"id":24,"name":"galv_nipple","first":"g","quantity":365},{"id":25,"name":"group_of_people","first":"g","quantity":366},{"id":26,"name":"grub_screw","first":"g","quantity":375},{"id":27,"name":"guided_drive","first":"g","quantity":308},{"id":28,"name":"hammer","first":"h","quantity":371},{"id":29,"name":"hammer_handle","first":"h","quantity":369},{"id":30,"name":"hex_nut","first":"h","quantity":363},{"id":31,"name":"hex_shoulder_screw","first":"h","quantity":368},{"id":32,"name":"hose_clamp","first":"h","quantity":381},{"id":33,"name":"l_connector_pipe","first":"l","quantity":359},{"id":34,"name":"male_galv_plug","first":"m","quantity":347},{"id":35,"name":"mounted_point","first":"m","quantity":329},{"id":36,"name":"person","first":"p","quantity":377},{"id":37,"name":"pvc_inspection_4way","first":"p","quantity":314},{"id":38,"name":"quick_release_coupling","first":"q","quantity":378},{"id":39,"name":"safety_gloves","first":"s","quantity":376},{"id":40,"name":"screw_socket_head","first":"s","quantity":357},{"id":41,"name":"self_tapping_screw","first":"s","quantity":367},{"id":42,"name":"split_pins","first":"s","quantity":324},{"id":43,"name":"spring_pin","first":"s","quantity":357},{"id":44,"name":"spring_washer","first":"s","quantity":373},{"id":45,"name":"steel_hinge","first":"s","quantity":365},{"id":46,"name":"suction_cup","first":"s","quantity":360},{"id":47,"name":"tape_measure","first":"t","quantity":401},{"id":48,"name":"tow_belt","first":"t","quantity":374},{"id":49,"name":"triangular_bastard_file","first":"t","quantity":352},{"id":50,"name":"tungsten_electrode","first":"t","quantity":306},{"id":51,"name":"two_people","first":"t","quantity":377},{"id":52,"name":"t_piece_galv","first":"t","quantity":287},{"id":53,"name":"union_elbow","first":"u","quantity":376},{"id":54,"name":"union_galv","first":"u","quantity":313},{"id":55,"name":"welding_tip","first":"w","quantity":351},{"id":56,"name":"wing_nut","first":"w","quantity":366}]};

/***/ }),

/***/ "./src/app/imageupload/classes/imagenet_classes.json":
/*!***********************************************************!*\
  !*** ./src/app/imageupload/classes/imagenet_classes.json ***!
  \***********************************************************/
/*! exports provideddefault */
/***/ (function(module) {

module.exports = {"0":"tench, Tinca tinca","1":"goldfish, Carassius auratus","2":"great white shark, white shark, man-eater, man-eating shark, Carcharodon carcharias","3":"tiger shark, Galeocerdo cuvieri","4":"hammerhead, hammerhead shark","5":"electric ray, crampfish, numbfish, torpedo","6":"stingray","7":"cock","8":"hen","9":"ostrich, Struthio camelus","10":"brambling, Fringilla montifringilla","11":"goldfinch, Carduelis carduelis","12":"house finch, linnet, Carpodacus mexicanus","13":"junco, snowbird","14":"indigo bunting, indigo finch, indigo bird, Passerina cyanea","15":"robin, American robin, Turdus migratorius","16":"bulbul","17":"jay","18":"magpie","19":"chickadee","20":"water ouzel, dipper","21":"kite","22":"bald eagle, American eagle, Haliaeetus leucocephalus","23":"vulture","24":"great grey owl, great gray owl, Strix nebulosa","25":"European fire salamander, Salamandra salamandra","26":"common newt, Triturus vulgaris","27":"eft","28":"spotted salamander, Ambystoma maculatum","29":"axolotl, mud puppy, Ambystoma mexicanum","30":"bullfrog, Rana catesbeiana","31":"tree frog, tree-frog","32":"tailed frog, bell toad, ribbed toad, tailed toad, Ascaphus trui","33":"loggerhead, loggerhead turtle, Caretta caretta","34":"leatherback turtle, leatherback, leathery turtle, Dermochelys coriacea","35":"mud turtle","36":"terrapin","37":"box turtle, box tortoise","38":"banded gecko","39":"common iguana, iguana, Iguana iguana","40":"American chameleon, anole, Anolis carolinensis","41":"whiptail, whiptail lizard","42":"agama","43":"frilled lizard, Chlamydosaurus kingi","44":"alligator lizard","45":"Gila monster, Heloderma suspectum","46":"green lizard, Lacerta viridis","47":"African chameleon, Chamaeleo chamaeleon","48":"Komodo dragon, Komodo lizard, dragon lizard, giant lizard, Varanus komodoensis","49":"African crocodile, Nile crocodile, Crocodylus niloticus","50":"American alligator, Alligator mississipiensis","51":"triceratops","52":"thunder snake, worm snake, Carphophis amoenus","53":"ringneck snake, ring-necked snake, ring snake","54":"hognose snake, puff adder, sand viper","55":"green snake, grass snake","56":"king snake, kingsnake","57":"garter snake, grass snake","58":"water snake","59":"vine snake","60":"night snake, Hypsiglena torquata","61":"boa constrictor, Constrictor constrictor","62":"rock python, rock snake, Python sebae","63":"Indian cobra, Naja naja","64":"green mamba","65":"sea snake","66":"horned viper, cerastes, sand viper, horned asp, Cerastes cornutus","67":"diamondback, diamondback rattlesnake, Crotalus adamanteus","68":"sidewinder, horned rattlesnake, Crotalus cerastes","69":"trilobite","70":"harvestman, daddy longlegs, Phalangium opilio","71":"scorpion","72":"black and gold garden spider, Argiope aurantia","73":"barn spider, Araneus cavaticus","74":"garden spider, Aranea diademata","75":"black widow, Latrodectus mactans","76":"tarantula","77":"wolf spider, hunting spider","78":"tick","79":"centipede","80":"black grouse","81":"ptarmigan","82":"ruffed grouse, partridge, Bonasa umbellus","83":"prairie chicken, prairie grouse, prairie fowl","84":"peacock","85":"quail","86":"partridge","87":"African grey, African gray, Psittacus erithacus","88":"macaw","89":"sulphur-crested cockatoo, Kakatoe galerita, Cacatua galerita","90":"lorikeet","91":"coucal","92":"bee eater","93":"hornbill","94":"hummingbird","95":"jacamar","96":"toucan","97":"drake","98":"red-breasted merganser, Mergus serrator","99":"goose","100":"black swan, Cygnus atratus","101":"tusker","102":"echidna, spiny anteater, anteater","103":"platypus, duckbill, duckbilled platypus, duck-billed platypus, Ornithorhynchus anatinus","104":"wallaby, brush kangaroo","105":"koala, koala bear, kangaroo bear, native bear, Phascolarctos cinereus","106":"wombat","107":"jellyfish","108":"sea anemone, anemone","109":"brain coral","110":"flatworm, platyhelminth","111":"nematode, nematode worm, roundworm","112":"conch","113":"snail","114":"slug","115":"sea slug, nudibranch","116":"chiton, coat-of-mail shell, sea cradle, polyplacophore","117":"chambered nautilus, pearly nautilus, nautilus","118":"Dungeness crab, Cancer magister","119":"rock crab, Cancer irroratus","120":"fiddler crab","121":"king crab, Alaska crab, Alaskan king crab, Alaska king crab, Paralithodes camtschatica","122":"American lobster, Northern lobster, Maine lobster, Homarus americanus","123":"spiny lobster, langouste, rock lobster, crawfish, crayfish, sea crawfish","124":"crayfish, crawfish, crawdad, crawdaddy","125":"hermit crab","126":"isopod","127":"white stork, Ciconia ciconia","128":"black stork, Ciconia nigra","129":"spoonbill","130":"flamingo","131":"little blue heron, Egretta caerulea","132":"American egret, great white heron, Egretta albus","133":"bittern","134":"crane","135":"limpkin, Aramus pictus","136":"European gallinule, Porphyrio porphyrio","137":"American coot, marsh hen, mud hen, water hen, Fulica americana","138":"bustard","139":"ruddy turnstone, Arenaria interpres","140":"red-backed sandpiper, dunlin, Erolia alpina","141":"redshank, Tringa totanus","142":"dowitcher","143":"oystercatcher, oyster catcher","144":"pelican","145":"king penguin, Aptenodytes patagonica","146":"albatross, mollymawk","147":"grey whale, gray whale, devilfish, Eschrichtius gibbosus, Eschrichtius robustus","148":"killer whale, killer, orca, grampus, sea wolf, Orcinus orca","149":"dugong, Dugong dugon","150":"sea lion","151":"Chihuahua","152":"Japanese spaniel","153":"Maltese dog, Maltese terrier, Maltese","154":"Pekinese, Pekingese, Peke","155":"Shih-Tzu","156":"Blenheim spaniel","157":"papillon","158":"toy terrier","159":"Rhodesian ridgeback","160":"Afghan hound, Afghan","161":"basset, basset hound","162":"beagle","163":"bloodhound, sleuthhound","164":"bluetick","165":"black-and-tan coonhound","166":"Walker hound, Walker foxhound","167":"English foxhound","168":"redbone","169":"borzoi, Russian wolfhound","170":"Irish wolfhound","171":"Italian greyhound","172":"whippet","173":"Ibizan hound, Ibizan Podenco","174":"Norwegian elkhound, elkhound","175":"otterhound, otter hound","176":"Saluki, gazelle hound","177":"Scottish deerhound, deerhound","178":"Weimaraner","179":"Staffordshire bullterrier, Staffordshire bull terrier","180":"American Staffordshire terrier, Staffordshire terrier, American pit bull terrier, pit bull terrier","181":"Bedlington terrier","182":"Border terrier","183":"Kerry blue terrier","184":"Irish terrier","185":"Norfolk terrier","186":"Norwich terrier","187":"Yorkshire terrier","188":"wire-haired fox terrier","189":"Lakeland terrier","190":"Sealyham terrier, Sealyham","191":"Airedale, Airedale terrier","192":"cairn, cairn terrier","193":"Australian terrier","194":"Dandie Dinmont, Dandie Dinmont terrier","195":"Boston bull, Boston terrier","196":"miniature schnauzer","197":"giant schnauzer","198":"standard schnauzer","199":"Scotch terrier, Scottish terrier, Scottie","200":"Tibetan terrier, chrysanthemum dog","201":"silky terrier, Sydney silky","202":"soft-coated wheaten terrier","203":"West Highland white terrier","204":"Lhasa, Lhasa apso","205":"flat-coated retriever","206":"curly-coated retriever","207":"golden retriever","208":"Labrador retriever","209":"Chesapeake Bay retriever","210":"German short-haired pointer","211":"vizsla, Hungarian pointer","212":"English setter","213":"Irish setter, red setter","214":"Gordon setter","215":"Brittany spaniel","216":"clumber, clumber spaniel","217":"English springer, English springer spaniel","218":"Welsh springer spaniel","219":"cocker spaniel, English cocker spaniel, cocker","220":"Sussex spaniel","221":"Irish water spaniel","222":"kuvasz","223":"schipperke","224":"groenendael","225":"malinois","226":"briard","227":"kelpie","228":"komondor","229":"Old English sheepdog, bobtail","230":"Shetland sheepdog, Shetland sheep dog, Shetland","231":"collie","232":"Border collie","233":"Bouvier des Flandres, Bouviers des Flandres","234":"Rottweiler","235":"German shepherd, German shepherd dog, German police dog, alsatian","236":"Doberman, Doberman pinscher","237":"miniature pinscher","238":"Greater Swiss Mountain dog","239":"Bernese mountain dog","240":"Appenzeller","241":"EntleBucher","242":"boxer","243":"bull mastiff","244":"Tibetan mastiff","245":"French bulldog","246":"Great Dane","247":"Saint Bernard, St Bernard","248":"Eskimo dog, husky","249":"malamute, malemute, Alaskan malamute","250":"Siberian husky","251":"dalmatian, coach dog, carriage dog","252":"affenpinscher, monkey pinscher, monkey dog","253":"basenji","254":"pug, pug-dog","255":"Leonberg","256":"Newfoundland, Newfoundland dog","257":"Great Pyrenees","258":"Samoyed, Samoyede","259":"Pomeranian","260":"chow, chow chow","261":"keeshond","262":"Brabancon griffon","263":"Pembroke, Pembroke Welsh corgi","264":"Cardigan, Cardigan Welsh corgi","265":"toy poodle","266":"miniature poodle","267":"standard poodle","268":"Mexican hairless","269":"timber wolf, grey wolf, gray wolf, Canis lupus","270":"white wolf, Arctic wolf, Canis lupus tundrarum","271":"red wolf, maned wolf, Canis rufus, Canis niger","272":"coyote, prairie wolf, brush wolf, Canis latrans","273":"dingo, warrigal, warragal, Canis dingo","274":"dhole, Cuon alpinus","275":"African hunting dog, hyena dog, Cape hunting dog, Lycaon pictus","276":"hyena, hyaena","277":"red fox, Vulpes vulpes","278":"kit fox, Vulpes macrotis","279":"Arctic fox, white fox, Alopex lagopus","280":"grey fox, gray fox, Urocyon cinereoargenteus","281":"tabby, tabby cat","282":"tiger cat","283":"Persian cat","284":"Siamese cat, Siamese","285":"Egyptian cat","286":"cougar, puma, catamount, mountain lion, painter, panther, Felis concolor","287":"lynx, catamount","288":"leopard, Panthera pardus","289":"snow leopard, ounce, Panthera uncia","290":"jaguar, panther, Panthera onca, Felis onca","291":"lion, king of beasts, Panthera leo","292":"tiger, Panthera tigris","293":"cheetah, chetah, Acinonyx jubatus","294":"brown bear, bruin, Ursus arctos","295":"American black bear, black bear, Ursus americanus, Euarctos americanus","296":"ice bear, polar bear, Ursus Maritimus, Thalarctos maritimus","297":"sloth bear, Melursus ursinus, Ursus ursinus","298":"mongoose","299":"meerkat, mierkat","300":"tiger beetle","301":"ladybug, ladybeetle, lady beetle, ladybird, ladybird beetle","302":"ground beetle, carabid beetle","303":"long-horned beetle, longicorn, longicorn beetle","304":"leaf beetle, chrysomelid","305":"dung beetle","306":"rhinoceros beetle","307":"weevil","308":"fly","309":"bee","310":"ant, emmet, pismire","311":"grasshopper, hopper","312":"cricket","313":"walking stick, walkingstick, stick insect","314":"cockroach, roach","315":"mantis, mantid","316":"cicada, cicala","317":"leafhopper","318":"lacewing, lacewing fly","319":"dragonfly, darning needle, devil's darning needle, sewing needle, snake feeder, snake doctor, mosquito hawk, skeeter hawk","320":"damselfly","321":"admiral","322":"ringlet, ringlet butterfly","323":"monarch, monarch butterfly, milkweed butterfly, Danaus plexippus","324":"cabbage butterfly","325":"sulphur butterfly, sulfur butterfly","326":"lycaenid, lycaenid butterfly","327":"starfish, sea star","328":"sea urchin","329":"sea cucumber, holothurian","330":"wood rabbit, cottontail, cottontail rabbit","331":"hare","332":"Angora, Angora rabbit","333":"hamster","334":"porcupine, hedgehog","335":"fox squirrel, eastern fox squirrel, Sciurus niger","336":"marmot","337":"beaver","338":"guinea pig, Cavia cobaya","339":"sorrel","340":"zebra","341":"hog, pig, grunter, squealer, Sus scrofa","342":"wild boar, boar, Sus scrofa","343":"warthog","344":"hippopotamus, hippo, river horse, Hippopotamus amphibius","345":"ox","346":"water buffalo, water ox, Asiatic buffalo, Bubalus bubalis","347":"bison","348":"ram, tup","349":"bighorn, bighorn sheep, cimarron, Rocky Mountain bighorn, Rocky Mountain sheep, Ovis canadensis","350":"ibex, Capra ibex","351":"hartebeest","352":"impala, Aepyceros melampus","353":"gazelle","354":"Arabian camel, dromedary, Camelus dromedarius","355":"llama","356":"weasel","357":"mink","358":"polecat, fitch, foulmart, foumart, Mustela putorius","359":"black-footed ferret, ferret, Mustela nigripes","360":"otter","361":"skunk, polecat, wood pussy","362":"badger","363":"armadillo","364":"three-toed sloth, ai, Bradypus tridactylus","365":"orangutan, orang, orangutang, Pongo pygmaeus","366":"gorilla, Gorilla gorilla","367":"chimpanzee, chimp, Pan troglodytes","368":"gibbon, Hylobates lar","369":"siamang, Hylobates syndactylus, Symphalangus syndactylus","370":"guenon, guenon monkey","371":"patas, hussar monkey, Erythrocebus patas","372":"baboon","373":"macaque","374":"langur","375":"colobus, colobus monkey","376":"proboscis monkey, Nasalis larvatus","377":"marmoset","378":"capuchin, ringtail, Cebus capucinus","379":"howler monkey, howler","380":"titi, titi monkey","381":"spider monkey, Ateles geoffroyi","382":"squirrel monkey, Saimiri sciureus","383":"Madagascar cat, ring-tailed lemur, Lemur catta","384":"indri, indris, Indri indri, Indri brevicaudatus","385":"Indian elephant, Elephas maximus","386":"African elephant, Loxodonta africana","387":"lesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens","388":"giant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca","389":"barracouta, snoek","390":"eel","391":"coho, cohoe, coho salmon, blue jack, silver salmon, Oncorhynchus kisutch","392":"rock beauty, Holocanthus tricolor","393":"anemone fish","394":"sturgeon","395":"gar, garfish, garpike, billfish, Lepisosteus osseus","396":"lionfish","397":"puffer, pufferfish, blowfish, globefish","398":"abacus","399":"abaya","400":"academic gown, academic robe, judge's robe","401":"accordion, piano accordion, squeeze box","402":"acoustic guitar","403":"aircraft carrier, carrier, flattop, attack aircraft carrier","404":"airliner","405":"airship, dirigible","406":"altar","407":"ambulance","408":"amphibian, amphibious vehicle","409":"analog clock","410":"apiary, bee house","411":"apron","412":"ashcan, trash can, garbage can, wastebin, ash bin, ash-bin, ashbin, dustbin, trash barrel, trash bin","413":"assault rifle, assault gun","414":"backpack, back pack, knapsack, packsack, rucksack, haversack","415":"bakery, bakeshop, bakehouse","416":"balance beam, beam","417":"balloon","418":"ballpoint, ballpoint pen, ballpen, Biro","419":"Band Aid","420":"banjo","421":"bannister, banister, balustrade, balusters, handrail","422":"barbell","423":"barber chair","424":"barbershop","425":"barn","426":"barometer","427":"barrel, cask","428":"barrow, garden cart, lawn cart, wheelbarrow","429":"baseball","430":"basketball","431":"bassinet","432":"bassoon","433":"bathing cap, swimming cap","434":"bath towel","435":"bathtub, bathing tub, bath, tub","436":"beach wagon, station wagon, wagon, estate car, beach waggon, station waggon, waggon","437":"beacon, lighthouse, beacon light, pharos","438":"beaker","439":"bearskin, busby, shako","440":"beer bottle","441":"beer glass","442":"bell cote, bell cot","443":"bib","444":"bicycle-built-for-two, tandem bicycle, tandem","445":"bikini, two-piece","446":"binder, ring-binder","447":"binoculars, field glasses, opera glasses","448":"birdhouse","449":"boathouse","450":"bobsled, bobsleigh, bob","451":"bolo tie, bolo, bola tie, bola","452":"bonnet, poke bonnet","453":"bookcase","454":"bookshop, bookstore, bookstall","455":"bottlecap","456":"bow","457":"bow tie, bow-tie, bowtie","458":"brass, memorial tablet, plaque","459":"brassiere, bra, bandeau","460":"breakwater, groin, groyne, mole, bulwark, seawall, jetty","461":"breastplate, aegis, egis","462":"broom","463":"bucket, pail","464":"buckle","465":"bulletproof vest","466":"bullet train, bullet","467":"butcher shop, meat market","468":"cab, hack, taxi, taxicab","469":"caldron, cauldron","470":"candle, taper, wax light","471":"cannon","472":"canoe","473":"can opener, tin opener","474":"cardigan","475":"car mirror","476":"carousel, carrousel, merry-go-round, roundabout, whirligig","477":"carpenter's kit, tool kit","478":"carton","479":"car wheel","480":"cash machine, cash dispenser, automated teller machine, automatic teller machine, automated teller, automatic teller, ATM","481":"cassette","482":"cassette player","483":"castle","484":"catamaran","485":"CD player","486":"cello, violoncello","487":"cellular telephone, cellular phone, cellphone, cell, mobile phone","488":"chain","489":"chainlink fence","490":"chain mail, ring mail, mail, chain armor, chain armour, ring armor, ring armour","491":"chain saw, chainsaw","492":"chest","493":"chiffonier, commode","494":"chime, bell, gong","495":"china cabinet, china closet","496":"Christmas stocking","497":"church, church building","498":"cinema, movie theater, movie theatre, movie house, picture palace","499":"cleaver, meat cleaver, chopper","500":"cliff dwelling","501":"cloak","502":"clog, geta, patten, sabot","503":"cocktail shaker","504":"coffee mug","505":"coffeepot","506":"coil, spiral, volute, whorl, helix","507":"combination lock","508":"computer keyboard, keypad","509":"confectionery, confectionary, candy store","510":"container ship, containership, container vessel","511":"convertible","512":"corkscrew, bottle screw","513":"cornet, horn, trumpet, trump","514":"cowboy boot","515":"cowboy hat, ten-gallon hat","516":"cradle","517":"crane","518":"crash helmet","519":"crate","520":"crib, cot","521":"Crock Pot","522":"croquet ball","523":"crutch","524":"cuirass","525":"dam, dike, dyke","526":"desk","527":"desktop computer","528":"dial telephone, dial phone","529":"diaper, nappy, napkin","530":"digital clock","531":"digital watch","532":"dining table, board","533":"dishrag, dishcloth","534":"dishwasher, dish washer, dishwashing machine","535":"disk brake, disc brake","536":"dock, dockage, docking facility","537":"dogsled, dog sled, dog sleigh","538":"dome","539":"doormat, welcome mat","540":"drilling platform, offshore rig","541":"drum, membranophone, tympan","542":"drumstick","543":"dumbbell","544":"Dutch oven","545":"electric fan, blower","546":"electric guitar","547":"electric locomotive","548":"entertainment center","549":"envelope","550":"espresso maker","551":"face powder","552":"feather boa, boa","553":"file, file cabinet, filing cabinet","554":"fireboat","555":"fire engine, fire truck","556":"fire screen, fireguard","557":"flagpole, flagstaff","558":"flute, transverse flute","559":"folding chair","560":"football helmet","561":"forklift","562":"fountain","563":"fountain pen","564":"four-poster","565":"freight car","566":"French horn, horn","567":"frying pan, frypan, skillet","568":"fur coat","569":"garbage truck, dustcart","570":"gasmask, respirator, gas helmet","571":"gas pump, gasoline pump, petrol pump, island dispenser","572":"goblet","573":"go-kart","574":"golf ball","575":"golfcart, golf cart","576":"gondola","577":"gong, tam-tam","578":"gown","579":"grand piano, grand","580":"greenhouse, nursery, glasshouse","581":"grille, radiator grille","582":"grocery store, grocery, food market, market","583":"guillotine","584":"hair slide","585":"hair spray","586":"half track","587":"hammer","588":"hamper","589":"hand blower, blow dryer, blow drier, hair dryer, hair drier","590":"hand-held computer, hand-held microcomputer","591":"handkerchief, hankie, hanky, hankey","592":"hard disc, hard disk, fixed disk","593":"harmonica, mouth organ, harp, mouth harp","594":"harp","595":"harvester, reaper","596":"hatchet","597":"holster","598":"home theater, home theatre","599":"honeycomb","600":"hook, claw","601":"hoopskirt, crinoline","602":"horizontal bar, high bar","603":"horse cart, horse-cart","604":"hourglass","605":"iPod","606":"iron, smoothing iron","607":"jack-o'-lantern","608":"jean, blue jean, denim","609":"jeep, landrover","610":"jersey, T-shirt, tee shirt","611":"jigsaw puzzle","612":"jinrikisha, ricksha, rickshaw","613":"joystick","614":"kimono","615":"knee pad","616":"knot","617":"lab coat, laboratory coat","618":"ladle","619":"lampshade, lamp shade","620":"laptop, laptop computer","621":"lawn mower, mower","622":"lens cap, lens cover","623":"letter opener, paper knife, paperknife","624":"library","625":"lifeboat","626":"lighter, light, igniter, ignitor","627":"limousine, limo","628":"liner, ocean liner","629":"lipstick, lip rouge","630":"Loafer","631":"lotion","632":"loudspeaker, speaker, speaker unit, loudspeaker system, speaker system","633":"loupe, jeweler's loupe","634":"lumbermill, sawmill","635":"magnetic compass","636":"mailbag, postbag","637":"mailbox, letter box","638":"maillot","639":"maillot, tank suit","640":"manhole cover","641":"maraca","642":"marimba, xylophone","643":"mask","644":"matchstick","645":"maypole","646":"maze, labyrinth","647":"measuring cup","648":"medicine chest, medicine cabinet","649":"megalith, megalithic structure","650":"microphone, mike","651":"microwave, microwave oven","652":"military uniform","653":"milk can","654":"minibus","655":"miniskirt, mini","656":"minivan","657":"missile","658":"mitten","659":"mixing bowl","660":"mobile home, manufactured home","661":"Model T","662":"modem","663":"monastery","664":"monitor","665":"moped","666":"mortar","667":"mortarboard","668":"mosque","669":"mosquito net","670":"motor scooter, scooter","671":"mountain bike, all-terrain bike, off-roader","672":"mountain tent","673":"mouse, computer mouse","674":"mousetrap","675":"moving van","676":"muzzle","677":"nail","678":"neck brace","679":"necklace","680":"nipple","681":"notebook, notebook computer","682":"obelisk","683":"oboe, hautboy, hautbois","684":"ocarina, sweet potato","685":"odometer, hodometer, mileometer, milometer","686":"oil filter","687":"organ, pipe organ","688":"oscilloscope, scope, cathode-ray oscilloscope, CRO","689":"overskirt","690":"oxcart","691":"oxygen mask","692":"packet","693":"paddle, boat paddle","694":"paddlewheel, paddle wheel","695":"padlock","696":"paintbrush","697":"pajama, pyjama, pj's, jammies","698":"palace","699":"panpipe, pandean pipe, syrinx","700":"paper towel","701":"parachute, chute","702":"parallel bars, bars","703":"park bench","704":"parking meter","705":"passenger car, coach, carriage","706":"patio, terrace","707":"pay-phone, pay-station","708":"pedestal, plinth, footstall","709":"pencil box, pencil case","710":"pencil sharpener","711":"perfume, essence","712":"Petri dish","713":"photocopier","714":"pick, plectrum, plectron","715":"pickelhaube","716":"picket fence, paling","717":"pickup, pickup truck","718":"pier","719":"piggy bank, penny bank","720":"pill bottle","721":"pillow","722":"ping-pong ball","723":"pinwheel","724":"pirate, pirate ship","725":"pitcher, ewer","726":"plane, carpenter's plane, woodworking plane","727":"planetarium","728":"plastic bag","729":"plate rack","730":"plow, plough","731":"plunger, plumber's helper","732":"Polaroid camera, Polaroid Land camera","733":"pole","734":"police van, police wagon, paddy wagon, patrol wagon, wagon, black Maria","735":"poncho","736":"pool table, billiard table, snooker table","737":"pop bottle, soda bottle","738":"pot, flowerpot","739":"potter's wheel","740":"power drill","741":"prayer rug, prayer mat","742":"printer","743":"prison, prison house","744":"projectile, missile","745":"projector","746":"puck, hockey puck","747":"punching bag, punch bag, punching ball, punchball","748":"purse","749":"quill, quill pen","750":"quilt, comforter, comfort, puff","751":"racer, race car, racing car","752":"racket, racquet","753":"radiator","754":"radio, wireless","755":"radio telescope, radio reflector","756":"rain barrel","757":"recreational vehicle, RV, R.V.","758":"reel","759":"reflex camera","760":"refrigerator, icebox","761":"remote control, remote","762":"restaurant, eating house, eating place, eatery","763":"revolver, six-gun, six-shooter","764":"rifle","765":"rocking chair, rocker","766":"rotisserie","767":"rubber eraser, rubber, pencil eraser","768":"rugby ball","769":"rule, ruler","770":"running shoe","771":"safe","772":"safety pin","773":"saltshaker, salt shaker","774":"sandal","775":"sarong","776":"sax, saxophone","777":"scabbard","778":"scale, weighing machine","779":"school bus","780":"schooner","781":"scoreboard","782":"screen, CRT screen","783":"screw","784":"screwdriver","785":"seat belt, seatbelt","786":"sewing machine","787":"shield, buckler","788":"shoe shop, shoe-shop, shoe store","789":"shoji","790":"shopping basket","791":"shopping cart","792":"shovel","793":"shower cap","794":"shower curtain","795":"ski","796":"ski mask","797":"sleeping bag","798":"slide rule, slipstick","799":"sliding door","800":"slot, one-armed bandit","801":"snorkel","802":"snowmobile","803":"snowplow, snowplough","804":"soap dispenser","805":"soccer ball","806":"sock","807":"solar dish, solar collector, solar furnace","808":"sombrero","809":"soup bowl","810":"space bar","811":"space heater","812":"space shuttle","813":"spatula","814":"speedboat","815":"spider web, spider's web","816":"spindle","817":"sports car, sport car","818":"spotlight, spot","819":"stage","820":"steam locomotive","821":"steel arch bridge","822":"steel drum","823":"stethoscope","824":"stole","825":"stone wall","826":"stopwatch, stop watch","827":"stove","828":"strainer","829":"streetcar, tram, tramcar, trolley, trolley car","830":"stretcher","831":"studio couch, day bed","832":"stupa, tope","833":"submarine, pigboat, sub, U-boat","834":"suit, suit of clothes","835":"sundial","836":"sunglass","837":"sunglasses, dark glasses, shades","838":"sunscreen, sunblock, sun blocker","839":"suspension bridge","840":"swab, swob, mop","841":"sweatshirt","842":"swimming trunks, bathing trunks","843":"swing","844":"switch, electric switch, electrical switch","845":"syringe","846":"table lamp","847":"tank, army tank, armored combat vehicle, armoured combat vehicle","848":"tape player","849":"teapot","850":"teddy, teddy bear","851":"television, television system","852":"tennis ball","853":"thatch, thatched roof","854":"theater curtain, theatre curtain","855":"thimble","856":"thresher, thrasher, threshing machine","857":"throne","858":"tile roof","859":"toaster","860":"tobacco shop, tobacconist shop, tobacconist","861":"toilet seat","862":"torch","863":"totem pole","864":"tow truck, tow car, wrecker","865":"toyshop","866":"tractor","867":"trailer truck, tractor trailer, trucking rig, rig, articulated lorry, semi","868":"tray","869":"trench coat","870":"tricycle, trike, velocipede","871":"trimaran","872":"tripod","873":"triumphal arch","874":"trolleybus, trolley coach, trackless trolley","875":"trombone","876":"tub, vat","877":"turnstile","878":"typewriter keyboard","879":"umbrella","880":"unicycle, monocycle","881":"upright, upright piano","882":"vacuum, vacuum cleaner","883":"vase","884":"vault","885":"velvet","886":"vending machine","887":"vestment","888":"viaduct","889":"violin, fiddle","890":"volleyball","891":"waffle iron","892":"wall clock","893":"wallet, billfold, notecase, pocketbook","894":"wardrobe, closet, press","895":"warplane, military plane","896":"washbasin, handbasin, washbowl, lavabo, wash-hand basin","897":"washer, automatic washer, washing machine","898":"water bottle","899":"water jug","900":"water tower","901":"whiskey jug","902":"whistle","903":"wig","904":"window screen","905":"window shade","906":"Windsor tie","907":"wine bottle","908":"wing","909":"wok","910":"wooden spoon","911":"wool, woolen, woollen","912":"worm fence, snake fence, snake-rail fence, Virginia fence","913":"wreck","914":"yawl","915":"yurt","916":"web site, website, internet site, site","917":"comic book","918":"crossword puzzle, crossword","919":"street sign","920":"traffic light, traffic signal, stoplight","921":"book jacket, dust cover, dust jacket, dust wrapper","922":"menu","923":"plate","924":"guacamole","925":"consomme","926":"hot pot, hotpot","927":"trifle","928":"ice cream, icecream","929":"ice lolly, lolly, lollipop, popsicle","930":"French loaf","931":"bagel, beigel","932":"pretzel","933":"cheeseburger","934":"hotdog, hot dog, red hot","935":"mashed potato","936":"head cabbage","937":"broccoli","938":"cauliflower","939":"zucchini, courgette","940":"spaghetti squash","941":"acorn squash","942":"butternut squash","943":"cucumber, cuke","944":"artichoke, globe artichoke","945":"bell pepper","946":"cardoon","947":"mushroom","948":"Granny Smith","949":"strawberry","950":"orange","951":"lemon","952":"fig","953":"pineapple, ananas","954":"banana","955":"jackfruit, jak, jack","956":"custard apple","957":"pomegranate","958":"hay","959":"carbonara","960":"chocolate sauce, chocolate syrup","961":"dough","962":"meat loaf, meatloaf","963":"pizza, pizza pie","964":"potpie","965":"burrito","966":"red wine","967":"espresso","968":"cup","969":"eggnog","970":"alp","971":"bubble","972":"cliff, drop, drop-off","973":"coral reef","974":"geyser","975":"lakeside, lakeshore","976":"promontory, headland, head, foreland","977":"sandbar, sand bar","978":"seashore, coast, seacoast, sea-coast","979":"valley, vale","980":"volcano","981":"ballplayer, baseball player","982":"groom, bridegroom","983":"scuba diver","984":"rapeseed","985":"daisy","986":"yellow lady's slipper, yellow lady-slipper, Cypripedium calceolus, Cypripedium parviflorum","987":"corn","988":"acorn","989":"hip, rose hip, rosehip","990":"buckeye, horse chestnut, conker","991":"coral fungus","992":"agaric","993":"gyromitra","994":"stinkhorn, carrion fungus","995":"earthstar","996":"hen-of-the-woods, hen of the woods, Polyporus frondosus, Grifola frondosa","997":"bolete","998":"ear, spike, capitulum","999":"toilet tissue, toilet paper, bathroom tissue"};

/***/ }),

/***/ "./src/app/imageupload/imageupload.component.css":
/*!*******************************************************!*\
  !*** ./src/app/imageupload/imageupload.component.css ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".total-upload-card{\r\n    background-color:  #607D8B;\r\n    color: lightgray;\r\n}\r\n\r\n.total-upload-card__title{\r\n    text-align: center;\r\n    font-family: \"Lato\", Arial, Helvetica, sans-serif;\r\n}\r\n\r\n.upload-card {\r\n    background-color:  #607D8B;\r\n    border: lightgray 2px solid;\r\n}\r\n\r\n.upload-card__instruction {\r\n    text-align: center;\r\n    font-size: 150%;\r\n    color: lightgray;\r\n    font-family: \"Lato\", Arial, Helvetica, sans-serif;\r\n}\r\n\r\n.upload-card__file-button {\r\n    text-align: center;\r\n}\r\n\r\n.upload-card__button-label {\r\n    font-family: \"Lato\", sans-serif;\r\n    font-size: 100%;\r\n    /* border: 1px solid rgb(75, 75, 97); */\r\n    display: inline-block;\r\n    padding: 24px 48px;\r\n    width: 160px;\r\n    cursor: pointer;\r\n    border: 3px solid lightgray;\r\n    color: lightgray;\r\n    background: #607D8B;\r\n    line-height: 20px;\r\n}\r\n\r\n.upload-card__button-label:hover{\r\n    /* background: rgb(124, 151, 165); */\r\n    cursor: pointer;\r\n}\r\n\r\n.upload-card__button-label:active{\r\n    background: rgb(146, 170, 182);\r\n}\r\n\r\n.button__icon {\r\n    padding-right: 10px;\r\n    padding-bottom: 6px;\r\n    /* background: red; */\r\n}\r\n\r\n.preview {\r\n    width: 100%;\r\n    text-align: center;\r\n    background: rgb(13, 33, 44);\r\n    border: 5px lightgray solid;\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n}\r\n\r\n.preview__no-files {\r\n    color: lightgray;\r\n    font-family: \"Lato\", Arial, Helvetica, sans-serif;\r\n}\r\n\r\n#file-upload {\r\n    display: none;\r\n}\r\n\r\n#webcam-upload {\r\n    display: none;\r\n}\r\n\r\n.model-select {\r\n    text-align: center;\r\n    color: white;\r\n    border: 3px solid lightgray;\r\n    width: 80%;\r\n}\r\n\r\n.upload-card__upload-button {\r\n    background: #607D8B;\r\n    border: 3px solid lightgray;\r\n    padding: 10px 50px;\r\n    font-size: 150%;\r\n    float: left;\r\n    color: lightgray;\r\n    font-family: \"Lato\", Arial, Helvetica, sans-serif;\r\n}\r\n\r\nmat-spinner{\r\n    float: right;\r\n}\r\n\r\n.result-card{\r\n    background-color: lightgray;\r\n    text-align: center;\r\n}\r\n\r\n.result-card__nothing-to-show{\r\n    color: rgb(35, 64, 78);\r\n    font-family: \"Lato\", Arial, Helvetica, sans-serif;\r\n}\r\n\r\n.result-card__results-list{\r\n    font-family: \"Lato\", Arial, Helvetica, sans-serif;\r\n    text-align: left;\r\n}\r\n\r\n.results__title {\r\n    color: rgb(35, 64, 78);\r\n    font-family: \"Lato\", Arial, Helvetica, sans-serif;\r\n}\r\n\r\n.table__container {\r\n    height: 400px;\r\n    overflow: auto;\r\n    margin: auto 10%;\r\n    text-align: left;\r\n}\r\n\r\n.results__table {\r\n    margin-right: 20%;\r\n    width: 100%;\r\n    background-color: #CFD8DC;\r\n}\r\n\r\n.table__string {\r\n    color: rgb(35, 64, 78);\r\n    font-family: \"Lato\", Arial, Helvetica, sans-serif;\r\n}\r\n\r\n.table__header {\r\n    background-color: #607D8B;\r\n    text-transform: capitalize;\r\n}\r\n\r\n.table__row {\r\n    background-color: rgb(228, 228, 228);\r\n}\r\n\r\n.table__row:hover {\r\n    background-color: lightgray;\r\n}\r\n\r\n.reload-upload{\r\n    border: 3px solid rgb(35, 64, 78);\r\n    color: rgb(35, 64, 78);\r\n    font-family: \"Lato\", Arial, Helvetica, sans-serif;\r\n    background-color: rgba(5,5,5,0);\r\n}\r\n"

/***/ }),

/***/ "./src/app/imageupload/imageupload.component.html":
/*!********************************************************!*\
  !*** ./src/app/imageupload/imageupload.component.html ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div>\r\n    <mat-card class=\"total-upload-card\">\r\n\r\n      <h1 class=\"total-upload-card__title\">Submit an Image</h1>\r\n      <mat-card color=\"primary\" class=\"upload-card\">\r\n        <mat-card-title class=\"upload-card__instruction\">{{instruction}}</mat-card-title>\r\n        <br>\r\n        <form class=\"form-horizontal\" id=\"imgSelectForm\">\r\n          <mat-grid-list cols=\"4\" rowHeight=\"100px\">\r\n\r\n            <mat-grid-tile [colspan]=1 [rowspan]=1>\r\n                <div class=\"upload-card__file-button\">\r\n                  <label for=\"file-upload\" class=\"upload-card__button-label\">\r\n                    <i class=\"material-icons button__icon\">photo_library</i>\r\n                    File Select\r\n                  </label>\r\n                  <input id=\"file-upload\" (change)=\"madeChange()\" type=\"file\" accept=\"image/*\"/>\r\n                </div>\r\n            </mat-grid-tile>\r\n            \r\n            <mat-grid-tile [colspan]=3 [rowspan]=3>\r\n                <div class=\"preview\">\r\n                  <h4 class=\"preview__no-files\">No files currently selected</h4>\r\n                </div>\r\n            </mat-grid-tile>\r\n\r\n            <mat-grid-tile [colspan]=1 [rowspan]=1>\r\n              <div>\r\n                <label for=\"webcam-upload\" class=\"upload-card__button-label\">\r\n                  <i class=\"material-icons button__icon\">photo_camera</i>\r\n                Webcam Capture\r\n                </label>\r\n                <button id=\"webcam-upload\" (click)=\"captureImage()\"></button>\r\n              </div>\r\n            </mat-grid-tile>\r\n            <br>\r\n            <mat-grid-tile [colspan]=1 [rowspan]=1>\r\n              <mat-select placeholder=\"Bramhope Classifier\" [(ngModel)]=\"modelNumber\" color=\"primary\" \r\n              class=\"model-select\" name=\"modelSelector\" (selectionChange)=\"changeSelectedModel()\">\r\n                <mat-option value=\"1\">Bramhope Classifier</mat-option>\r\n                <mat-option value=\"2\">General Classifier</mat-option>\r\n              </mat-select>\r\n          </mat-grid-tile>\r\n            <mat-grid-tile [colspan]=4 [rowspan]=1>\r\n                <div>\r\n                  <button mat-raised-button color=\"primary\" *ngIf=\"imgAvailable\" (click)=\"predictImage()\" \r\n                    class=\"upload-card__upload-button\" [disabled]=\"notReadyToPredict\" >{{ modelStatus }}</button>\r\n                  <mat-spinner [diameter]=\"30\" [style.display]=\"showSpinner ? 'block':'none'\"></mat-spinner>\r\n                </div>\r\n            </mat-grid-tile>\r\n            \r\n          </mat-grid-list>\r\n        </form>\r\n      </mat-card>\r\n      <br>\r\n\r\n      <mat-card class=\"result-card\">\r\n        <div>\r\n            <h1 class=\"results__title\">Classification Results</h1>\r\n            <a mat-raised-button *ngIf=\"resultPreds.length != 0\" (click)=\"reloadPage()\" class=\"reload-upload\" color=\"primary\">Classify another Image</a>     \r\n        </div>\r\n        <br>\r\n        <h4 class=\"result-card__nothing-to-show\" *ngIf=\"resultPreds.length == 0\">Nothing to show yet... Submit an Image!</h4>\r\n        <div class=\"table__container\" *ngIf=\"resultPreds.length != 0\">\r\n            <table *ngIf=\"resultPreds.length != 0\" mat-table [dataSource]=\"resultPreds\" class=\"results__table\">\r\n          \r\n              <ng-container class=\"table__header\" matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef>Class Name</th>\r\n                <td mat-cell class=\"table__string\" *matCellDef=\"let element\"> {{ element.name }}</td>\r\n              </ng-container>\r\n      \r\n              <ng-container class=\"table__header\" matColumnDef=\"likeliness\">\r\n                <th mat-header-cell *matHeaderCellDef>Likelihood</th>\r\n                <td mat-cell class=\"table__string\" *matCellDef=\"let element\"> {{ element.likeliness }}%</td>\r\n              </ng-container>\r\n\r\n              <ng-container class=\"table__header\" matColumnDef=\"link\">\r\n                <th mat-header-cell *matHeaderCellDef>Link To Store</th>\r\n                <td mat-cell class=\"table__string\" *matCellDef=\"let element\" >\r\n                  <a *ngIf=\"element.link\" href=\"{{ element.link }}\" target=\"_blank\">Go To Store</a>\r\n                </td>\r\n              </ng-container>\r\n      \r\n              <tr mat-header-row class=\"table__header\" *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n              <tr mat-row class=\"table__row\" *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                  \r\n            </table>\r\n        </div>\r\n        <br>              \r\n      </mat-card>\r\n    </mat-card>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/imageupload/imageupload.component.spec.ts":
/*!***********************************************************!*\
  !*** ./src/app/imageupload/imageupload.component.spec.ts ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var testing_1 = __webpack_require__(/*! @angular/core/testing */ "./node_modules/@angular/core/fesm5/testing.js");
var material_module_1 = __webpack_require__(/*! ./../material.module */ "./src/app/material.module.ts");
var imageupload_component_1 = __webpack_require__(/*! ./imageupload.component */ "./src/app/imageupload/imageupload.component.ts");
var platform_browser_1 = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
var model_loader_service_1 = __webpack_require__(/*! ../model/model-loader.service */ "./src/app/model/model-loader.service.ts");
var forms_1 = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
describe('ImageuploadComponent', function () {
    var component;
    var fixture;
    var previewEl, fileSelectEl, webcamButtonEl;
    var captureButton;
    var spy;
    beforeEach(testing_1.async(function () {
        testing_1.TestBed.configureTestingModule({
            declarations: [imageupload_component_1.ImageuploadComponent],
            imports: [
                material_module_1.MaterialModule,
                forms_1.FormsModule
            ]
        })
            .compileComponents();
    }));
    beforeEach(function () {
        fixture = testing_1.TestBed.createComponent(imageupload_component_1.ImageuploadComponent);
        component = fixture.componentInstance;
        previewEl = fixture.debugElement.query(platform_browser_1.By.css('.preview'));
        fileSelectEl = fixture.debugElement.query(platform_browser_1.By.css('#file-upload'));
        webcamButtonEl = fixture.debugElement.query(platform_browser_1.By.css('#webcam-upload'));
        captureButton = fixture.debugElement.query(platform_browser_1.By.css('button'));
        fixture.detectChanges();
    });
    afterEach(function () {
        previewEl = null;
        fileSelectEl = null;
        spy = null;
    });
    it('should create', testing_1.async(testing_1.inject([model_loader_service_1.ModelLoaderService], function (service) {
        expect(component).toBeTruthy();
    })));
    it('madeChange should be called when a file has been selected', function () {
        spy = spyOn(component, 'madeChange');
        fileSelectEl.triggerEventHandler('change', true);
        expect(spy).toHaveBeenCalled();
    });
    it('a message should be displayed if no file was selected', function () {
        spy = spyOn(component, 'updateInstruction');
        component.madeChange();
        fixture.detectChanges();
        expect(previewEl.children.length).toBe(1);
    });
    xit('an image should appear if a file was selected', function () {
        var mockBlob = new Blob([''], { type: 'image/png' });
        mockBlob['lastModifiedDate'] = '';
        mockBlob['name'] = 'fileName';
        var mockFile = mockBlob;
        fileSelectEl.nativeElement.setAttribute('file', mockFile);
        component.madeChange();
        fixture.detectChanges();
        expect(fileSelectEl.nativeElement.getAttribute('files.length')).toBeTruthy();
        expect(component.imgAvailable).toBeTruthy();
    });
    /**
     * Formatted File Size function
     */
    it('should return a formatted file size in bytes if small', function () {
        var size = 200;
        expect(component.formattedFileSize(size)).toBe('200 bytes');
    });
    it('should return a formatted file size in KB if medium', function () {
        var size = 1800;
        expect(component.formattedFileSize(size)).toBe('1.76KB');
    });
    it('should return a formatted file size in MB if large', function () {
        var size = 1800000;
        expect(component.formattedFileSize(size)).toBe('1.72MB');
    });
    /**
     * Webcam option
     */
    it('webcam should activate when Webcam Capture is clicked', function () {
        spy = spyOn(navigator.mediaDevices, 'getUserMedia');
        webcamButtonEl.triggerEventHandler('click', null);
        fixture.detectChanges();
        expect(navigator.mediaDevices.getUserMedia).toHaveBeenCalled();
    });
    it('video should display when Webcam Capture is clicked', function () {
        webcamButtonEl.triggerEventHandler('click', null);
        fixture.detectChanges();
        expect(previewEl.children.length).toBeTruthy();
    });
    it('video should display when Webcam Capture is clicked', function () {
        webcamButtonEl.triggerEventHandler('click', null);
        fixture.detectChanges();
        captureButton.triggerEventHandler('click', null);
        fixture.detectChanges();
        expect(previewEl.children.length).toBeTruthy();
    });
});


/***/ }),

/***/ "./src/app/imageupload/imageupload.component.ts":
/*!******************************************************!*\
  !*** ./src/app/imageupload/imageupload.component.ts ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * File Name:       imageupload.component
 * Version Number:  v1.3
 * Author:          Tobias Bester
 * Project Name:    Ninshiki
 * Organization:    Software Sharks
 * User Manual:     Refer to https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf
 * Update History:
 * ------------------------------------------
 * Date         Author        Description
 * 01/03/2018   Tobias        Created component
 * 03/07/2018   Tobias        Added Custom Image Upload Functionality
 * 12/09/2018   Tobias        Added model selection functionality
 * ------------------------------------------
 * Test Cases:      imageupload.component.spec.ts
 * Functional Description:
 *  Provides interface for user to select or capture an image and have the model predict the class of the
 *  object in the image.
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @ignore
*/
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var model_loader_service_1 = __webpack_require__(/*! ../model/model-loader.service */ "./src/app/model/model-loader.service.ts");
// import { AngularFireStorage } from '../../../node_modules/angularfire2/storage';
var ImageuploadComponent = /** @class */ (function () {
    /**
     * This constructor is only used to pass an instance of the HttpClient module.
     * @param http  HttpClient instance
     */
    function ImageuploadComponent(ml) {
        this.ml = ml;
        /**
         * Text displayed on the interface indicating what needs to be done
         */
        this.instruction = 'Click either the File Select or Webcam Capture button';
        /**
         * Determines whether the spinner next to the Submit button should be displayed or not
         */
        this.showSpinner = false;
        /**
         * Determines whether the video element should display the current webcam footage
         */
        this.streaming = false;
        /**
         * The video, canvas, image, and captureButton variables are used when dynamically creating elements for webcam capture
         */
        this.video = null;
        this.canvas = null;
        this.image = null;
        this.captureButton = null;
        /**
         * This variable is a reference to the file that will be uploaded, either selected or captured
         */
        this.imageToUpload = null;
        /**
         * Determines whether the file to upload was selected from the file explorer or captured via webcam
         */
        this.uploadCapture = false;
        /**
         * Determines if an image is available to be uploaded
         */
        this.imgAvailable = false;
        /**
         * Determines whether or not the Submit button should be displayed
         */
        this.displayUpload = false;
        /**
         * Indicates whether the model loader service has loaded a model into memory
         */
        this.modelLoaded = false;
        /**
         * An array used to store JSON objects related to the classes that were predicted. Includes class name, class likeliness,
         * and class catalogue links, if specified
         */
        this.resultPreds = [];
        /**
         * The header column text displayed in the results table
         */
        this.displayedColumns = ['name', 'likeliness', 'link'];
        /**
         * Determines whether a model is ready and whether an image has been predicted
         */
        this.notReadyToPredict = true;
        /**
         * The text displayed on the Submit button
         */
        this.modelStatus = 'Loading...';
        /**
         * Determines which model is to be used in the model loader service
         */
        this.modelNumber = 1;
    }
    /**
     * Upon initialization of the component, the model loader service loads the model. It then queries whether
     * the model has been loaded every 500 ms and if it is, it allows predicting to take place. This timed query
     * is due to the asynchronous nature of the TensorFlowJS loadModel method
     */
    ImageuploadComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.ml.loadModel();
        var modelLoaded = setInterval(function () {
            if (_this.ml.modelIsReady()) {
                _this.notReadyToPredict = false;
                clearInterval(modelLoaded);
                _this.modelStatus = 'Submit';
            }
        }, 500);
    };
    /**
     *  This function is triggered by the user selecting an image from the file explorer. It displays the selected
     *  image in the 'preview' element. This image element is added dynamically and is only done if there is an actual
     *  file selected. The selected image is also set as the file to be uploaded.
     */
    ImageuploadComponent.prototype.madeChange = function () {
        var uploadedFile = document.querySelector('input');
        var preview = document.querySelector('.preview');
        this.uploadCapture = false;
        this.imageToUpload = null;
        this.streaming = false;
        this.updateInstruction();
        while (preview.firstChild) {
            preview.removeChild(preview.firstChild);
        }
        if (uploadedFile.files.length === 0) {
            var newP = document.createElement('p');
            newP.textContent = 'No files currently selected';
            newP.style.setProperty('color', 'lightgray');
            preview.appendChild(newP);
            this.imgAvailable = false;
            this.imageToUpload = null;
            this.updateInstruction();
        }
        else {
            var newP = document.createElement('p');
            var fileSize = this.formattedFileSize(uploadedFile.files[0].size);
            newP.textContent = 'Name: ' + uploadedFile.files[0].name + ' Size: ' + fileSize;
            newP.style.setProperty('color', 'lightgray');
            newP.style.setProperty('margin', 'auto');
            newP.style.setProperty('font-family', '"Lato", Arial, Helvetica, sans-serif');
            var image = document.createElement('img');
            image.src = window.URL.createObjectURL(uploadedFile.files[0]);
            image.style.setProperty('height', '200px');
            this.image = image;
            preview.appendChild(newP);
            preview.appendChild(image);
            this.uploadCapture = false;
            this.imgAvailable = true;
            this.imageToUpload = uploadedFile.files[0];
            this.updateInstruction();
        }
    };
    /**
     * This function updates the instruction <p> element to display contextual information.
     */
    ImageuploadComponent.prototype.updateInstruction = function () {
        if (this.imgAvailable === false) {
            this.instruction = 'Click either the File Select or Webcam Capture button';
        }
        else {
            if (this.uploadCapture === false) {
                this.instruction = 'Click Submit to submit the selected image';
            }
            else {
                this.instruction = 'Click Capture to take a screenshot and then click Submit to submit the captured image';
            }
        }
    };
    /**
     * This function formats the size value of the selected file from bytes to a readable string.
     * @param size  This is the size in bytes of the selected file from madeChange().
     * @returns     Returns the size in bytes, KB, or MB depending on the value of size.
     */
    ImageuploadComponent.prototype.formattedFileSize = function (size) {
        if (size < 1024) {
            return size + ' bytes';
        }
        if (size < 1024 * 1024) {
            return ((size / 1024).toFixed(2) + 'KB');
        }
        if (size > 1024 * 1024) {
            return ((size / (1024 * 1024)).toFixed(2) + 'MB');
        }
    };
    /**
     * This function handles everything to do with the webcam capture option. It is called when the webcam button is clicked
     * and creates and maintains webcam footage in a video element. Allows the user to capture an image from the webcam
     * recording to upload.
     */
    ImageuploadComponent.prototype.captureImage = function () {
        var preview = document.querySelector('.preview');
        this.imgAvailable = false;
        this.displayUpload = false;
        this.updateInstruction();
        while (preview.firstChild) {
            preview.removeChild(preview.firstChild);
        }
        this.imageToUpload = null;
        this.uploadCapture = true;
        // Video element
        this.video = document.createElement('video');
        this.video.textContent = 'Video stream not available';
        this.video.style.setProperty('float', 'left');
        this.video.style.setProperty('text-align', 'center');
        // Capture button element
        this.captureButton = document.createElement('button');
        this.captureButton.textContent = 'CAPTURE';
        this.captureButton.style.setProperty('padding', '16px 32px');
        this.captureButton.style.setProperty('border', '3px lightgray solid');
        this.captureButton.style.setProperty('color', 'lightgray');
        this.captureButton.style.setProperty('background-color', 'rgba(5,5,5,0)');
        this.captureButton.style.setProperty('font-family', '"Lato", Arial, Helvetica, sans-serif');
        this.captureButton.style.setProperty('margin-left', '20px');
        this.captureButton.onmouseover = function () {
            this.style.setProperty('cursor', 'pointer');
            this.style.setProperty('background-color', 'rgb(33, 74, 95)');
        };
        this.captureButton.onmouseleave = function () {
            this.style.setProperty('cursor', 'default');
            this.style.setProperty('background-color', 'rgba(5,5,5,0)');
        };
        var br = document.createElement('br');
        // Canvas element that draws screenshot
        this.canvas = document.createElement('canvas');
        this.canvas.style.setProperty('display', 'none');
        this.canvas.style.setProperty('float', 'right');
        // Image element displaying saved screenshot
        this.image = document.createElement('img');
        this.startup(this.video, this.canvas, this.image, this.captureButton);
        preview.appendChild(this.video);
        preview.appendChild(this.canvas);
        preview.appendChild(this.image);
        preview.appendChild(br);
        preview.appendChild(this.captureButton);
        this.imgAvailable = true;
        this.updateInstruction();
    };
    /**
     * This function carries out the process of displaying the webcam footage and saving captured images.
     * @param video   the video element that displays the webcam footage
     * @param canvas  the canvas element that draws the capture webcam image upon clicking Capture
     * @param image   the image element that displays the image drawn by the canvas
     * @param captureButton   the button element that allows the user to capture the webcam footage
     */
    ImageuploadComponent.prototype.startup = function (video, canvas, image, captureButton) {
        var width = 320;
        var height = 0;
        navigator.mediaDevices.getUserMedia({ video: true })
            .then(function (stream) {
            video.srcObject = stream;
            video.play();
        })
            .catch(function (err) {
            console.log('An error has occured! ' + err);
        });
        video.addEventListener('canplay', function (ev) {
            if (!this.streaming) {
                height = video.videoHeight / (video.videoWidth / width);
                video.setAttribute('width', width);
                video.setAttribute('height', height);
                canvas.setAttribute('width', width);
                canvas.setAttribute('height', height);
                this.streaming = true;
            }
        }, false);
        captureButton.onclick = function () {
            var context = canvas.getContext('2d');
            var data = null;
            if (width && height) {
                this.uploadCapture = true;
                canvas.width = width;
                canvas.height = height;
                context.drawImage(video, 0, 0, width, height);
                data = canvas.toDataURL('image/png');
                image.src = data;
            }
            else {
                // this.clearPhoto(canvas, image);
            }
        };
        this.clearPhoto(canvas, image);
    };
    /**
     * This function makes the canvas white if no image has been captured yet.
     * @param canvas Same as the startup function
     * @param image Same as the startup function
     */
    ImageuploadComponent.prototype.clearPhoto = function (canvas, image) {
        var context3 = canvas.getContext('2d');
        context3.fillStyle = 'rgb(207, 207, 207)';
        context3.fillRect(0, 0, canvas.width, canvas.height);
        var dataF = canvas.toDataURL('image/png');
        image.setAttribute('src', dataF);
        this.imgAvailable = false;
    };
    /**
     * This function is required for the browser to make use of the device's webcam.
     */
    ImageuploadComponent.prototype.hasGetUserMedia = function () {
        return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);
    };
    /**
     * Called when the Submit button is clicked. Calls the model loader service's predictImage method,
     * then maps the predictions and fills the resultPreds array, so that the results table is updated
     */
    ImageuploadComponent.prototype.predictImage = function () {
        var _this = this;
        // Spinner is not displayed due to async issues or not being able to figure it out
        var updateStatus = function (txt) {
            _this.modelStatus = txt;
            _this.showSpinner = true;
        };
        updateStatus('Predicting...');
        this.ml.predictImage(this.image)
            .then(function (predictions) {
            _this.showSpinner = false;
            _this.resultPreds = _this.ml.mapPredictions(predictions);
            _this.modelStatus = 'Submit';
            var el = document.querySelector('.result-card');
            el.scrollIntoView({ behavior: 'smooth' });
        })
            .catch(function (error) {
            console.error('Error: ' + error);
            _this.showSpinner = false;
        });
    };
    /**
     * Called when the select element is changed. The model loader service methods are called to change the
     * selected model and load it into memory
     */
    ImageuploadComponent.prototype.changeSelectedModel = function () {
        var _this = this;
        this.ml.changeModel(this.modelNumber);
        this.notReadyToPredict = true;
        this.modelStatus = 'Loading...';
        this.ml.loadModel();
        var modelLoaded = setInterval(function () {
            if (_this.ml.modelIsReady()) {
                _this.notReadyToPredict = false;
                clearInterval(modelLoaded);
                _this.modelStatus = 'Submit';
            }
        }, 500);
    };
    /**
     * This function scrolls up to the Image Submit section of the page
     */
    ImageuploadComponent.prototype.reloadPage = function () {
        return __awaiter(this, void 0, void 0, function () {
            var el;
            return __generator(this, function (_a) {
                el = document.querySelector('.upload-card__instruction');
                el.scrollIntoView({ behavior: 'smooth' });
                return [2 /*return*/];
            });
        });
    };
    ImageuploadComponent = __decorate([
        core_1.Component({
            selector: 'app-imageupload',
            template: __webpack_require__(/*! ./imageupload.component.html */ "./src/app/imageupload/imageupload.component.html"),
            styles: [__webpack_require__(/*! ./imageupload.component.css */ "./src/app/imageupload/imageupload.component.css")]
        }),
        __metadata("design:paramtypes", [model_loader_service_1.ModelLoaderService])
    ], ImageuploadComponent);
    return ImageuploadComponent;
}());
exports.ImageuploadComponent = ImageuploadComponent;


/***/ }),

/***/ "./src/app/material.module.ts":
/*!************************************!*\
  !*** ./src/app/material.module.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var animations_1 = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm5/animations.js");
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var common_1 = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
var material_1 = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
var material_2 = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
var material_3 = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
var MaterialModule = /** @class */ (function () {
    function MaterialModule() {
    }
    MaterialModule = __decorate([
        core_1.NgModule({
            imports: [
                common_1.CommonModule,
                material_1.MatButtonModule
            ],
            exports: [
                material_1.MatButtonModule,
                material_1.MatToolbarModule,
                material_2.MatCardModule,
                material_3.MatProgressSpinnerModule,
                material_2.MatInputModule,
                material_2.MatListModule,
                material_2.MatDividerModule,
                material_3.MatGridListModule,
                material_2.MatTableModule,
                animations_1.BrowserAnimationsModule,
                material_2.MatSelectModule,
                material_3.MatIconModule
            ],
            declarations: [],
            schemas: [core_1.NO_ERRORS_SCHEMA]
        })
    ], MaterialModule);
    return MaterialModule;
}());
exports.MaterialModule = MaterialModule;


/***/ }),

/***/ "./src/app/model/model-loader.service.spec.ts":
/*!****************************************************!*\
  !*** ./src/app/model/model-loader.service.spec.ts ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var testing_1 = __webpack_require__(/*! @angular/core/testing */ "./node_modules/@angular/core/fesm5/testing.js");
var model_loader_service_1 = __webpack_require__(/*! ./model-loader.service */ "./src/app/model/model-loader.service.ts");
describe('ModelLoaderService', function () {
    beforeEach(function () {
        testing_1.TestBed.configureTestingModule({
            providers: [model_loader_service_1.ModelLoaderService]
        });
    });
    it('should be created', testing_1.inject([model_loader_service_1.ModelLoaderService], function (service) {
        expect(service).toBeTruthy();
    }));
    it('should return false if model is not ready', testing_1.inject([model_loader_service_1.ModelLoaderService], function (service) {
        service.model = null;
        expect(service.modelIsReady()).toBeFalsy();
    }));
    it('should load the model correctly', testing_1.inject([model_loader_service_1.ModelLoaderService], function (service) {
        service.loadModel()
            .then(function () {
            expect(service.modelIsReady()).toBeTruthy();
        });
    }));
    it('should change model correctly', testing_1.inject([model_loader_service_1.ModelLoaderService], function (service) {
        service.changeModel(2);
        expect(service.modelNumber).toEqual(2);
    }));
});


/***/ }),

/***/ "./src/app/model/model-loader.service.ts":
/*!***********************************************!*\
  !*** ./src/app/model/model-loader.service.ts ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * File Name:       model-loader.service
 * Version Number:  v1.1
 * Author:          Tobias Bester
 * Project Name:    Ninshiki
 * Organization:    Software Sharks
 * User Manual:     Refer to https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf
 * Update History:
 * ------------------------------------------
 * Date         Author        Description
 * 14/08/2018   Tobias        Created service
 * ------------------------------------------
 * Test Cases:      model-loader.service.spec.ts
 * Functional Description:
 *  Completes all actions related to the image prediction model, including loading the model and predicting images.
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @ignore
*/
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var tf = __webpack_require__(/*! @tensorflow/tfjs */ "./node_modules/@tensorflow/tfjs/dist/tf.esm.js");
var ModelLoaderService = /** @class */ (function () {
    /**
     * Once this service is called, it checks if a model has been loaded
     */
    function ModelLoaderService() {
        /**
         * The TensorFlowJS Model, which is loaded from a Google Cloud Storage bucket as a JSON file and weight shards
         */
        this.model = null;
        /**
         * Specifies the different models that can be used, including their name, the URL of the Google Storage bucket in which
         * they are called from, the number of classes that it can predict from, and whether the model has catalogue links, as is the
         * case with the Bramhope model. Also includes the classes JSON file with the model's corresponding class labels
         */
        this.modelType = [{
                'name': 'bramhope',
                'url': 'https://storage.googleapis.com/testproject-ee885.appspot.com/mobilenet_model/model.json',
                'classJson': 'classes.json',
                'numClasses': 57,
                'hasLinks': false
            },
            {
                'name': 'bramhope',
                'url': 'https://storage.googleapis.com/testproject-ee885.appspot.com/bramhope_mobilenet_model/model.json',
                'classJson': 'bramhope_classes.json',
                'numClasses': 53,
                'hasLinks': true
            },
            {
                'name': 'imagenet',
                'url': 'https://storage.googleapis.com/tfjs-models/tfjs/mobilenet_v1_0.25_224/model.json',
                'classJson': 'imagenet_classes.json',
                'numClasses': 1000,
                'hasLinks': false
            }
        ];
        /**
         * An array used to store JSON objects related to the classes that were predicted. Includes class name, class likeliness,
         * and class catalogue links, if specified
         */
        this.resultPreds = [];
        /**
         * Determines which model is to be loaded and used to make predictions
         */
        this.modelNumber = 1;
        if (this.modelIsReady() === true) {
            console.log('Service has model ready');
        }
        else {
            console.log('Service is stil loading model');
        }
    }
    /**
     * Loads the TensorFlowJS model from the specified URL by using the tf.loadModel. It then warms up the model
     * by predicting on a blank image. This function only loads a model if one has not been loaded already
     */
    ModelLoaderService.prototype.loadModel = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, err_1;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.modelIsReady()) return [3 /*break*/, 1];
                        console.log('Model is already loaded');
                        return [3 /*break*/, 4];
                    case 1:
                        _b.trys.push([1, 3, , 4]);
                        _a = this;
                        return [4 /*yield*/, tf.loadModel(this.modelType[this.modelNumber].url)];
                    case 2:
                        _a.model = _b.sent();
                        // Warm up model
                        this.model.predict(tf.zeros([1, 224, 224, 3])).dispose();
                        console.log('Model Loaded from service!');
                        return [3 /*break*/, 4];
                    case 3:
                        err_1 = _b.sent();
                        console.error('Error obtained: ' + err_1);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Checks if the model is ready to be used
     * @returns   True if a TensorFlowJS model is loaded into memory. False if not
     */
    ModelLoaderService.prototype.modelIsReady = function () {
        console.log('Checking if the model is ready');
        if (this.model == null) {
            return false;
        }
        else {
            return true;
        }
    };
    /**
     * This is used to change the selected model. It does not load the model into memory but instead sets the model
     * in memory to null
     * @param modelNum  Specifies which model is to be loaded
     */
    ModelLoaderService.prototype.changeModel = function (modelNum) {
        if (this.modelNumber === modelNum) {
            console.log('Model already loaded');
            return;
        }
        this.modelNumber = modelNum;
        this.model = null;
    };
    /**
     * Performs a set of TensorFlowJS operations that result in a list of predicted classes of an image
     * @param image   HTMLImageElement containing the image to be predicted
     * @returns   A list of predictions where each element is the predicted likeliness of the corresponding model class
     */
    ModelLoaderService.prototype.predictImage = function (image) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            var predictedClass, classId;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        predictedClass = tf.tidy(function () {
                            var raw = tf.fromPixels(image, 3);
                            var cropped = _this.cropImage(raw);
                            // 224,224 is the required size for the MobileNet model
                            var resized = tf.image.resizeBilinear(cropped, [224, 224]);
                            var batchedImage = resized.expandDims(0);
                            var img = batchedImage.toFloat().div(tf.scalar(127)).sub(tf.scalar(1));
                            var predictions = _this.model.predict(img);
                            return predictions;
                        });
                        return [4 /*yield*/, predictedClass.data()];
                    case 1:
                        classId = (_a.sent());
                        // predictedClass.dispose();
                        return [2 /*return*/, classId];
                }
            });
        });
    };
    /**
     * Called by the predictImage function, this crops the raw image pixel data to a smaller
     * size so that it can be resized later
     * @param img   The raw image pixel data as returned by tf.fromPixels
     * @returns   The raw pixel data of the cropped image
     */
    ModelLoaderService.prototype.cropImage = function (img) {
        var size = Math.min(img.shape[0], img.shape[1]);
        var centerHeight = img.shape[0] / 2;
        var beginHeight = centerHeight - (size / 2);
        var centerWidth = img.shape[1] / 2;
        var beginWidth = centerWidth - (size / 2);
        return img.slice([beginHeight, beginWidth, 0], [size, size, 3]);
    };
    /**
     * Maps the predictions returned from the predictImage function to the corresponding class labels in
     * the classes JSON file. Then the classes are sorted by decreasing likeliness and the classes with a
     * likeliness lower than 0.001% are cut off
     * @param classPreds  tf.Tensor.data  The list of predictions returned by the predictImage function
     * @returns   An array of JSON objects of the model classes and their associated prediction likeliness
     */
    ModelLoaderService.prototype.mapPredictions = function (classPreds) {
        console.log('Mapping predictions...');
        var classesJson = __webpack_require__("./src/app/imageupload/classes sync recursive ^\\.\\/.*$")("./" + this.modelType[this.modelNumber].classJson);
        var numClasses = classPreds.length;
        this.resultPreds = [];
        var linkExists = this.modelHasLinks();
        for (var i = 0; i < numClasses; i++) {
            // tslint:disable-next-line:triple-equals
            if (this.modelNumber == 2) {
                // Use if the classes json is in the plain format
                this.resultPreds[i] = {};
                this.resultPreds[i].name = classesJson[i];
                this.resultPreds[i].likeliness = (classPreds[i] * 100).toFixed(4);
            }
            else {
                // Used if the classes json is in the custom format
                this.resultPreds[i] = {};
                this.resultPreds[i].id = classesJson.classes[i].id;
                this.resultPreds[i].first = classesJson.classes[i].first;
                this.resultPreds[i].name = classesJson.classes[i].name;
                this.resultPreds[i].likeliness = (classPreds[i] * 100).toFixed(4);
                if (linkExists) {
                    this.resultPreds[i].link = classesJson.classes[i].link;
                }
            }
        }
        this.sortPreds();
        this.processResultNames();
        return this.resultPreds;
    };
    /**
     * Called by mapPredictions in order to sort the classes by likeliness
    */
    ModelLoaderService.prototype.sortPreds = function () {
        this.resultPreds.sort(function (a, b) {
            return b.likeliness - a.likeliness;
        });
    };
    /**
     * Checks whether the selected model contains catalogue links
     * @returns   True if the model has links, false if not
     */
    ModelLoaderService.prototype.modelHasLinks = function () {
        return this.modelType[this.modelNumber].hasLinks;
    };
    /**
     * Formats the class labels to a more readable format and slices off classes with a likeliness lower
     * than 0.001%
     * @returns   Sliced array of processed classes
     */
    ModelLoaderService.prototype.processResultNames = function () {
        var _this = this;
        this.resultPreds.forEach(function (element, index) {
            element.name = element.name.replace(/_/g, ' ');
            element.name = element.name.charAt(0).toUpperCase() + element.name.slice(1);
            if (element.likeliness < 0.001) {
                _this.resultPreds = _this.resultPreds.slice(0, index);
            }
        });
    };
    ModelLoaderService = __decorate([
        core_1.Injectable({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [])
    ], ModelLoaderService);
    return ModelLoaderService;
}());
exports.ModelLoaderService = ModelLoaderService;


/***/ }),

/***/ "./src/app/utilities/utilities.component.css":
/*!***************************************************!*\
  !*** ./src/app/utilities/utilities.component.css ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".total-utilities-card{\r\n    background-color: #607D8B;\r\n}\r\n\r\n.utilcard__title{\r\n    color: lightgray;\r\n    text-align: center;\r\n    font-family: Lato, Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\r\n}\r\n\r\n.tally-upper-tile {\r\n    text-align: center;\r\n}\r\n\r\n.tally-upper-card{\r\n    background-color:  #607D8B;\r\n    border: lightgray 2px solid;\r\n    color: lightgray;\r\n    text-align: center;\r\n}\r\n\r\n.tuc__title {\r\n    font-family: Lato, Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\r\n    color: lightgray;\r\n}\r\n\r\n.tuc__container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n}\r\n\r\n.tuc__input-container {\r\n    width: 25%;\r\n    background-color: lightgray;\r\n    border: solid 4px rgb(13, 33, 44);\r\n}\r\n\r\n.tally-upper-card__input-field{\r\n    width: 100%;\r\n}\r\n\r\n/* \r\n.tally-upper-card__input-field{\r\n    width: 70%;\r\n} */\r\n\r\n.tally-upper-card__amount-result{\r\n    background-color: lightgray;\r\n}\r\n\r\n.tuc__icon {\r\n    width: 30px;\r\n    height: 30px;\r\n}\r\n\r\n.tally-upper-card__result-title {\r\n    color: rgb(13, 33, 44);\r\n    font-family: Lato, Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\r\n}"

/***/ }),

/***/ "./src/app/utilities/utilities.component.html":
/*!****************************************************!*\
  !*** ./src/app/utilities/utilities.component.html ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card class=\"total-utilities-card\">\r\n  <h1 class=\"utilcard__title\">Tools</h1>\r\n      <mat-card class=\"tally-upper-card\">\r\n        <h2 class=\"tuc__title\">Item Amount Calculator</h2>\r\n        <mat-card-subtitle class=\"tuc__title\">Enter the values as instructed. Use the same measurement units (e.g. Kg)</mat-card-subtitle>\r\n        <div class=\"tuc__container\">\r\n          <mat-card class=\"tuc__input-container\">\r\n              <mat-form-field class=\"tally-upper-card__input-field\" appearance=\"outline\" color=\"primary\">\r\n                <mat-label>Single Item</mat-label>\r\n                <input matInput id=\"single-weight\" type=\"number\" placeholder=\"Weight of SINGLE Item\" [(ngModel)]=\"single_item\">\r\n                <img class=\"tuc__icon\" matSuffix src=\"../../assets/icons/single_item.svg\">\r\n                <mat-hint>Enter the weight of a single item</mat-hint>\r\n              </mat-form-field>\r\n          </mat-card>\r\n          <mat-card class=\"tuc__input-container\">\r\n              <mat-form-field class=\"tally-upper-card__input-field\" appearance=\"outline\" color=\"primary\">\r\n                <mat-label>Empty Container</mat-label>\r\n                <input matInput id=\"single-weight\" type=\"number\" placeholder=\"Weight of EMPTY Container\" [(ngModel)]=\"empty_bucket\" >\r\n                <img class=\"tuc__icon\" matSuffix src=\"../../assets/icons/empty_bucket.svg\">\r\n                <mat-hint>Enter the weight of an empty container</mat-hint>\r\n              </mat-form-field>\r\n          </mat-card>\r\n          <mat-card class=\"tuc__input-container\">\r\n              <mat-form-field class=\"tally-upper-card__input-field\" appearance=\"outline\" color=\"primary\">\r\n                <mat-label>Filled Container</mat-label>\r\n                <input matInput id=\"filled-weight\" type=\"number\" placeholder=\"Weight of FILLED Container\" [(ngModel)]=\"filled_bucket\">\r\n                <img class=\"tuc__icon\" matSuffix src=\"../../assets/icons/filled_bucket.svg\">\r\n                <mat-hint>Enter the weight of a filled container</mat-hint>\r\n              </mat-form-field>\r\n          </mat-card>\r\n        </div>\r\n        <br>\r\n        <mat-card class=\"tally-upper-card__amount-result\">\r\n            <!-- Math.floor((filled_bucket - empty_bucket)/single_item) -->\r\n          <h2 class=\"tally-upper-card__result-title\">{{ result() }}</h2>\r\n        </mat-card>\r\n      </mat-card>\r\n</mat-card>\r\n"

/***/ }),

/***/ "./src/app/utilities/utilities.component.spec.ts":
/*!*******************************************************!*\
  !*** ./src/app/utilities/utilities.component.spec.ts ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var material_module_1 = __webpack_require__(/*! ./../material.module */ "./src/app/material.module.ts");
var testing_1 = __webpack_require__(/*! @angular/core/testing */ "./node_modules/@angular/core/fesm5/testing.js");
var forms_1 = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
var utilities_component_1 = __webpack_require__(/*! ./utilities.component */ "./src/app/utilities/utilities.component.ts");
describe('UtilitiesComponent', function () {
    var component;
    var fixture;
    beforeEach(testing_1.async(function () {
        testing_1.TestBed.configureTestingModule({
            declarations: [utilities_component_1.UtilitiesComponent],
            imports: [
                material_module_1.MaterialModule,
                forms_1.FormsModule
            ]
        })
            .compileComponents();
    }));
    beforeEach(function () {
        fixture = testing_1.TestBed.createComponent(utilities_component_1.UtilitiesComponent);
        component = fixture.componentInstance;
        fixture.detectChanges();
    });
    it('should create', function () {
        expect(component).toBeTruthy();
    });
});


/***/ }),

/***/ "./src/app/utilities/utilities.component.ts":
/*!**************************************************!*\
  !*** ./src/app/utilities/utilities.component.ts ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * File Name:       utilities.component
 * Version Number:  v1.0
 * Author:          Tobias Bester
 * Project Name:    Ninshiki
 * Organization:    Software Sharks
 * User Manual:     Refer to https://github.com/OrishaOrrie/SoftwareSharks/blob/master/Documentation/User%20Manual.pdf
 * Update History:
 * ------------------------------------------
 * Date         Author        Description
 * 01/03/2018   Tobias        Created components
 * ------------------------------------------
 * Test Cases:      utilities.component.spec.ts
 * Functional Description:
 *  Provides utilites such as an item weight calculator. More to be added in future releases.
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var UtilitiesComponent = /** @class */ (function () {
    function UtilitiesComponent() {
        var _this = this;
        // Filled bucket - empty bucket = weight of all items
        // weight of all items / single item weight = num items
        /**
         * The weight value of an individual item
         */
        this.single_item = 1.0;
        /**
         * The weight value of an empty bucket
         */
        this.empty_bucket = 2.0;
        /**
         * The weight value of a bucket filled with items
         */
        this.filled_bucket = 10.0;
        /** The Number of Items is calculated by taking the weight of the items excluding the bucket
         *  dividing it by the weight of a single item.
         */
        /**
         * Math object to make use of the floor function
         */
        this.Math = Math;
        this.result = (function () {
            if (_this.empty_bucket > _this.filled_bucket) {
                return 'Empty bucket cannot weigh more than a filled bucket';
            }
            if (!_this.empty_bucket || !_this.filled_bucket || !_this.single_item) {
                return 'Weight inputs cannot be empty';
            }
            if (_this.empty_bucket <= 0 || _this.filled_bucket <= 0 || _this.single_item <= 0) {
                return 'Weight value must be a positive value';
            }
            return 'Number of items: ' + Math.floor((_this.filled_bucket - _this.empty_bucket) / _this.single_item);
        });
    }
    UtilitiesComponent.prototype.ngOnInit = function () {
    };
    UtilitiesComponent = __decorate([
        core_1.Component({
            selector: 'app-utilities',
            template: __webpack_require__(/*! ./utilities.component.html */ "./src/app/utilities/utilities.component.html"),
            styles: [__webpack_require__(/*! ./utilities.component.css */ "./src/app/utilities/utilities.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], UtilitiesComponent);
    return UtilitiesComponent;
}());
exports.UtilitiesComponent = UtilitiesComponent;


/***/ }),

/***/ "./src/test.ts":
/*!*********************!*\
  !*** ./src/test.ts ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// This file is required by karma.conf.js and loads recursively all the .spec and framework files
Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(/*! zone.js/dist/zone-testing */ "./node_modules/zone.js/dist/zone-testing.js");
var testing_1 = __webpack_require__(/*! @angular/core/testing */ "./node_modules/@angular/core/fesm5/testing.js");
var testing_2 = __webpack_require__(/*! @angular/platform-browser-dynamic/testing */ "./node_modules/@angular/platform-browser-dynamic/fesm5/testing.js");
// First, initialize the Angular testing environment.
testing_1.getTestBed().initTestEnvironment(testing_2.BrowserDynamicTestingModule, testing_2.platformBrowserDynamicTesting());
// Then we find all the tests.
var context = __webpack_require__("./src sync recursive \\.spec\\.ts$");
// And load the modules.
context.keys().map(context);


/***/ }),

/***/ 0:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 1:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2:
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 3:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,