{"version":3,"sources":["../../../src/plugins/Dashboard/index.js"],"names":["Plugin","require","Translator","dragDrop","DashboardUI","StatusBar","Informer","ThumbnailGenerator","findAllDOMElements","toArray","prettyBytes","defaultTabIcon","FOCUSABLE_ELEMENTS","module","exports","uppy","opts","id","title","type","defaultLocale","strings","selectToUpload","closeModal","upload","importFrom","dashboardWindowTitle","dashboardTitle","copyLinkToClipboardSuccess","copyLinkToClipboardFallback","copyLink","fileSource","done","name","removeFile","editFile","editing","finishEditingFile","localDisk","myDevice","dropPasteImport","dropPaste","browse","fileProgress","numberOfSelectedFiles","uploadAllNewFiles","emptyFolderAdded","uploadXFiles","uploadXNewFiles","folderAdded","defaultOptions","target","metaFields","trigger","inline","width","height","thumbnailWidth","showProgressDetails","hideUploadButton","hideProgressAfterFinish","note","closeModalOnClickOutside","disableStatusBar","disableInformer","disableThumbnailGenerator","disablePageScrollWhenModalOpen","onRequestCloseModal","locale","translator","i18n","translate","bind","openModal","requestCloseModal","isModalOpen","addTarget","hideAllPanels","showPanel","getFocusableNodes","setFocusToFirstNode","maintainFocus","initEvents","onKeydown","handleClickOutside","handleFileCard","handleDrop","handlePaste","handleInputChange","updateDashboardElWidth","render","install","plugin","callerPluginId","constructor","callerPluginName","callerPluginType","msg","log","state","getPluginState","newTargets","targets","slice","push","setPluginState","el","activePanel","filter","nodes","querySelectorAll","Object","keys","map","key","focusableNodes","length","focus","event","focusedItemIndex","indexOf","document","activeElement","shiftKey","preventDefault","isHidden","savedScrollPosition","window","scrollY","savedActiveElement","body","classList","add","remove","keyCode","ev","files","clipboardData","items","forEach","file","kind","blob","getAsFile","info","addFile","source","data","catch","showModalTrigger","addEventListener","removeDragDropListener","on","removeEvents","removeEventListener","off","dashboardEl","querySelector","offsetWidth","containerWidth","fileId","fileCardFor","pluginState","newFiles","progress","uploadStarted","inProgressFiles","uploadComplete","isPaused","inProgressFilesArray","totalSize","totalUploadedSize","bytesTotal","bytesUploaded","attachRenderFunctionToTarget","getPlugin","icon","isSupported","acquirers","progressindicators","startUpload","err","stack","message","cancelUpload","fileID","emit","showFileCard","fileCardDone","meta","setFileMeta","modal","totalFileCount","totalProgress","autoProceed","resumableUploads","capabilities","pauseUpload","pauseResume","retryUpload","maxWidth","maxHeight","currentWidth","isWide","discoverProviderPlugins","iteratePlugins","mount","plugins","pluginID","use","hideAfterFinish","uninstall","informer","removePlugin","statusBar","thumbnail","unmount"],"mappings":";;;;;;;;AAAA,IAAMA,SAASC,QAAQ,mBAAR,CAAf;AACA,IAAMC,aAAaD,QAAQ,uBAAR,CAAnB;AACA,IAAME,WAAWF,QAAQ,WAAR,CAAjB;AACA,IAAMG,cAAcH,QAAQ,aAAR,CAApB;AACA,IAAMI,YAAYJ,QAAQ,cAAR,CAAlB;AACA,IAAMK,WAAWL,QAAQ,aAAR,CAAjB;AACA,IAAMM,qBAAqBN,QAAQ,uBAAR,CAA3B;;eACwCA,QAAQ,kBAAR,C;IAAhCO,kB,YAAAA,kB;IAAoBC,O,YAAAA,O;;AAC5B,IAAMC,cAAcT,QAAQ,gBAAR,CAApB;;gBAC2BA,QAAQ,SAAR,C;IAAnBU,c,aAAAA,c;;AAER;AACA;AACA;;;AACA,IAAMC,qBAAqB,CACzB,SADyB,EAEzB,YAFyB,EAGzB,+DAHyB,EAIzB,2CAJyB,EAKzB,6CALyB,EAMzB,2CANyB,EAOzB,QAPyB,EAQzB,QARyB,EASzB,OATyB,EAUzB,mBAVyB,EAWzB,iCAXyB,CAA3B;;AAcA;;;AAGAC,OAAOC,OAAP;AAAA;;AACE,qBAAaC,IAAb,EAAmBC,IAAnB,EAAyB;AAAA;;AAAA,iDACvB,mBAAMD,IAAN,EAAYC,IAAZ,CADuB;;AAEvB,UAAKC,EAAL,GAAU,MAAKD,IAAL,CAAUC,EAAV,IAAgB,WAA1B;AACA,UAAKC,KAAL,GAAa,WAAb;AACA,UAAKC,IAAL,GAAY,cAAZ;;AAEA,QAAMC,gBAAgB;AACpBC,eAAS;AACPC,wBAAgB,wBADT;AAEPC,oBAAY,aAFL;AAGPC,gBAAQ,QAHD;AAIPC,oBAAY,mBAJL;AAKPC,8BAAsB,+CALf;AAMPC,wBAAgB,gBANT;AAOPC,oCAA4B,2BAPrB;AAQPC,qCAA6B,oBARtB;AASPC,kBAAU,WATH;AAUPC,oBAAY,aAVL;AAWPC,cAAM,MAXC;AAYPC,cAAM,MAZC;AAaPC,oBAAY,aAbL;AAcPC,kBAAU,WAdH;AAePC,iBAAS,SAfF;AAgBPC,2BAAmB,qBAhBZ;AAiBPC,mBAAW,YAjBJ;AAkBPC,kBAAU,WAlBH;AAmBPC,yBAAiB,mEAnBV;AAoBPC,mBAAW,2BApBJ;AAqBPC,gBAAQ,QArBD;AAsBPC,sBAAc,qCAtBP;AAuBPC,+BAAuB,0BAvBhB;AAwBPC,2BAAmB,sBAxBZ;AAyBPC,0BAAkB,uCAzBX;AA0BPC,sBAAc;AACZ,aAAG,4BADS;AAEZ,aAAG;AAFS,SA1BP;AA8BPC,yBAAiB;AACf,aAAG,6BADY;AAEf,aAAG;AAFY,SA9BV;AAkCPC,qBAAa;AACX,aAAG,0CADQ;AAEX,aAAG;AAFQ;AAlCN;;AAyCX;AA1CsB,KAAtB,CA2CA,IAAMC,iBAAiB;AACrBC,cAAQ,MADa;AAErBC,kBAAY,EAFS;AAGrBC,eAAS,oBAHY;AAIrBC,cAAQ,KAJa;AAKrBC,aAAO,GALc;AAMrBC,cAAQ,GANa;AAOrBC,sBAAgB,GAPK;AAQrB9C,sBAAgBA,cARK;AASrB+C,2BAAqB,KATA;AAUrBC,wBAAkB,KAVG;AAWrBC,+BAAyB,KAXJ;AAYrBC,YAAM,IAZe;AAarBC,gCAA0B,KAbL;AAcrBC,wBAAkB,KAdG;AAerBC,uBAAiB,KAfI;AAgBrBC,iCAA2B,KAhBN;AAiBrBC,sCAAgC,IAjBX;AAkBrBC,2BAAqB;AAAA,eAAM,MAAK5C,UAAL,EAAN;AAAA,OAlBA;AAmBrB6C,cAAQhD;;AAGV;AAtBuB,KAAvB,CAuBA,MAAKJ,IAAL,GAAY,SAAc,EAAd,EAAkBkC,cAAlB,EAAkClC,IAAlC,CAAZ;;AAEA,UAAKoD,MAAL,GAAc,SAAc,EAAd,EAAkBhD,aAAlB,EAAiC,MAAKJ,IAAL,CAAUoD,MAA3C,CAAd;AACA,UAAKA,MAAL,CAAY/C,OAAZ,GAAsB,SAAc,EAAd,EAAkBD,cAAcC,OAAhC,EAAyC,MAAKL,IAAL,CAAUoD,MAAV,CAAiB/C,OAA1D,CAAtB;;AAEA,UAAKgD,UAAL,GAAkB,IAAInE,UAAJ,CAAe,EAACkE,QAAQ,MAAKA,MAAd,EAAf,CAAlB;AACA,UAAKE,IAAL,GAAY,MAAKD,UAAL,CAAgBE,SAAhB,CAA0BC,IAA1B,CAA+B,MAAKH,UAApC,CAAZ;;AAEA,UAAKI,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,OAAjB;AACA,UAAKjD,UAAL,GAAkB,MAAKA,UAAL,CAAgBiD,IAAhB,OAAlB;AACA,UAAKE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBF,IAAvB,OAAzB;AACA,UAAKG,WAAL,GAAmB,MAAKA,WAAL,CAAiBH,IAAjB,OAAnB;;AAEA,UAAKI,SAAL,GAAiB,MAAKA,SAAL,CAAeJ,IAAf,OAAjB;AACA,UAAKK,aAAL,GAAqB,MAAKA,aAAL,CAAmBL,IAAnB,OAArB;AACA,UAAKM,SAAL,GAAiB,MAAKA,SAAL,CAAeN,IAAf,OAAjB;AACA,UAAKO,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBP,IAAvB,OAAzB;AACA,UAAKQ,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBR,IAAzB,OAA3B;AACA,UAAKS,aAAL,GAAqB,MAAKA,aAAL,CAAmBT,IAAnB,OAArB;;AAEA,UAAKU,UAAL,GAAkB,MAAKA,UAAL,CAAgBV,IAAhB,OAAlB;AACA,UAAKW,SAAL,GAAiB,MAAKA,SAAL,CAAeX,IAAf,OAAjB;AACA,UAAKY,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBZ,IAAxB,OAA1B;AACA,UAAKa,cAAL,GAAsB,MAAKA,cAAL,CAAoBb,IAApB,OAAtB;AACA,UAAKc,UAAL,GAAkB,MAAKA,UAAL,CAAgBd,IAAhB,OAAlB;AACA,UAAKe,WAAL,GAAmB,MAAKA,WAAL,CAAiBf,IAAjB,OAAnB;AACA,UAAKgB,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBhB,IAAvB,OAAzB;AACA,UAAKiB,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BjB,IAA5B,OAA9B;AACA,UAAKkB,MAAL,GAAc,MAAKA,MAAL,CAAYlB,IAAZ,OAAd;AACA,UAAKmB,OAAL,GAAe,MAAKA,OAAL,CAAanB,IAAb,OAAf;AArGuB;AAsGxB;;AAvGH,sBAyGEI,SAzGF,sBAyGagB,MAzGb,EAyGqB;AACjB,QAAMC,iBAAiBD,OAAO3E,EAAP,IAAa2E,OAAOE,WAAP,CAAmB7D,IAAvD;AACA,QAAM8D,mBAAmBH,OAAO1E,KAAP,IAAgB2E,cAAzC;AACA,QAAMG,mBAAmBJ,OAAOzE,IAAhC;;AAEA,QAAI6E,qBAAqB,UAArB,IACAA,qBAAqB,mBADrB,IAEAA,qBAAqB,WAFzB,EAEsC;AACpC,UAAIC,MAAM,+FAAV;AACA,WAAKlF,IAAL,CAAUmF,GAAV,CAAcD,GAAd;AACA;AACD;;AAED,QAAM9C,SAAS;AACblC,UAAI4E,cADS;AAEb5D,YAAM8D,gBAFO;AAGb5E,YAAM6E;AAHO,KAAf;;AAMA,QAAMG,QAAQ,KAAKC,cAAL,EAAd;AACA,QAAMC,aAAaF,MAAMG,OAAN,CAAcC,KAAd,EAAnB;AACAF,eAAWG,IAAX,CAAgBrD,MAAhB;;AAEA,SAAKsD,cAAL,CAAoB;AAClBH,eAASD;AADS,KAApB;;AAIA,WAAO,KAAKK,EAAZ;AACD,GArIH;;AAAA,sBAuIE7B,aAvIF,4BAuImB;AACf,SAAK4B,cAAL,CAAoB;AAClBE,mBAAa;AADK,KAApB;AAGD,GA3IH;;AAAA,sBA6IE7B,SA7IF,sBA6Ia7D,EA7Ib,EA6IiB;AAAA,0BACO,KAAKmF,cAAL,EADP;AAAA,QACLE,OADK,mBACLA,OADK;;AAGb,QAAMK,cAAcL,QAAQM,MAAR,CAAe,UAACzD,MAAD,EAAY;AAC7C,aAAOA,OAAOhC,IAAP,KAAgB,UAAhB,IAA8BgC,OAAOlC,EAAP,KAAcA,EAAnD;AACD,KAFmB,EAEjB,CAFiB,CAApB;;AAIA,SAAKwF,cAAL,CAAoB;AAClBE,mBAAaA;AADK,KAApB;AAGD,GAvJH;;AAAA,sBAyJEjC,iBAzJF,gCAyJuB;AACnB,QAAI,KAAK1D,IAAL,CAAUmD,mBAAd,EAAmC;AACjC,aAAO,KAAKnD,IAAL,CAAUmD,mBAAV,EAAP;AACD,KAFD,MAEO;AACL,WAAK5C,UAAL;AACD;AACF,GA/JH;;AAAA,sBAiKEwD,iBAjKF,gCAiKuB;AACnB,QAAM8B,QAAQ,KAAKH,EAAL,CAAQI,gBAAR,CAAyBlG,kBAAzB,CAAd;AACA,WAAOmG,OAAOC,IAAP,CAAYH,KAAZ,EAAmBI,GAAnB,CAAuB,UAACC,GAAD;AAAA,aAASL,MAAMK,GAAN,CAAT;AAAA,KAAvB,CAAP;AACD,GApKH;;AAAA,sBAsKElC,mBAtKF,kCAsKyB;AACrB,QAAMmC,iBAAiB,KAAKpC,iBAAL,EAAvB;AACA,QAAIoC,eAAeC,MAAnB,EAA2BD,eAAe,CAAf,EAAkBE,KAAlB;AAC5B,GAzKH;;AAAA,sBA2KEpC,aA3KF,0BA2KiBqC,KA3KjB,EA2KwB;AACpB,QAAIH,iBAAiB,KAAKpC,iBAAL,EAArB;AACA,QAAIwC,mBAAmBJ,eAAeK,OAAf,CAAuBC,SAASC,aAAhC,CAAvB;;AAEA,QAAIJ,MAAMK,QAAN,IAAkBJ,qBAAqB,CAA3C,EAA8C;AAC5CJ,qBAAeA,eAAeC,MAAf,GAAwB,CAAvC,EAA0CC,KAA1C;AACAC,YAAMM,cAAN;AACD;;AAED,QAAI,CAACN,MAAMK,QAAP,IAAmBJ,qBAAqBJ,eAAeC,MAAf,GAAwB,CAApE,EAAuE;AACrED,qBAAe,CAAf,EAAkBE,KAAlB;AACAC,YAAMM,cAAN;AACD;AACF,GAxLH;;AAAA,sBA0LEnD,SA1LF,wBA0Le;AACX,SAAKgC,cAAL,CAAoB;AAClBoB,gBAAU;AADQ,KAApB;;AAIA;AACA,SAAKC,mBAAL,GAA2BC,OAAOC,OAAlC;AACA;AACA,SAAKC,kBAAL,GAA0BR,SAASC,aAAnC;;AAEA,QAAI,KAAK1G,IAAL,CAAUkD,8BAAd,EAA8C;AAC5CuD,eAASS,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,uBAA5B;AACD;;AAED,SAAK3C,sBAAL;AACA,SAAKT,mBAAL;AACD,GA1MH;;AAAA,sBA4MEzD,UA5MF,yBA4MgB;AACZ,SAAKkF,cAAL,CAAoB;AAClBoB,gBAAU;AADQ,KAApB;;AAIA,QAAI,KAAK7G,IAAL,CAAUkD,8BAAd,EAA8C;AAC5CuD,eAASS,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,uBAA/B;AACD;;AAED,SAAKJ,kBAAL,CAAwBZ,KAAxB;AACD,GAtNH;;AAAA,sBAwNE1C,WAxNF,0BAwNiB;AACb,WAAO,CAAC,KAAKyB,cAAL,GAAsByB,QAAvB,IAAmC,KAA1C;AACD,GA1NH;;AAAA,sBA4NE1C,SA5NF,sBA4NamC,KA5Nb,EA4NoB;AAChB;AACA,QAAIA,MAAMgB,OAAN,KAAkB,EAAtB,EAA0B,KAAK5D,iBAAL,CAAuB4C,KAAvB;AAC1B;AACA,QAAIA,MAAMgB,OAAN,KAAkB,CAAtB,EAAyB,KAAKrD,aAAL,CAAmBqC,KAAnB;AAC1B,GAjOH;;AAAA,sBAmOElC,kBAnOF,iCAmOwB;AACpB,QAAI,KAAKpE,IAAL,CAAU8C,wBAAd,EAAwC,KAAKY,iBAAL;AACzC,GArOH;;AAAA,sBAuOEa,WAvOF,wBAuOegD,EAvOf,EAuOmB;AAAA;;AACf,QAAMC,QAAQ/H,QAAQ8H,GAAGE,aAAH,CAAiBC,KAAzB,CAAd;AACAF,UAAMG,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,UAAIA,KAAKC,IAAL,KAAc,MAAlB,EAA0B;;AAE1B,UAAMC,OAAOF,KAAKG,SAAL,EAAb;AACA,UAAI,CAACD,IAAL,EAAW;AACT,eAAK/H,IAAL,CAAUmF,GAAV,CAAc,qDAAd;AACA,eAAKnF,IAAL,CAAUiI,IAAV,CAAe,oBAAf,EAAqC,OAArC;AACA;AACD;AACD,aAAKjI,IAAL,CAAUmF,GAAV,CAAc,yBAAd;AACA,aAAKnF,IAAL,CAAUkI,OAAV,CAAkB;AAChBC,gBAAQ,OAAKjI,EADG;AAEhBgB,cAAM2G,KAAK3G,IAFK;AAGhBd,cAAMyH,KAAKzH,IAHK;AAIhBgI,cAAML;AAJU,OAAlB,EAKGM,KALH,CAKS,YAAM;AACb;AACD,OAPD;AAQD,KAlBD;AAmBD,GA5PH;;AAAA,sBA8PE5D,iBA9PF,8BA8PqB+C,EA9PrB,EA8PyB;AAAA;;AACrBA,OAAGX,cAAH;AACA,QAAMY,QAAQ/H,QAAQ8H,GAAGpF,MAAH,CAAUqF,KAAlB,CAAd;;AAEAA,UAAMG,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,aAAK7H,IAAL,CAAUkI,OAAV,CAAkB;AAChBC,gBAAQ,OAAKjI,EADG;AAEhBgB,cAAM2G,KAAK3G,IAFK;AAGhBd,cAAMyH,KAAKzH,IAHK;AAIhBgI,cAAMP;AAJU,OAAlB,EAKGQ,KALH,CAKS,YAAM;AACb;AACD,OAPD;AAQD,KATD;AAUD,GA5QH;;AAAA,sBA8QElE,UA9QF,yBA8QgB;AAAA;;AACZ;AACA,QAAMmE,mBAAmB7I,mBAAmB,KAAKQ,IAAL,CAAUqC,OAA7B,CAAzB;AACA,QAAI,CAAC,KAAKrC,IAAL,CAAUsC,MAAX,IAAqB+F,gBAAzB,EAA2C;AACzCA,uBAAiBV,OAAjB,CAAyB;AAAA,eAAWtF,QAAQiG,gBAAR,CAAyB,OAAzB,EAAkC,OAAK7E,SAAvC,CAAX;AAAA,OAAzB;AACD;;AAED,QAAI,CAAC,KAAKzD,IAAL,CAAUsC,MAAX,IAAqB,CAAC+F,gBAA1B,EAA4C;AAC1C,WAAKtI,IAAL,CAAUmF,GAAV,CAAc,gJAAd;AACD;;AAED,QAAI,CAAC,KAAKlF,IAAL,CAAUsC,MAAf,EAAuB;AACrBmE,eAAS6B,gBAAT,CAA0B,SAA1B,EAAqC,KAAKnE,SAA1C;AACD;;AAED;AACA,SAAKoE,sBAAL,GAA8BpJ,SAAS,KAAKuG,EAAd,EAAkB,UAAC8B,KAAD,EAAW;AACzD,aAAKlD,UAAL,CAAgBkD,KAAhB;AACD,KAF6B,CAA9B;;AAIA,SAAKzH,IAAL,CAAUyI,EAAV,CAAa,qBAAb,EAAoC,KAAKnE,cAAzC;;AAEA,SAAKI,sBAAL;AACAsC,WAAOuB,gBAAP,CAAwB,QAAxB,EAAkC,KAAK7D,sBAAvC;AACD,GAtSH;;AAAA,sBAwSEgE,YAxSF,2BAwSkB;AAAA;;AACd,QAAMJ,mBAAmB7I,mBAAmB,KAAKQ,IAAL,CAAUqC,OAA7B,CAAzB;AACA,QAAI,CAAC,KAAKrC,IAAL,CAAUsC,MAAX,IAAqB+F,gBAAzB,EAA2C;AACzCA,uBAAiBV,OAAjB,CAAyB;AAAA,eAAWtF,QAAQqG,mBAAR,CAA4B,OAA5B,EAAqC,OAAKjF,SAA1C,CAAX;AAAA,OAAzB;AACD;;AAED,QAAI,CAAC,KAAKzD,IAAL,CAAUsC,MAAf,EAAuB;AACrBmE,eAASiC,mBAAT,CAA6B,SAA7B,EAAwC,KAAKvE,SAA7C;AACD;;AAED,SAAKoE,sBAAL;AACA,SAAKxI,IAAL,CAAU4I,GAAV,CAAc,qBAAd,EAAqC,KAAKtE,cAA1C;AACA0C,WAAO2B,mBAAP,CAA2B,QAA3B,EAAqC,KAAKjE,sBAA1C;AACD,GArTH;;AAAA,sBAuTEA,sBAvTF,qCAuT4B;AACxB,QAAMmE,cAAc,KAAKlD,EAAL,CAAQmD,aAAR,CAAsB,uBAAtB,CAApB;AACA,SAAK9I,IAAL,CAAUmF,GAAV,uBAAkC0D,YAAYE,WAA9C;;AAEA,SAAKrD,cAAL,CAAoB;AAClBsD,sBAAgBH,YAAYE;AADV,KAApB;AAGD,GA9TH;;AAAA,sBAgUEzE,cAhUF,2BAgUkB2E,MAhUlB,EAgU0B;AACtB,SAAKvD,cAAL,CAAoB;AAClBwD,mBAAaD,UAAU;AADL,KAApB;AAGD,GApUH;;AAAA,sBAsUE1E,UAtUF,uBAsUckD,KAtUd,EAsUqB;AAAA;;AACjB,SAAKzH,IAAL,CAAUmF,GAAV,CAAc,gCAAd;;AAEAsC,UAAMG,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,aAAK7H,IAAL,CAAUkI,OAAV,CAAkB;AAChBC,gBAAQ,OAAKjI,EADG;AAEhBgB,cAAM2G,KAAK3G,IAFK;AAGhBd,cAAMyH,KAAKzH,IAHK;AAIhBgI,cAAMP;AAJU,OAAlB,EAKGQ,KALH,CAKS,YAAM;AACb;AACD,OAPD;AAQD,KATD;AAUD,GAnVH;;AAAA,sBAqVE1D,MArVF,mBAqVUS,KArVV,EAqViB;AAAA;;AACb,QAAM+D,cAAc,KAAK9D,cAAL,EAApB;AACA,QAAMoC,QAAQrC,MAAMqC,KAApB;;AAEA,QAAM2B,WAAWpD,OAAOC,IAAP,CAAYwB,KAAZ,EAAmB5B,MAAnB,CAA0B,UAACgC,IAAD,EAAU;AACnD,aAAO,CAACJ,MAAMI,IAAN,EAAYwB,QAAZ,CAAqBC,aAA7B;AACD,KAFgB,CAAjB;AAGA,QAAMC,kBAAkBvD,OAAOC,IAAP,CAAYwB,KAAZ,EAAmB5B,MAAnB,CAA0B,UAACgC,IAAD,EAAU;AAC1D,aAAO,CAACJ,MAAMI,IAAN,EAAYwB,QAAZ,CAAqBG,cAAtB,IACA/B,MAAMI,IAAN,EAAYwB,QAAZ,CAAqBC,aADrB,IAEA,CAAC7B,MAAMI,IAAN,EAAY4B,QAFpB;AAGD,KAJuB,CAAxB;;AAMA,QAAIC,uBAAuB,EAA3B;AACAH,oBAAgB3B,OAAhB,CAAwB,UAACC,IAAD,EAAU;AAChC6B,2BAAqBjE,IAArB,CAA0BgC,MAAMI,IAAN,CAA1B;AACD,KAFD;;AAIA,QAAI8B,YAAY,CAAhB;AACA,QAAIC,oBAAoB,CAAxB;AACAF,yBAAqB9B,OAArB,CAA6B,UAACC,IAAD,EAAU;AACrC8B,kBAAYA,aAAa9B,KAAKwB,QAAL,CAAcQ,UAAd,IAA4B,CAAzC,CAAZ;AACAD,0BAAoBA,qBAAqB/B,KAAKwB,QAAL,CAAcS,aAAd,IAA+B,CAApD,CAApB;AACD,KAHD;AAIAH,gBAAYhK,YAAYgK,SAAZ,CAAZ;AACAC,wBAAoBjK,YAAYiK,iBAAZ,CAApB;;AAEA,QAAMG,+BAA+B,SAA/BA,4BAA+B,CAAC3H,MAAD,EAAY;AAC/C,UAAMyC,SAAS,OAAK7E,IAAL,CAAUgK,SAAV,CAAoB5H,OAAOlC,EAA3B,CAAf;AACA,aAAO,SAAc,EAAd,EAAkBkC,MAAlB,EAA0B;AAC/B6H,cAAMpF,OAAOoF,IAAP,IAAe,OAAKhK,IAAL,CAAUL,cADA;AAE/B+E,gBAAQE,OAAOF;AAFgB,OAA1B,CAAP;AAID,KAND;;AAQA,QAAMuF,cAAc,SAAdA,WAAc,CAAC9H,MAAD,EAAY;AAC9B,UAAMyC,SAAS,OAAK7E,IAAL,CAAUgK,SAAV,CAAoB5H,OAAOlC,EAA3B,CAAf;AACA;AACA,UAAI,OAAO2E,OAAOqF,WAAd,KAA8B,UAAlC,EAA8C;AAC5C,eAAO,IAAP;AACD;AACD,aAAOrF,OAAOqF,WAAP,EAAP;AACD,KAPD;;AASA,QAAMC,YAAYhB,YAAY5D,OAAZ,CACfM,MADe,CACR;AAAA,aAAUzD,OAAOhC,IAAP,KAAgB,UAAhB,IAA8B8J,YAAY9H,MAAZ,CAAxC;AAAA,KADQ,EAEf8D,GAFe,CAEX6D,4BAFW,CAAlB;;AAIA,QAAMK,qBAAqBjB,YAAY5D,OAAZ,CACxBM,MADwB,CACjB;AAAA,aAAUzD,OAAOhC,IAAP,KAAgB,mBAA1B;AAAA,KADiB,EAExB8F,GAFwB,CAEpB6D,4BAFoB,CAA3B;;AAIA,QAAMM,cAAc,SAAdA,WAAc,CAAC7C,EAAD,EAAQ;AAC1B,aAAKxH,IAAL,CAAUS,MAAV,GAAmB4H,KAAnB,CAAyB,UAACiC,GAAD,EAAS;AAChC;AACA,eAAKtK,IAAL,CAAUmF,GAAV,CAAcmF,IAAIC,KAAJ,IAAaD,IAAIE,OAAjB,IAA4BF,GAA1C;AACD,OAHD;AAID,KALD;;AAOA,QAAMG,eAAe,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC/B,aAAK1K,IAAL,CAAU2K,IAAV,CAAe,eAAf,EAAgCD,MAAhC;AACA,aAAK1K,IAAL,CAAUmB,UAAV,CAAqBuJ,MAArB;AACD,KAHD;;AAKA,QAAME,eAAe,SAAfA,YAAe,CAACF,MAAD,EAAY;AAC/B,aAAK1K,IAAL,CAAU2K,IAAV,CAAe,qBAAf,EAAsCD,MAAtC;AACD,KAFD;;AAIA,QAAMG,eAAe,SAAfA,YAAe,CAACC,IAAD,EAAOJ,MAAP,EAAkB;AACrC,aAAK1K,IAAL,CAAU+K,WAAV,CAAsBL,MAAtB,EAA8BI,IAA9B;AACA,aAAK9K,IAAL,CAAU2K,IAAV,CAAe,qBAAf;AACD,KAHD;;AAKA,WAAOtL,YAAY;AACjB+F,aAAOA,KADU;AAEjB4F,aAAO7B,WAFU;AAGjBC,gBAAUA,QAHO;AAIjB3B,aAAOA,KAJU;AAKjBwD,sBAAgBjF,OAAOC,IAAP,CAAYwB,KAAZ,EAAmBpB,MALlB;AAMjB6E,qBAAe9F,MAAM8F,aANJ;AAOjBf,iBAAWA,SAPM;AAQjBvE,mBAAauD,YAAYvD,WARR;AASjBoE,iBAAW,KAAKhK,IAAL,CAAUgK,SATJ;AAUjBI,0BAAoBA,kBAVH;AAWjBe,mBAAa,KAAKnL,IAAL,CAAUC,IAAV,CAAekL,WAXX;AAYjBvI,wBAAkB,KAAK3C,IAAL,CAAU2C,gBAZX;AAajB1C,UAAI,KAAKA,EAbQ;AAcjBM,kBAAY,KAAKmD,iBAdA;AAejBU,0BAAoB,KAAKA,kBAfR;AAgBjBI,yBAAmB,KAAKA,iBAhBP;AAiBjBD,mBAAa,KAAKA,WAjBD;AAkBjB7B,2BAAqB,KAAK1C,IAAL,CAAU0C,mBAlBd;AAmBjBJ,cAAQ,KAAKtC,IAAL,CAAUsC,MAnBD;AAoBjBwB,iBAAW,KAAKA,SApBC;AAqBjBD,qBAAe,KAAKA,aArBH;AAsBjBqB,WAAK,KAAKnF,IAAL,CAAUmF,GAtBE;AAuBjB5B,YAAM,KAAKA,IAvBM;AAwBjB2E,eAAS,KAAKlI,IAAL,CAAUkI,OAxBF;AAyBjB/G,kBAAY,KAAKnB,IAAL,CAAUmB,UAzBL;AA0BjB8G,YAAM,KAAKjI,IAAL,CAAUiI,IA1BC;AA2BjBnF,YAAM,KAAK7C,IAAL,CAAU6C,IA3BC;AA4BjBT,kBAAY,KAAKgD,cAAL,GAAsBhD,UA5BjB;AA6BjB+I,wBAAkB,KAAKpL,IAAL,CAAUoF,KAAV,CAAgBiG,YAAhB,CAA6BD,gBAA7B,IAAiD,KA7BlD;AA8BjBf,mBAAaA,WA9BI;AA+BjBiB,mBAAa,KAAKtL,IAAL,CAAUuL,WA/BN;AAgCjBC,mBAAa,KAAKxL,IAAL,CAAUwL,WAhCN;AAiCjBf,oBAAcA,YAjCG;AAkCjBvB,mBAAaC,YAAYD,WAlCR;AAmCjB0B,oBAAcA,YAnCG;AAoCjBC,oBAAcA,YApCG;AAqCjBnG,8BAAwB,KAAKA,sBArCZ;AAsCjB+G,gBAAU,KAAKxL,IAAL,CAAUwL,QAtCH;AAuCjBC,iBAAW,KAAKzL,IAAL,CAAUyL,SAvCJ;AAwCjBC,oBAAcxC,YAAYH,cAxCT;AAyCjB4C,cAAQzC,YAAYH,cAAZ,GAA6B;AAzCpB,KAAZ,CAAP;AA2CD,GAzcH;;AAAA,sBA2cE6C,uBA3cF,sCA2c6B;AAAA;;AACzB,SAAK7L,IAAL,CAAU8L,cAAV,CAAyB,UAACjH,MAAD,EAAY;AACnC,UAAIA,UAAU,CAACA,OAAOzC,MAAlB,IAA4ByC,OAAO5E,IAAnC,IAA2C4E,OAAO5E,IAAP,CAAYmC,MAAZ,KAAuB,OAAK2C,WAA3E,EAAwF;AACtF,eAAKlB,SAAL,CAAegB,MAAf;AACD;AACF,KAJD;AAKD,GAjdH;;AAAA,sBAmdED,OAndF,sBAmda;AAAA;;AACT;AACA,SAAKc,cAAL,CAAoB;AAClBoB,gBAAU,IADQ;AAElB8D,oBAAc,KAFI;AAGlBhF,mBAAa,KAHK;AAIlBvD,kBAAY,KAAKpC,IAAL,CAAUoC,UAJJ;AAKlBkD,eAAS;AALS,KAApB;;AAQA,QAAMnD,SAAS,KAAKnC,IAAL,CAAUmC,MAAzB;AACA,QAAIA,MAAJ,EAAY;AACV,WAAK2J,KAAL,CAAW3J,MAAX,EAAmB,IAAnB;AACD;;AAED,QAAM4J,UAAU,KAAK/L,IAAL,CAAU+L,OAAV,IAAqB,EAArC;AACAA,YAAQpE,OAAR,CAAgB,UAACqE,QAAD,EAAc;AAC5B,UAAMpH,SAAS,OAAK7E,IAAL,CAAUgK,SAAV,CAAoBiC,QAApB,CAAf;AACA,UAAIpH,MAAJ,EAAYA,OAAOkH,KAAP,SAAmBlH,MAAnB;AACb,KAHD;;AAKA,QAAI,CAAC,KAAK5E,IAAL,CAAU+C,gBAAf,EAAiC;AAC/B,WAAKhD,IAAL,CAAUkM,GAAV,CAAc5M,SAAd,EAAyB;AACvB8C,gBAAQ,IADe;AAEvBQ,0BAAkB,KAAK3C,IAAL,CAAU2C,gBAFL;AAGvBuJ,yBAAiB,KAAKlM,IAAL,CAAU4C,uBAHJ;AAIvBQ,gBAAQ,KAAKpD,IAAL,CAAUoD;AAJK,OAAzB;AAMD;;AAED,QAAI,CAAC,KAAKpD,IAAL,CAAUgD,eAAf,EAAgC;AAC9B,WAAKjD,IAAL,CAAUkM,GAAV,CAAc3M,QAAd,EAAwB;AACtB6C,gBAAQ;AADc,OAAxB;AAGD;;AAED,QAAI,CAAC,KAAKnC,IAAL,CAAUiD,yBAAf,EAA0C;AACxC,WAAKlD,IAAL,CAAUkM,GAAV,CAAc1M,kBAAd,EAAkC;AAChCkD,wBAAgB,KAAKzC,IAAL,CAAUyC;AADM,OAAlC;AAGD;;AAED,SAAKmJ,uBAAL;;AAEA,SAAK1H,UAAL;AACD,GAhgBH;;AAAA,sBAkgBEiI,SAlgBF,wBAkgBe;AAAA;;AACX,QAAI,CAAC,KAAKnM,IAAL,CAAUgD,eAAf,EAAgC;AAC9B,UAAMoJ,WAAW,KAAKrM,IAAL,CAAUgK,SAAV,CAAoB,UAApB,CAAjB;AACA;AACA;AACA,UAAIqC,QAAJ,EAAc,KAAKrM,IAAL,CAAUsM,YAAV,CAAuBD,QAAvB;AACf;;AAED,QAAI,CAAC,KAAKpM,IAAL,CAAU+C,gBAAf,EAAiC;AAC/B,UAAMuJ,YAAY,KAAKvM,IAAL,CAAUgK,SAAV,CAAoB,WAApB,CAAlB;AACA,UAAIuC,SAAJ,EAAe,KAAKvM,IAAL,CAAUsM,YAAV,CAAuBC,SAAvB;AAChB;;AAED,QAAI,CAAC,KAAKtM,IAAL,CAAUiD,yBAAf,EAA0C;AACxC,UAAMsJ,YAAY,KAAKxM,IAAL,CAAUgK,SAAV,CAAoB,oBAApB,CAAlB;AACA,UAAIwC,SAAJ,EAAe,KAAKxM,IAAL,CAAUsM,YAAV,CAAuBE,SAAvB;AAChB;;AAED,QAAMR,UAAU,KAAK/L,IAAL,CAAU+L,OAAV,IAAqB,EAArC;AACAA,YAAQpE,OAAR,CAAgB,UAACqE,QAAD,EAAc;AAC5B,UAAMpH,SAAS,QAAK7E,IAAL,CAAUgK,SAAV,CAAoBiC,QAApB,CAAf;AACA,UAAIpH,MAAJ,EAAYA,OAAO4H,OAAP;AACb,KAHD;;AAKA,SAAKA,OAAL;AACA,SAAK/D,YAAL;AACD,GA5hBH;;AAAA;AAAA,EAAyCzJ,MAAzC","file":"index.js","sourcesContent":["const Plugin = require('../../core/Plugin')\nconst Translator = require('../../core/Translator')\nconst dragDrop = require('drag-drop')\nconst DashboardUI = require('./Dashboard')\nconst StatusBar = require('../StatusBar')\nconst Informer = require('../Informer')\nconst ThumbnailGenerator = require('../ThumbnailGenerator')\nconst { findAllDOMElements, toArray } = require('../../core/Utils')\nconst prettyBytes = require('prettier-bytes')\nconst { defaultTabIcon } = require('./icons')\n\n// Some code for managing focus was adopted from https://github.com/ghosh/micromodal\n// MIT licence, https://github.com/ghosh/micromodal/blob/master/LICENSE.md\n// Copyright (c) 2017 Indrashish Ghosh\nconst FOCUSABLE_ELEMENTS = [\n  'a[href]',\n  'area[href]',\n  'input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])',\n  'select:not([disabled]):not([aria-hidden])',\n  'textarea:not([disabled]):not([aria-hidden])',\n  'button:not([disabled]):not([aria-hidden])',\n  'iframe',\n  'object',\n  'embed',\n  '[contenteditable]',\n  '[tabindex]:not([tabindex^=\"-\"])'\n]\n\n/**\n * Dashboard UI with previews, metadata editing, tabs for various services and more\n */\nmodule.exports = class Dashboard extends Plugin {\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.id = this.opts.id || 'Dashboard'\n    this.title = 'Dashboard'\n    this.type = 'orchestrator'\n\n    const defaultLocale = {\n      strings: {\n        selectToUpload: 'Select files to upload',\n        closeModal: 'Close Modal',\n        upload: 'Upload',\n        importFrom: 'Import files from',\n        dashboardWindowTitle: 'Uppy Dashboard Window (Press escape to close)',\n        dashboardTitle: 'Uppy Dashboard',\n        copyLinkToClipboardSuccess: 'Link copied to clipboard.',\n        copyLinkToClipboardFallback: 'Copy the URL below',\n        copyLink: 'Copy link',\n        fileSource: 'File source',\n        done: 'Done',\n        name: 'Name',\n        removeFile: 'Remove file',\n        editFile: 'Edit file',\n        editing: 'Editing',\n        finishEditingFile: 'Finish editing file',\n        localDisk: 'Local Disk',\n        myDevice: 'My Device',\n        dropPasteImport: 'Drop files here, paste, import from one of the locations above or',\n        dropPaste: 'Drop files here, paste or',\n        browse: 'browse',\n        fileProgress: 'File progress: upload speed and ETA',\n        numberOfSelectedFiles: 'Number of selected files',\n        uploadAllNewFiles: 'Upload all new files',\n        emptyFolderAdded: 'No files were added from empty folder',\n        uploadXFiles: {\n          0: 'Upload %{smart_count} file',\n          1: 'Upload %{smart_count} files'\n        },\n        uploadXNewFiles: {\n          0: 'Upload +%{smart_count} file',\n          1: 'Upload +%{smart_count} files'\n        },\n        folderAdded: {\n          0: 'Added %{smart_count} file from %{folder}',\n          1: 'Added %{smart_count} files from %{folder}'\n        }\n      }\n    }\n\n    // set default options\n    const defaultOptions = {\n      target: 'body',\n      metaFields: [],\n      trigger: '#uppy-select-files',\n      inline: false,\n      width: 750,\n      height: 550,\n      thumbnailWidth: 280,\n      defaultTabIcon: defaultTabIcon,\n      showProgressDetails: false,\n      hideUploadButton: false,\n      hideProgressAfterFinish: false,\n      note: null,\n      closeModalOnClickOutside: false,\n      disableStatusBar: false,\n      disableInformer: false,\n      disableThumbnailGenerator: false,\n      disablePageScrollWhenModalOpen: true,\n      onRequestCloseModal: () => this.closeModal(),\n      locale: defaultLocale\n    }\n\n    // merge default options with the ones set by user\n    this.opts = Object.assign({}, defaultOptions, opts)\n\n    this.locale = Object.assign({}, defaultLocale, this.opts.locale)\n    this.locale.strings = Object.assign({}, defaultLocale.strings, this.opts.locale.strings)\n\n    this.translator = new Translator({locale: this.locale})\n    this.i18n = this.translator.translate.bind(this.translator)\n\n    this.openModal = this.openModal.bind(this)\n    this.closeModal = this.closeModal.bind(this)\n    this.requestCloseModal = this.requestCloseModal.bind(this)\n    this.isModalOpen = this.isModalOpen.bind(this)\n\n    this.addTarget = this.addTarget.bind(this)\n    this.hideAllPanels = this.hideAllPanels.bind(this)\n    this.showPanel = this.showPanel.bind(this)\n    this.getFocusableNodes = this.getFocusableNodes.bind(this)\n    this.setFocusToFirstNode = this.setFocusToFirstNode.bind(this)\n    this.maintainFocus = this.maintainFocus.bind(this)\n\n    this.initEvents = this.initEvents.bind(this)\n    this.onKeydown = this.onKeydown.bind(this)\n    this.handleClickOutside = this.handleClickOutside.bind(this)\n    this.handleFileCard = this.handleFileCard.bind(this)\n    this.handleDrop = this.handleDrop.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.updateDashboardElWidth = this.updateDashboardElWidth.bind(this)\n    this.render = this.render.bind(this)\n    this.install = this.install.bind(this)\n  }\n\n  addTarget (plugin) {\n    const callerPluginId = plugin.id || plugin.constructor.name\n    const callerPluginName = plugin.title || callerPluginId\n    const callerPluginType = plugin.type\n\n    if (callerPluginType !== 'acquirer' &&\n        callerPluginType !== 'progressindicator' &&\n        callerPluginType !== 'presenter') {\n      let msg = 'Dashboard: Modal can only be used by plugins of types: acquirer, progressindicator, presenter'\n      this.uppy.log(msg)\n      return\n    }\n\n    const target = {\n      id: callerPluginId,\n      name: callerPluginName,\n      type: callerPluginType\n    }\n\n    const state = this.getPluginState()\n    const newTargets = state.targets.slice()\n    newTargets.push(target)\n\n    this.setPluginState({\n      targets: newTargets\n    })\n\n    return this.el\n  }\n\n  hideAllPanels () {\n    this.setPluginState({\n      activePanel: false\n    })\n  }\n\n  showPanel (id) {\n    const { targets } = this.getPluginState()\n\n    const activePanel = targets.filter((target) => {\n      return target.type === 'acquirer' && target.id === id\n    })[0]\n\n    this.setPluginState({\n      activePanel: activePanel\n    })\n  }\n\n  requestCloseModal () {\n    if (this.opts.onRequestCloseModal) {\n      return this.opts.onRequestCloseModal()\n    } else {\n      this.closeModal()\n    }\n  }\n\n  getFocusableNodes () {\n    const nodes = this.el.querySelectorAll(FOCUSABLE_ELEMENTS)\n    return Object.keys(nodes).map((key) => nodes[key])\n  }\n\n  setFocusToFirstNode () {\n    const focusableNodes = this.getFocusableNodes()\n    if (focusableNodes.length) focusableNodes[0].focus()\n  }\n\n  maintainFocus (event) {\n    var focusableNodes = this.getFocusableNodes()\n    var focusedItemIndex = focusableNodes.indexOf(document.activeElement)\n\n    if (event.shiftKey && focusedItemIndex === 0) {\n      focusableNodes[focusableNodes.length - 1].focus()\n      event.preventDefault()\n    }\n\n    if (!event.shiftKey && focusedItemIndex === focusableNodes.length - 1) {\n      focusableNodes[0].focus()\n      event.preventDefault()\n    }\n  }\n\n  openModal () {\n    this.setPluginState({\n      isHidden: false\n    })\n\n    // save scroll position\n    this.savedScrollPosition = window.scrollY\n    // save active element, so we can restore focus when modal is closed\n    this.savedActiveElement = document.activeElement\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.add('uppy-Dashboard-isOpen')\n    }\n\n    this.updateDashboardElWidth()\n    this.setFocusToFirstNode()\n  }\n\n  closeModal () {\n    this.setPluginState({\n      isHidden: true\n    })\n\n    if (this.opts.disablePageScrollWhenModalOpen) {\n      document.body.classList.remove('uppy-Dashboard-isOpen')\n    }\n\n    this.savedActiveElement.focus()\n  }\n\n  isModalOpen () {\n    return !this.getPluginState().isHidden || false\n  }\n\n  onKeydown (event) {\n    // close modal on esc key press\n    if (event.keyCode === 27) this.requestCloseModal(event)\n    // maintainFocus on tab key press\n    if (event.keyCode === 9) this.maintainFocus(event)\n  }\n\n  handleClickOutside () {\n    if (this.opts.closeModalOnClickOutside) this.requestCloseModal()\n  }\n\n  handlePaste (ev) {\n    const files = toArray(ev.clipboardData.items)\n    files.forEach((file) => {\n      if (file.kind !== 'file') return\n\n      const blob = file.getAsFile()\n      if (!blob) {\n        this.uppy.log('[Dashboard] File pasted, but the file blob is empty')\n        this.uppy.info('Error pasting file', 'error')\n        return\n      }\n      this.uppy.log('[Dashboard] File pasted')\n      this.uppy.addFile({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: blob\n      }).catch(() => {\n        // Ignore\n      })\n    })\n  }\n\n  handleInputChange (ev) {\n    ev.preventDefault()\n    const files = toArray(ev.target.files)\n\n    files.forEach((file) => {\n      this.uppy.addFile({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      }).catch(() => {\n        // Ignore\n      })\n    })\n  }\n\n  initEvents () {\n    // Modal open button\n    const showModalTrigger = findAllDOMElements(this.opts.trigger)\n    if (!this.opts.inline && showModalTrigger) {\n      showModalTrigger.forEach(trigger => trigger.addEventListener('click', this.openModal))\n    }\n\n    if (!this.opts.inline && !showModalTrigger) {\n      this.uppy.log('Dashboard modal trigger not found. Make sure `trigger` is set in Dashboard options unless you are planning to call openModal() method yourself')\n    }\n\n    if (!this.opts.inline) {\n      document.addEventListener('keydown', this.onKeydown)\n    }\n\n    // Drag Drop\n    this.removeDragDropListener = dragDrop(this.el, (files) => {\n      this.handleDrop(files)\n    })\n\n    this.uppy.on('dashboard:file-card', this.handleFileCard)\n\n    this.updateDashboardElWidth()\n    window.addEventListener('resize', this.updateDashboardElWidth)\n  }\n\n  removeEvents () {\n    const showModalTrigger = findAllDOMElements(this.opts.trigger)\n    if (!this.opts.inline && showModalTrigger) {\n      showModalTrigger.forEach(trigger => trigger.removeEventListener('click', this.openModal))\n    }\n\n    if (!this.opts.inline) {\n      document.removeEventListener('keydown', this.onKeydown)\n    }\n\n    this.removeDragDropListener()\n    this.uppy.off('dashboard:file-card', this.handleFileCard)\n    window.removeEventListener('resize', this.updateDashboardElWidth)\n  }\n\n  updateDashboardElWidth () {\n    const dashboardEl = this.el.querySelector('.uppy-Dashboard-inner')\n    this.uppy.log(`Dashboard width: ${dashboardEl.offsetWidth}`)\n\n    this.setPluginState({\n      containerWidth: dashboardEl.offsetWidth\n    })\n  }\n\n  handleFileCard (fileId) {\n    this.setPluginState({\n      fileCardFor: fileId || false\n    })\n  }\n\n  handleDrop (files) {\n    this.uppy.log('[Dashboard] Files were dropped')\n\n    files.forEach((file) => {\n      this.uppy.addFile({\n        source: this.id,\n        name: file.name,\n        type: file.type,\n        data: file\n      }).catch(() => {\n        // Ignore\n      })\n    })\n  }\n\n  render (state) {\n    const pluginState = this.getPluginState()\n    const files = state.files\n\n    const newFiles = Object.keys(files).filter((file) => {\n      return !files[file].progress.uploadStarted\n    })\n    const inProgressFiles = Object.keys(files).filter((file) => {\n      return !files[file].progress.uploadComplete &&\n             files[file].progress.uploadStarted &&\n             !files[file].isPaused\n    })\n\n    let inProgressFilesArray = []\n    inProgressFiles.forEach((file) => {\n      inProgressFilesArray.push(files[file])\n    })\n\n    let totalSize = 0\n    let totalUploadedSize = 0\n    inProgressFilesArray.forEach((file) => {\n      totalSize = totalSize + (file.progress.bytesTotal || 0)\n      totalUploadedSize = totalUploadedSize + (file.progress.bytesUploaded || 0)\n    })\n    totalSize = prettyBytes(totalSize)\n    totalUploadedSize = prettyBytes(totalUploadedSize)\n\n    const attachRenderFunctionToTarget = (target) => {\n      const plugin = this.uppy.getPlugin(target.id)\n      return Object.assign({}, target, {\n        icon: plugin.icon || this.opts.defaultTabIcon,\n        render: plugin.render\n      })\n    }\n\n    const isSupported = (target) => {\n      const plugin = this.uppy.getPlugin(target.id)\n      // If the plugin does not provide a `supported` check, assume the plugin works everywhere.\n      if (typeof plugin.isSupported !== 'function') {\n        return true\n      }\n      return plugin.isSupported()\n    }\n\n    const acquirers = pluginState.targets\n      .filter(target => target.type === 'acquirer' && isSupported(target))\n      .map(attachRenderFunctionToTarget)\n\n    const progressindicators = pluginState.targets\n      .filter(target => target.type === 'progressindicator')\n      .map(attachRenderFunctionToTarget)\n\n    const startUpload = (ev) => {\n      this.uppy.upload().catch((err) => {\n        // Log error.\n        this.uppy.log(err.stack || err.message || err)\n      })\n    }\n\n    const cancelUpload = (fileID) => {\n      this.uppy.emit('upload-cancel', fileID)\n      this.uppy.removeFile(fileID)\n    }\n\n    const showFileCard = (fileID) => {\n      this.uppy.emit('dashboard:file-card', fileID)\n    }\n\n    const fileCardDone = (meta, fileID) => {\n      this.uppy.setFileMeta(fileID, meta)\n      this.uppy.emit('dashboard:file-card')\n    }\n\n    return DashboardUI({\n      state: state,\n      modal: pluginState,\n      newFiles: newFiles,\n      files: files,\n      totalFileCount: Object.keys(files).length,\n      totalProgress: state.totalProgress,\n      acquirers: acquirers,\n      activePanel: pluginState.activePanel,\n      getPlugin: this.uppy.getPlugin,\n      progressindicators: progressindicators,\n      autoProceed: this.uppy.opts.autoProceed,\n      hideUploadButton: this.opts.hideUploadButton,\n      id: this.id,\n      closeModal: this.requestCloseModal,\n      handleClickOutside: this.handleClickOutside,\n      handleInputChange: this.handleInputChange,\n      handlePaste: this.handlePaste,\n      showProgressDetails: this.opts.showProgressDetails,\n      inline: this.opts.inline,\n      showPanel: this.showPanel,\n      hideAllPanels: this.hideAllPanels,\n      log: this.uppy.log,\n      i18n: this.i18n,\n      addFile: this.uppy.addFile,\n      removeFile: this.uppy.removeFile,\n      info: this.uppy.info,\n      note: this.opts.note,\n      metaFields: this.getPluginState().metaFields,\n      resumableUploads: this.uppy.state.capabilities.resumableUploads || false,\n      startUpload: startUpload,\n      pauseUpload: this.uppy.pauseResume,\n      retryUpload: this.uppy.retryUpload,\n      cancelUpload: cancelUpload,\n      fileCardFor: pluginState.fileCardFor,\n      showFileCard: showFileCard,\n      fileCardDone: fileCardDone,\n      updateDashboardElWidth: this.updateDashboardElWidth,\n      maxWidth: this.opts.maxWidth,\n      maxHeight: this.opts.maxHeight,\n      currentWidth: pluginState.containerWidth,\n      isWide: pluginState.containerWidth > 400\n    })\n  }\n\n  discoverProviderPlugins () {\n    this.uppy.iteratePlugins((plugin) => {\n      if (plugin && !plugin.target && plugin.opts && plugin.opts.target === this.constructor) {\n        this.addTarget(plugin)\n      }\n    })\n  }\n\n  install () {\n    // Set default state for Modal\n    this.setPluginState({\n      isHidden: true,\n      showFileCard: false,\n      activePanel: false,\n      metaFields: this.opts.metaFields,\n      targets: []\n    })\n\n    const target = this.opts.target\n    if (target) {\n      this.mount(target, this)\n    }\n\n    const plugins = this.opts.plugins || []\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) plugin.mount(this, plugin)\n    })\n\n    if (!this.opts.disableStatusBar) {\n      this.uppy.use(StatusBar, {\n        target: this,\n        hideUploadButton: this.opts.hideUploadButton,\n        hideAfterFinish: this.opts.hideProgressAfterFinish,\n        locale: this.opts.locale\n      })\n    }\n\n    if (!this.opts.disableInformer) {\n      this.uppy.use(Informer, {\n        target: this\n      })\n    }\n\n    if (!this.opts.disableThumbnailGenerator) {\n      this.uppy.use(ThumbnailGenerator, {\n        thumbnailWidth: this.opts.thumbnailWidth\n      })\n    }\n\n    this.discoverProviderPlugins()\n\n    this.initEvents()\n  }\n\n  uninstall () {\n    if (!this.opts.disableInformer) {\n      const informer = this.uppy.getPlugin('Informer')\n      // Checking if this plugin exists, in case it was removed by uppy-core\n      // before the Dashboard was.\n      if (informer) this.uppy.removePlugin(informer)\n    }\n\n    if (!this.opts.disableStatusBar) {\n      const statusBar = this.uppy.getPlugin('StatusBar')\n      if (statusBar) this.uppy.removePlugin(statusBar)\n    }\n\n    if (!this.opts.disableThumbnailGenerator) {\n      const thumbnail = this.uppy.getPlugin('ThumbnailGenerator')\n      if (thumbnail) this.uppy.removePlugin(thumbnail)\n    }\n\n    const plugins = this.opts.plugins || []\n    plugins.forEach((pluginID) => {\n      const plugin = this.uppy.getPlugin(pluginID)\n      if (plugin) plugin.unmount()\n    })\n\n    this.unmount()\n    this.removeEvents()\n  }\n}\n"]}